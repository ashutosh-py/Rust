error: label without `#[primary_span]` field
  --> $DIR/subdiagnostic-derive.rs:51:1
   |
LL | / #[label(no_crate_example)]
LL | |
LL | | struct C {
LL | |     var: String,
LL | | }
   | |_^

error: diagnostic slug must be first argument of a `#[label(...)]` attribute
  --> $DIR/subdiagnostic-derive.rs:58:1
   |
LL | #[label]
   | ^^^^^^^^

error: `#[foo]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:67:1
   |
LL | #[foo]
   | ^^^^^^

error: `#[label = ...]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:77:1
   |
LL | #[label = "..."]
   | ^^^^^^^^^^^^^^^^

error: invalid nested attribute
  --> $DIR/subdiagnostic-derive.rs:86:9
   |
LL | #[label(bug = "...")]
   |         ^^^

error: diagnostic slug must be first argument of a `#[label(...)]` attribute
  --> $DIR/subdiagnostic-derive.rs:86:1
   |
LL | #[label(bug = "...")]
   | ^^^^^^^^^^^^^^^^^^^^^

error: unexpected literal in nested attribute, expected ident
  --> $DIR/subdiagnostic-derive.rs:96:9
   |
LL | #[label("...")]
   |         ^^^^^

error: invalid nested attribute
  --> $DIR/subdiagnostic-derive.rs:105:9
   |
LL | #[label(slug = 4)]
   |         ^^^^

error: diagnostic slug must be first argument of a `#[label(...)]` attribute
  --> $DIR/subdiagnostic-derive.rs:105:1
   |
LL | #[label(slug = 4)]
   | ^^^^^^^^^^^^^^^^^^

error: invalid nested attribute
  --> $DIR/subdiagnostic-derive.rs:115:9
   |
LL | #[label(slug("..."))]
   |         ^^^^

error: diagnostic slug must be first argument of a `#[label(...)]` attribute
  --> $DIR/subdiagnostic-derive.rs:115:1
   |
LL | #[label(slug("..."))]
   | ^^^^^^^^^^^^^^^^^^^^^

error: unexpected end of input, unexpected token in nested attribute, expected ident
  --> $DIR/subdiagnostic-derive.rs:135:9
   |
LL | #[label()]
   |         ^

error: invalid nested attribute
  --> $DIR/subdiagnostic-derive.rs:144:27
   |
LL | #[label(no_crate_example, code = "...")]
   |                           ^^^^

error: invalid nested attribute
  --> $DIR/subdiagnostic-derive.rs:153:27
   |
LL | #[label(no_crate_example, applicability = "machine-applicable")]
   |                           ^^^^^^^^^^^^^

error: unsupported type attribute for subdiagnostic enum
  --> $DIR/subdiagnostic-derive.rs:162:1
   |
LL | #[foo]
   | ^^^^^^

error: `#[bar]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:176:5
   |
LL |     #[bar]
   |     ^^^^^^

error: `#[bar = ...]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:188:5
   |
LL |     #[bar = "..."]
   |     ^^^^^^^^^^^^^^

error: `#[bar = ...]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:200:5
   |
LL |     #[bar = 4]
   |     ^^^^^^^^^^

error: `#[bar(...)]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:212:5
   |
LL |     #[bar("...")]
   |     ^^^^^^^^^^^^^

error: invalid nested attribute
  --> $DIR/subdiagnostic-derive.rs:224:13
   |
LL |     #[label(code = "...")]
   |             ^^^^

error: diagnostic slug must be first argument of a `#[label(...)]` attribute
  --> $DIR/subdiagnostic-derive.rs:224:5
   |
LL |     #[label(code = "...")]
   |     ^^^^^^^^^^^^^^^^^^^^^^

error: the `#[primary_span]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/subdiagnostic-derive.rs:253:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^

error: label without `#[primary_span]` field
  --> $DIR/subdiagnostic-derive.rs:250:1
   |
LL | / #[label(no_crate_example)]
LL | |
LL | | struct W {
LL | |     #[primary_span]
LL | |
LL | |     span: String,
LL | | }
   | |_^

error: `#[applicability]` is only valid on suggestions
  --> $DIR/subdiagnostic-derive.rs:263:5
   |
LL |     #[applicability]
   |     ^^^^^^^^^^^^^^^^

error: `#[bar]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:273:5
   |
LL |     #[bar]
   |     ^^^^^^
   |
   = help: only `primary_span`, `applicability` and `skip_arg` are valid field attributes

error: `#[bar = ...]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:284:5
   |
LL |     #[bar = "..."]
   |     ^^^^^^^^^^^^^^

error: `#[bar(...)]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:295:5
   |
LL |     #[bar("...")]
   |     ^^^^^^^^^^^^^
   |
   = help: only `primary_span`, `applicability` and `skip_arg` are valid field attributes

error: unexpected unsupported untagged union
  --> $DIR/subdiagnostic-derive.rs:311:1
   |
LL | / union AC {
LL | |
LL | |     span: u32,
LL | |     b: u64,
LL | | }
   | |_^

error: a diagnostic slug must be the first argument to the attribute
  --> $DIR/subdiagnostic-derive.rs:326:44
   |
LL | #[label(no_crate_example, no_crate::example)]
   |                                            ^

error: specified multiple times
  --> $DIR/subdiagnostic-derive.rs:339:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/subdiagnostic-derive.rs:336:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^

error: subdiagnostic kind not specified
  --> $DIR/subdiagnostic-derive.rs:345:8
   |
LL | struct AG {
   |        ^^

error: specified multiple times
  --> $DIR/subdiagnostic-derive.rs:382:46
   |
LL | #[suggestion(no_crate_example, code = "...", code = "...")]
   |                                              ^^^^
   |
note: previously specified here
  --> $DIR/subdiagnostic-derive.rs:382:32
   |
LL | #[suggestion(no_crate_example, code = "...", code = "...")]
   |                                ^^^^

error: specified multiple times
  --> $DIR/subdiagnostic-derive.rs:400:5
   |
LL |     #[applicability]
   |     ^^^^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/subdiagnostic-derive.rs:397:5
   |
LL |     #[applicability]
   |     ^^^^^^^^^^^^^^^^

error: the `#[applicability]` attribute can only be applied to fields of type `Applicability`
  --> $DIR/subdiagnostic-derive.rs:410:5
   |
LL |     #[applicability]
   |     ^^^^^^^^^^^^^^^^

error: suggestion without `code = "..."`
  --> $DIR/subdiagnostic-derive.rs:423:1
   |
LL | #[suggestion(no_crate_example)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: invalid applicability
  --> $DIR/subdiagnostic-derive.rs:433:62
   |
LL | #[suggestion(no_crate_example, code = "...", applicability = "foo")]
   |                                                              ^^^^^

error: suggestion without `#[primary_span]` field
  --> $DIR/subdiagnostic-derive.rs:451:1
   |
LL | / #[suggestion(no_crate_example, code = "...")]
LL | |
LL | | struct AR {
LL | |     var: String,
LL | | }
   | |_^

error: unsupported type attribute for subdiagnostic enum
  --> $DIR/subdiagnostic-derive.rs:465:1
   |
LL | #[label]
   | ^^^^^^^^

error: `var` doesn't refer to a field on this type
  --> $DIR/subdiagnostic-derive.rs:485:39
   |
LL | #[suggestion(no_crate_example, code = "{var}", applicability = "machine-applicable")]
   |                                       ^^^^^^^

error: `var` doesn't refer to a field on this type
  --> $DIR/subdiagnostic-derive.rs:504:43
   |
LL |     #[suggestion(no_crate_example, code = "{var}", applicability = "machine-applicable")]
   |                                           ^^^^^^^

error: `#[suggestion_part]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:527:5
   |
LL |     #[suggestion_part]
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: `#[suggestion_part(...)]` is only valid in multipart suggestions, use `#[primary_span]` instead

error: `#[suggestion_part(...)]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:530:5
   |
LL |     #[suggestion_part(code = "...")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: `#[suggestion_part(...)]` is only valid in multipart suggestions

error: suggestion without `#[primary_span]` field
  --> $DIR/subdiagnostic-derive.rs:524:1
   |
LL | / #[suggestion(no_crate_example, code = "...")]
LL | |
LL | | struct BA {
LL | |     #[suggestion_part]
...  |
LL | |     var: String,
LL | | }
   | |_^

error: invalid nested attribute
  --> $DIR/subdiagnostic-derive.rs:539:42
   |
LL | #[multipart_suggestion(no_crate_example, code = "...", applicability = "machine-applicable")]
   |                                          ^^^^
   |
   = help: only `style` and `applicability` are valid nested attributes

error: multipart suggestion without any `#[suggestion_part(...)]` fields
  --> $DIR/subdiagnostic-derive.rs:539:1
   |
LL | / #[multipart_suggestion(no_crate_example, code = "...", applicability = "machine-applicable")]
LL | |
LL | |
LL | | struct BBa {
LL | |     var: String,
LL | | }
   | |_^

error: `#[suggestion_part(...)]` attribute without `code = "..."`
  --> $DIR/subdiagnostic-derive.rs:549:5
   |
LL |     #[suggestion_part]
   |     ^^^^^^^^^^^^^^^^^^

error: unexpected end of input, unexpected token in nested attribute, expected ident
  --> $DIR/subdiagnostic-derive.rs:557:23
   |
LL |     #[suggestion_part()]
   |                       ^

error: `#[primary_span]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:566:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^
   |
   = help: multipart suggestions use one or more `#[suggestion_part]`s rather than one `#[primary_span]`

error: multipart suggestion without any `#[suggestion_part(...)]` fields
  --> $DIR/subdiagnostic-derive.rs:563:1
   |
LL | / #[multipart_suggestion(no_crate_example)]
LL | |
LL | | struct BC {
LL | |     #[primary_span]
LL | |
LL | |     span: Span,
LL | | }
   | |_^

error: `#[suggestion_part(...)]` attribute without `code = "..."`
  --> $DIR/subdiagnostic-derive.rs:574:5
   |
LL |     #[suggestion_part]
   |     ^^^^^^^^^^^^^^^^^^

error: `code` is the only valid nested attribute
  --> $DIR/subdiagnostic-derive.rs:580:23
   |
LL |     #[suggestion_part(foo = "bar")]
   |                       ^^^

error: the `#[suggestion_part(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/subdiagnostic-derive.rs:584:5
   |
LL |     #[suggestion_part(code = "...")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: the `#[suggestion_part(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/subdiagnostic-derive.rs:587:5
   |
LL |     #[suggestion_part()]
   |     ^^^^^^^^^^^^^^^^^^^^

error: unexpected end of input, unexpected token in nested attribute, expected ident
  --> $DIR/subdiagnostic-derive.rs:577:23
   |
LL |     #[suggestion_part()]
   |                       ^

error: expected `,`
  --> $DIR/subdiagnostic-derive.rs:580:27
   |
LL |     #[suggestion_part(foo = "bar")]
   |                           ^

error: specified multiple times
  --> $DIR/subdiagnostic-derive.rs:595:37
   |
LL |     #[suggestion_part(code = "...", code = ",,,")]
   |                                     ^^^^
   |
note: previously specified here
  --> $DIR/subdiagnostic-derive.rs:595:23
   |
LL |     #[suggestion_part(code = "...", code = ",,,")]
   |                       ^^^^

error: `#[applicability]` has no effect if all `#[suggestion]`/`#[multipart_suggestion]` attributes have a static `applicability = "..."`
  --> $DIR/subdiagnostic-derive.rs:624:5
   |
LL |     #[applicability]
   |     ^^^^^^^^^^^^^^^^

error: expected exactly one string literal for `code = ...`
  --> $DIR/subdiagnostic-derive.rs:672:34
   |
LL |     #[suggestion_part(code("foo"))]
   |                                  ^

error: unexpected token
  --> $DIR/subdiagnostic-derive.rs:672:28
   |
LL |     #[suggestion_part(code("foo"))]
   |                            ^^^^^

error: expected exactly one string literal for `code = ...`
  --> $DIR/subdiagnostic-derive.rs:682:41
   |
LL |     #[suggestion_part(code("foo", "bar"))]
   |                                         ^

error: unexpected token
  --> $DIR/subdiagnostic-derive.rs:682:28
   |
LL |     #[suggestion_part(code("foo", "bar"))]
   |                            ^^^^^

error: expected exactly one string literal for `code = ...`
  --> $DIR/subdiagnostic-derive.rs:692:30
   |
LL |     #[suggestion_part(code(3))]
   |                              ^

error: unexpected token
  --> $DIR/subdiagnostic-derive.rs:692:28
   |
LL |     #[suggestion_part(code(3))]
   |                            ^

error: expected exactly one string literal for `code = ...`
  --> $DIR/subdiagnostic-derive.rs:702:29
   |
LL |     #[suggestion_part(code())]
   |                             ^

error: expected string literal
  --> $DIR/subdiagnostic-derive.rs:714:30
   |
LL |     #[suggestion_part(code = 3)]
   |                              ^

error: specified multiple times
  --> $DIR/subdiagnostic-derive.rs:756:1
   |
LL | #[suggestion(no_crate_example, code = "", style = "hidden", style = "normal")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/subdiagnostic-derive.rs:756:1
   |
LL | #[suggestion(no_crate_example, code = "", style = "hidden", style = "normal")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: `#[suggestion_hidden(...)]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:765:1
   |
LL | #[suggestion_hidden(no_crate_example, code = "")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Use `#[suggestion(..., style = "hidden")]` instead

error: `#[suggestion_hidden(...)]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:773:1
   |
LL | #[suggestion_hidden(no_crate_example, code = "", style = "normal")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: Use `#[suggestion(..., style = "hidden")]` instead

error: invalid suggestion style
  --> $DIR/subdiagnostic-derive.rs:781:51
   |
LL | #[suggestion(no_crate_example, code = "", style = "foo")]
   |                                                   ^^^^^
   |
   = help: valid styles are `normal`, `short`, `hidden`, `verbose` and `tool-only`

error: expected `= "xxx"`
  --> $DIR/subdiagnostic-derive.rs:789:49
   |
LL | #[suggestion(no_crate_example, code = "", style = 42)]
   |                                                 ^

error: a diagnostic slug must be the first argument to the attribute
  --> $DIR/subdiagnostic-derive.rs:797:48
   |
LL | #[suggestion(no_crate_example, code = "", style)]
   |                                                ^

error: expected `= "xxx"`
  --> $DIR/subdiagnostic-derive.rs:805:48
   |
LL | #[suggestion(no_crate_example, code = "", style("foo"))]
   |                                                ^

error: expected `,`
  --> $DIR/subdiagnostic-derive.rs:805:48
   |
LL | #[suggestion(no_crate_example, code = "", style("foo"))]
   |                                                ^

error: `#[primary_span]` is not a valid attribute
  --> $DIR/subdiagnostic-derive.rs:817:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^
   |
   = note: there must be exactly one primary span
   = help: to create a suggestion with multiple spans, use `#[multipart_suggestion]` instead

error: suggestion without `#[primary_span]` field
  --> $DIR/subdiagnostic-derive.rs:814:1
   |
LL | / #[suggestion(no_crate_example, code = "")]
LL | |
LL | | struct PrimarySpanOnVec {
LL | |     #[primary_span]
...  |
LL | |     sub: Vec<Span>,
LL | | }
   | |_^

error: cannot find attribute `foo` in this scope
  --> $DIR/subdiagnostic-derive.rs:67:3
   |
LL | #[foo]
   |   ^^^

error: cannot find attribute `foo` in this scope
  --> $DIR/subdiagnostic-derive.rs:162:3
   |
LL | #[foo]
   |   ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:176:7
   |
LL |     #[bar]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:188:7
   |
LL |     #[bar = "..."]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:200:7
   |
LL |     #[bar = 4]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:212:7
   |
LL |     #[bar("...")]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:273:7
   |
LL |     #[bar]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:284:7
   |
LL |     #[bar = "..."]
   |       ^^^

error: cannot find attribute `bar` in this scope
  --> $DIR/subdiagnostic-derive.rs:295:7
   |
LL |     #[bar("...")]
   |       ^^^

error[E0425]: cannot find value `slug` in module `crate::fluent_generated`
  --> $DIR/subdiagnostic-derive.rs:125:9
   |
LL | #[label(slug)]
   |         ^^^^ not found in `crate::fluent_generated`

error[E0425]: cannot find value `__code_29` in this scope
  --> $DIR/subdiagnostic-derive.rs:708:10
   |
LL | #[derive(Subdiagnostic)]
   |          ^^^^^^^^^^^^^ not found in this scope
   |
   = note: this error originates in the derive macro `Subdiagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 86 previous errors

For more information about this error, try `rustc --explain E0425`.
