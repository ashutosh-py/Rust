Function name: conditions::main
Raw bytes (787): 0x[01, 01, 5e, 09, 23, 2d, 31, 05, 09, 05, 09, f6, 02, 0d, 05, 09, 0d, 39, 0d, 39, 2d, 31, f6, 02, 0d, 05, 09, 35, 3d, 35, 3d, 5a, 29, 35, 3d, 5a, 29, 35, 3d, 56, 51, 5a, 29, 35, 3d, 56, 51, 5a, 29, 35, 3d, 45, 49, 3d, 67, 45, 49, 55, 59, 55, 59, 96, 01, 25, 55, 59, 96, 01, 25, 55, 59, 92, 01, 79, 96, 01, 25, 55, 59, 92, 01, 79, 96, 01, 25, 55, 59, 5d, 61, 59, a3, 01, 5d, 61, 6d, cf, 02, 71, 75, 65, 6d, 65, 6d, da, 01, 21, 65, 6d, da, 01, 21, 65, 6d, d6, 01, 7d, da, 01, 21, 65, 6d, d6, 01, 7d, da, 01, 21, 65, 6d, 71, 75, 11, df, 02, 15, 19, 6d, cf, 02, 71, 75, cb, 02, 11, 6d, cf, 02, 71, 75, cb, 02, 11, 6d, cf, 02, 71, 75, c6, 02, 1d, cb, 02, 11, 6d, cf, 02, 71, 75, c6, 02, 1d, cb, 02, 11, 6d, cf, 02, 71, 75, c2, 02, 89, 01, c6, 02, 1d, cb, 02, 11, 6d, cf, 02, 71, 75, c2, 02, 89, 01, c6, 02, 1d, cb, 02, 11, 6d, cf, 02, 71, 75, 15, 19, db, 02, e3, 02, 11, df, 02, 15, 19, e7, 02, f2, 02, eb, 02, ef, 02, 1d, 21, 25, 29, f6, 02, 0d, 05, 09, 5d, 01, 03, 01, 02, 0c, 20, 05, 00, 02, 08, 00, 0c, 05, 00, 0d, 02, 06, 00, 02, 06, 00, 07, 03, 03, 09, 00, 0a, 05, 00, 10, 00, 1d, 20, 09, f6, 02, 00, 10, 00, 1d, 09, 01, 09, 01, 0a, f6, 02, 02, 0f, 00, 1c, 20, 0d, f2, 02, 00, 0f, 00, 1c, 0d, 01, 0c, 00, 19, 20, 39, 1e, 00, 0c, 00, 2a, 20, 2d, 31, 00, 0c, 00, 3c, 1e, 00, 1d, 00, 2a, 41, 00, 2e, 00, 3c, 2d, 00, 3d, 02, 0a, 31, 02, 0a, 00, 0b, 23, 01, 09, 01, 12, f2, 02, 03, 09, 00, 0f, 03, 03, 09, 01, 0c, 20, 35, 00, 01, 08, 00, 0c, 35, 00, 0d, 02, 06, 00, 02, 06, 00, 07, 35, 02, 08, 00, 15, 20, 3d, 5a, 00, 08, 00, 15, 3d, 00, 16, 02, 06, 5a, 02, 0f, 00, 1c, 20, 56, 29, 00, 0f, 00, 1c, 56, 01, 0c, 00, 19, 20, 51, 52, 00, 0c, 00, 2a, 20, 45, 49, 00, 0c, 00, 3c, 52, 00, 1d, 00, 2a, 69, 00, 2e, 00, 3c, 45, 00, 3d, 02, 0a, 49, 02, 0a, 00, 0b, 67, 01, 09, 00, 17, 29, 02, 09, 00, 0f, 63, 03, 08, 00, 0c, 20, 4d, 00, 00, 08, 00, 0c, 4d, 01, 0d, 01, 10, 20, 55, 00, 01, 0c, 00, 10, 55, 00, 11, 02, 0a, 00, 02, 0a, 00, 0b, 55, 02, 0c, 00, 19, 20, 59, 96, 01, 00, 0c, 00, 19, 59, 00, 1a, 02, 0a, 96, 01, 03, 11, 00, 1e, 20, 92, 01, 25, 00, 11, 00, 1e, 92, 01, 01, 10, 00, 1d, 20, 79, 8e, 01, 00, 10, 00, 2e, 20, 5d, 61, 00, 10, 00, 40, 8e, 01, 00, 21, 00, 2e, 81, 01, 00, 32, 00, 40, 5d, 00, 41, 02, 0e, 61, 02, 0e, 00, 0f, a3, 01, 01, 0d, 00, 1b, 25, 02, 0d, 00, 13, 00, 02, 06, 00, 07, 9f, 01, 03, 09, 01, 0c, 20, 65, 00, 01, 08, 00, 0c, 65, 00, 0d, 02, 06, 00, 02, 06, 00, 07, cb, 02, 02, 09, 00, 0a, 65, 00, 10, 00, 1d, 20, 6d, da, 01, 00, 10, 00, 1d, 6d, 00, 1e, 02, 06, da, 01, 02, 0f, 00, 1c, 20, d6, 01, 21, 00, 0f, 00, 1c, d6, 01, 01, 0c, 00, 19, 20, 7d, d2, 01, 00, 0c, 00, 2a, 20, 71, 75, 00, 0c, 00, 3c, d2, 01, 00, 1d, 00, 2a, 85, 01, 00, 2e, 00, 3c, 71, 00, 3d, 02, 0a, 75, 02, 0a, 00, 0b, cf, 02, 01, 09, 00, 17, 21, 02, 0d, 02, 0f, db, 02, 05, 09, 00, 0a, cb, 02, 00, 10, 00, 1d, 20, 11, c6, 02, 00, 10, 00, 1d, 11, 00, 1e, 02, 06, c6, 02, 02, 0f, 00, 1c, 20, c2, 02, 1d, 00, 0f, 00, 1c, c2, 02, 01, 0c, 00, 19, 20, 89, 01, be, 02, 00, 0c, 00, 2a, 20, 15, 19, 00, 0c, 00, 3c, be, 02, 00, 1d, 00, 2a, 8d, 01, 00, 2e, 00, 3c, 15, 00, 3d, 02, 0a, 19, 02, 0a, 00, 0b, df, 02, 01, 09, 00, 17, 1d, 02, 09, 00, 0f, d7, 02, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 94
- expression 0 operands: lhs = Counter(2), rhs = Expression(8, Add)
- expression 1 operands: lhs = Counter(11), rhs = Counter(12)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Counter(1), rhs = Counter(2)
- expression 4 operands: lhs = Expression(93, Sub), rhs = Counter(3)
- expression 5 operands: lhs = Counter(1), rhs = Counter(2)
- expression 6 operands: lhs = Counter(3), rhs = Counter(14)
- expression 7 operands: lhs = Counter(3), rhs = Counter(14)
- expression 8 operands: lhs = Counter(11), rhs = Counter(12)
- expression 9 operands: lhs = Expression(93, Sub), rhs = Counter(3)
- expression 10 operands: lhs = Counter(1), rhs = Counter(2)
- expression 11 operands: lhs = Counter(13), rhs = Counter(15)
- expression 12 operands: lhs = Counter(13), rhs = Counter(15)
- expression 13 operands: lhs = Expression(22, Sub), rhs = Counter(10)
- expression 14 operands: lhs = Counter(13), rhs = Counter(15)
- expression 15 operands: lhs = Expression(22, Sub), rhs = Counter(10)
- expression 16 operands: lhs = Counter(13), rhs = Counter(15)
- expression 17 operands: lhs = Expression(21, Sub), rhs = Counter(20)
- expression 18 operands: lhs = Expression(22, Sub), rhs = Counter(10)
- expression 19 operands: lhs = Counter(13), rhs = Counter(15)
- expression 20 operands: lhs = Expression(21, Sub), rhs = Counter(20)
- expression 21 operands: lhs = Expression(22, Sub), rhs = Counter(10)
- expression 22 operands: lhs = Counter(13), rhs = Counter(15)
- expression 23 operands: lhs = Counter(17), rhs = Counter(18)
- expression 24 operands: lhs = Counter(15), rhs = Expression(25, Add)
- expression 25 operands: lhs = Counter(17), rhs = Counter(18)
- expression 26 operands: lhs = Counter(21), rhs = Counter(22)
- expression 27 operands: lhs = Counter(21), rhs = Counter(22)
- expression 28 operands: lhs = Expression(37, Sub), rhs = Counter(9)
- expression 29 operands: lhs = Counter(21), rhs = Counter(22)
- expression 30 operands: lhs = Expression(37, Sub), rhs = Counter(9)
- expression 31 operands: lhs = Counter(21), rhs = Counter(22)
- expression 32 operands: lhs = Expression(36, Sub), rhs = Counter(30)
- expression 33 operands: lhs = Expression(37, Sub), rhs = Counter(9)
- expression 34 operands: lhs = Counter(21), rhs = Counter(22)
- expression 35 operands: lhs = Expression(36, Sub), rhs = Counter(30)
- expression 36 operands: lhs = Expression(37, Sub), rhs = Counter(9)
- expression 37 operands: lhs = Counter(21), rhs = Counter(22)
- expression 38 operands: lhs = Counter(23), rhs = Counter(24)
- expression 39 operands: lhs = Counter(22), rhs = Expression(40, Add)
- expression 40 operands: lhs = Counter(23), rhs = Counter(24)
- expression 41 operands: lhs = Counter(27), rhs = Expression(83, Add)
- expression 42 operands: lhs = Counter(28), rhs = Counter(29)
- expression 43 operands: lhs = Counter(25), rhs = Counter(27)
- expression 44 operands: lhs = Counter(25), rhs = Counter(27)
- expression 45 operands: lhs = Expression(54, Sub), rhs = Counter(8)
- expression 46 operands: lhs = Counter(25), rhs = Counter(27)
- expression 47 operands: lhs = Expression(54, Sub), rhs = Counter(8)
- expression 48 operands: lhs = Counter(25), rhs = Counter(27)
- expression 49 operands: lhs = Expression(53, Sub), rhs = Counter(31)
- expression 50 operands: lhs = Expression(54, Sub), rhs = Counter(8)
- expression 51 operands: lhs = Counter(25), rhs = Counter(27)
- expression 52 operands: lhs = Expression(53, Sub), rhs = Counter(31)
- expression 53 operands: lhs = Expression(54, Sub), rhs = Counter(8)
- expression 54 operands: lhs = Counter(25), rhs = Counter(27)
- expression 55 operands: lhs = Counter(28), rhs = Counter(29)
- expression 56 operands: lhs = Counter(4), rhs = Expression(87, Add)
- expression 57 operands: lhs = Counter(5), rhs = Counter(6)
- expression 58 operands: lhs = Counter(27), rhs = Expression(83, Add)
- expression 59 operands: lhs = Counter(28), rhs = Counter(29)
- expression 60 operands: lhs = Expression(82, Add), rhs = Counter(4)
- expression 61 operands: lhs = Counter(27), rhs = Expression(83, Add)
- expression 62 operands: lhs = Counter(28), rhs = Counter(29)
- expression 63 operands: lhs = Expression(82, Add), rhs = Counter(4)
- expression 64 operands: lhs = Counter(27), rhs = Expression(83, Add)
- expression 65 operands: lhs = Counter(28), rhs = Counter(29)
- expression 66 operands: lhs = Expression(81, Sub), rhs = Counter(7)
- expression 67 operands: lhs = Expression(82, Add), rhs = Counter(4)
- expression 68 operands: lhs = Counter(27), rhs = Expression(83, Add)
- expression 69 operands: lhs = Counter(28), rhs = Counter(29)
- expression 70 operands: lhs = Expression(81, Sub), rhs = Counter(7)
- expression 71 operands: lhs = Expression(82, Add), rhs = Counter(4)
- expression 72 operands: lhs = Counter(27), rhs = Expression(83, Add)
- expression 73 operands: lhs = Counter(28), rhs = Counter(29)
- expression 74 operands: lhs = Expression(80, Sub), rhs = Counter(34)
- expression 75 operands: lhs = Expression(81, Sub), rhs = Counter(7)
- expression 76 operands: lhs = Expression(82, Add), rhs = Counter(4)
- expression 77 operands: lhs = Counter(27), rhs = Expression(83, Add)
- expression 78 operands: lhs = Counter(28), rhs = Counter(29)
- expression 79 operands: lhs = Expression(80, Sub), rhs = Counter(34)
- expression 80 operands: lhs = Expression(81, Sub), rhs = Counter(7)
- expression 81 operands: lhs = Expression(82, Add), rhs = Counter(4)
- expression 82 operands: lhs = Counter(27), rhs = Expression(83, Add)
- expression 83 operands: lhs = Counter(28), rhs = Counter(29)
- expression 84 operands: lhs = Counter(5), rhs = Counter(6)
- expression 85 operands: lhs = Expression(86, Add), rhs = Expression(88, Add)
- expression 86 operands: lhs = Counter(4), rhs = Expression(87, Add)
- expression 87 operands: lhs = Counter(5), rhs = Counter(6)
- expression 88 operands: lhs = Expression(89, Add), rhs = Expression(92, Sub)
- expression 89 operands: lhs = Expression(90, Add), rhs = Expression(91, Add)
- expression 90 operands: lhs = Counter(7), rhs = Counter(8)
- expression 91 operands: lhs = Counter(9), rhs = Counter(10)
- expression 92 operands: lhs = Expression(93, Sub), rhs = Counter(3)
- expression 93 operands: lhs = Counter(1), rhs = Counter(2)
Number of file 0 mappings: 93
- Code(Counter(0)) at (prev + 3, 1) to (start + 2, 12)
- Branch { true: Counter(1), false: Zero } at (prev + 2, 8) to (start + 0, 12)
- Code(Counter(1)) at (prev + 0, 13) to (start + 2, 6)
- Code(Zero) at (prev + 2, 6) to (start + 0, 7)
- Code(Expression(0, Add)) at (prev + 3, 9) to (start + 0, 10)
    = (c2 + (c11 + c12))
- Code(Counter(1)) at (prev + 0, 16) to (start + 0, 29)
- Branch { true: Counter(2), false: Expression(93, Sub) } at (prev + 0, 16) to (start + 0, 29)
    false = (c1 - c2)
- Code(Counter(2)) at (prev + 1, 9) to (start + 1, 10)
- Code(Expression(93, Sub)) at (prev + 2, 15) to (start + 0, 28)
    = (c1 - c2)
- Branch { true: Counter(3), false: Expression(92, Sub) } at (prev + 0, 15) to (start + 0, 28)
    false = ((c1 - c2) - c3)
- Code(Counter(3)) at (prev + 1, 12) to (start + 0, 25)
- Branch { true: Counter(14), false: Expression(7, Sub) } at (prev + 0, 12) to (start + 0, 42)
    false = (c3 - c14)
- Branch { true: Counter(11), false: Counter(12) } at (prev + 0, 12) to (start + 0, 60)
- Code(Expression(7, Sub)) at (prev + 0, 29) to (start + 0, 42)
    = (c3 - c14)
- Code(Counter(16)) at (prev + 0, 46) to (start + 0, 60)
- Code(Counter(11)) at (prev + 0, 61) to (start + 2, 10)
- Code(Counter(12)) at (prev + 2, 10) to (start + 0, 11)
- Code(Expression(8, Add)) at (prev + 1, 9) to (start + 1, 18)
    = (c11 + c12)
- Code(Expression(92, Sub)) at (prev + 3, 9) to (start + 0, 15)
    = ((c1 - c2) - c3)
- Code(Expression(0, Add)) at (prev + 3, 9) to (start + 1, 12)
    = (c2 + (c11 + c12))
- Branch { true: Counter(13), false: Zero } at (prev + 1, 8) to (start + 0, 12)
- Code(Counter(13)) at (prev + 0, 13) to (start + 2, 6)
- Code(Zero) at (prev + 2, 6) to (start + 0, 7)
- Code(Counter(13)) at (prev + 2, 8) to (start + 0, 21)
- Branch { true: Counter(15), false: Expression(22, Sub) } at (prev + 0, 8) to (start + 0, 21)
    false = (c13 - c15)
- Code(Counter(15)) at (prev + 0, 22) to (start + 2, 6)
- Code(Expression(22, Sub)) at (prev + 2, 15) to (start + 0, 28)
    = (c13 - c15)
- Branch { true: Expression(21, Sub), false: Counter(10) } at (prev + 0, 15) to (start + 0, 28)
    true  = ((c13 - c15) - c10)
- Code(Expression(21, Sub)) at (prev + 1, 12) to (start + 0, 25)
    = ((c13 - c15) - c10)
- Branch { true: Counter(20), false: Expression(20, Sub) } at (prev + 0, 12) to (start + 0, 42)
    false = (((c13 - c15) - c10) - c20)
- Branch { true: Counter(17), false: Counter(18) } at (prev + 0, 12) to (start + 0, 60)
- Code(Expression(20, Sub)) at (prev + 0, 29) to (start + 0, 42)
    = (((c13 - c15) - c10) - c20)
- Code(Counter(26)) at (prev + 0, 46) to (start + 0, 60)
- Code(Counter(17)) at (prev + 0, 61) to (start + 2, 10)
- Code(Counter(18)) at (prev + 2, 10) to (start + 0, 11)
- Code(Expression(25, Add)) at (prev + 1, 9) to (start + 0, 23)
    = (c17 + c18)
- Code(Counter(10)) at (prev + 2, 9) to (start + 0, 15)
- Code(Expression(24, Add)) at (prev + 3, 8) to (start + 0, 12)
    = (c15 + (c17 + c18))
- Branch { true: Counter(19), false: Zero } at (prev + 0, 8) to (start + 0, 12)
- Code(Counter(19)) at (prev + 1, 13) to (start + 1, 16)
- Branch { true: Counter(21), false: Zero } at (prev + 1, 12) to (start + 0, 16)
- Code(Counter(21)) at (prev + 0, 17) to (start + 2, 10)
- Code(Zero) at (prev + 2, 10) to (start + 0, 11)
- Code(Counter(21)) at (prev + 2, 12) to (start + 0, 25)
- Branch { true: Counter(22), false: Expression(37, Sub) } at (prev + 0, 12) to (start + 0, 25)
    false = (c21 - c22)
- Code(Counter(22)) at (prev + 0, 26) to (start + 2, 10)
- Code(Expression(37, Sub)) at (prev + 3, 17) to (start + 0, 30)
    = (c21 - c22)
- Branch { true: Expression(36, Sub), false: Counter(9) } at (prev + 0, 17) to (start + 0, 30)
    true  = ((c21 - c22) - c9)
- Code(Expression(36, Sub)) at (prev + 1, 16) to (start + 0, 29)
    = ((c21 - c22) - c9)
- Branch { true: Counter(30), false: Expression(35, Sub) } at (prev + 0, 16) to (start + 0, 46)
    false = (((c21 - c22) - c9) - c30)
- Branch { true: Counter(23), false: Counter(24) } at (prev + 0, 16) to (start + 0, 64)
- Code(Expression(35, Sub)) at (prev + 0, 33) to (start + 0, 46)
    = (((c21 - c22) - c9) - c30)
- Code(Counter(32)) at (prev + 0, 50) to (start + 0, 64)
- Code(Counter(23)) at (prev + 0, 65) to (start + 2, 14)
- Code(Counter(24)) at (prev + 2, 14) to (start + 0, 15)
- Code(Expression(40, Add)) at (prev + 1, 13) to (start + 0, 27)
    = (c23 + c24)
- Code(Counter(9)) at (prev + 2, 13) to (start + 0, 19)
- Code(Zero) at (prev + 2, 6) to (start + 0, 7)
- Code(Expression(39, Add)) at (prev + 3, 9) to (start + 1, 12)
    = (c22 + (c23 + c24))
- Branch { true: Counter(25), false: Zero } at (prev + 1, 8) to (start + 0, 12)
- Code(Counter(25)) at (prev + 0, 13) to (start + 2, 6)
- Code(Zero) at (prev + 2, 6) to (start + 0, 7)
- Code(Expression(82, Add)) at (prev + 2, 9) to (start + 0, 10)
    = (c27 + (c28 + c29))
- Code(Counter(25)) at (prev + 0, 16) to (start + 0, 29)
- Branch { true: Counter(27), false: Expression(54, Sub) } at (prev + 0, 16) to (start + 0, 29)
    false = (c25 - c27)
- Code(Counter(27)) at (prev + 0, 30) to (start + 2, 6)
- Code(Expression(54, Sub)) at (prev + 2, 15) to (start + 0, 28)
    = (c25 - c27)
- Branch { true: Expression(53, Sub), false: Counter(8) } at (prev + 0, 15) to (start + 0, 28)
    true  = ((c25 - c27) - c8)
- Code(Expression(53, Sub)) at (prev + 1, 12) to (start + 0, 25)
    = ((c25 - c27) - c8)
- Branch { true: Counter(31), false: Expression(52, Sub) } at (prev + 0, 12) to (start + 0, 42)
    false = (((c25 - c27) - c8) - c31)
- Branch { true: Counter(28), false: Counter(29) } at (prev + 0, 12) to (start + 0, 60)
- Code(Expression(52, Sub)) at (prev + 0, 29) to (start + 0, 42)
    = (((c25 - c27) - c8) - c31)
- Code(Counter(33)) at (prev + 0, 46) to (start + 0, 60)
- Code(Counter(28)) at (prev + 0, 61) to (start + 2, 10)
- Code(Counter(29)) at (prev + 2, 10) to (start + 0, 11)
- Code(Expression(83, Add)) at (prev + 1, 9) to (start + 0, 23)
    = (c28 + c29)
- Code(Counter(8)) at (prev + 2, 13) to (start + 2, 15)
- Code(Expression(86, Add)) at (prev + 5, 9) to (start + 0, 10)
    = (c4 + (c5 + c6))
- Code(Expression(82, Add)) at (prev + 0, 16) to (start + 0, 29)
    = (c27 + (c28 + c29))
- Branch { true: Counter(4), false: Expression(81, Sub) } at (prev + 0, 16) to (start + 0, 29)
    false = ((c27 + (c28 + c29)) - c4)
- Code(Counter(4)) at (prev + 0, 30) to (start + 2, 6)
- Code(Expression(81, Sub)) at (prev + 2, 15) to (start + 0, 28)
    = ((c27 + (c28 + c29)) - c4)
- Branch { true: Expression(80, Sub), false: Counter(7) } at (prev + 0, 15) to (start + 0, 28)
    true  = (((c27 + (c28 + c29)) - c4) - c7)
- Code(Expression(80, Sub)) at (prev + 1, 12) to (start + 0, 25)
    = (((c27 + (c28 + c29)) - c4) - c7)
- Branch { true: Counter(34), false: Expression(79, Sub) } at (prev + 0, 12) to (start + 0, 42)
    false = ((((c27 + (c28 + c29)) - c4) - c7) - c34)
- Branch { true: Counter(5), false: Counter(6) } at (prev + 0, 12) to (start + 0, 60)
- Code(Expression(79, Sub)) at (prev + 0, 29) to (start + 0, 42)
    = ((((c27 + (c28 + c29)) - c4) - c7) - c34)
- Code(Counter(35)) at (prev + 0, 46) to (start + 0, 60)
- Code(Counter(5)) at (prev + 0, 61) to (start + 2, 10)
- Code(Counter(6)) at (prev + 2, 10) to (start + 0, 11)
- Code(Expression(87, Add)) at (prev + 1, 9) to (start + 0, 23)
    = (c5 + c6)
- Code(Counter(7)) at (prev + 2, 9) to (start + 0, 15)
- Code(Expression(85, Add)) at (prev + 2, 1) to (start + 0, 2)
    = ((c4 + (c5 + c6)) + (((c7 + c8) + (c9 + c10)) + ((c1 - c2) - c3)))

