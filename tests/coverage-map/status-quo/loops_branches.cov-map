Function name: <loops_branches::DebugTest as core::fmt::Debug>::fmt
Raw bytes (385): 0x[01, 01, 4c, 00, 00, 05, 09, 05, 09, 00, 12, 05, 09, a7, 02, 19, ab, 02, af, 02, 0d, 00, 11, 15, ab, 02, af, 02, 0d, 00, 11, 15, a7, 02, 19, ab, 02, af, 02, 0d, 00, 11, 15, a2, 02, 00, a7, 02, 19, ab, 02, af, 02, 0d, 00, 11, 15, a2, 02, 15, a7, 02, 19, ab, 02, af, 02, 0d, 00, 11, 15, a2, 02, 15, a7, 02, 19, ab, 02, af, 02, 0d, 00, 11, 15, 9e, 02, 1d, a2, 02, 15, a7, 02, 19, ab, 02, af, 02, 0d, 00, 11, 15, 9e, 02, 1d, a2, 02, 15, a7, 02, 19, ab, 02, af, 02, 0d, 00, 11, 15, 00, 9a, 02, 9e, 02, 1d, a2, 02, 15, a7, 02, 19, ab, 02, af, 02, 0d, 00, 11, 15, 97, 02, 11, 00, 9a, 02, 9e, 02, 1d, a2, 02, 15, a7, 02, 19, ab, 02, af, 02, 0d, 00, 11, 15, 97, 02, 11, 00, 9a, 02, 9e, 02, 1d, a2, 02, 15, a7, 02, 19, ab, 02, af, 02, 0d, 00, 11, 15, 25, 8f, 02, 92, 02, 19, 97, 02, 11, 00, 9a, 02, 9e, 02, 1d, a2, 02, 15, a7, 02, 19, ab, 02, af, 02, 0d, 00, 11, 15, 1d, 01, 09, 05, 01, 10, 20, 05, 02, 01, 0c, 00, 10, 05, 01, 10, 00, 15, 20, 09, 12, 00, 10, 00, 15, 00, 01, 17, 00, 1b, 00, 00, 17, 00, 1b, 00, 00, 1c, 01, 12, 12, 02, 0e, 00, 0f, 0f, 01, 0d, 00, 1e, 20, 25, 0d, 00, 0d, 00, 1f, 25, 00, 1e, 00, 1f, 00, 01, 10, 01, 0a, a2, 02, 03, 0d, 00, 0e, a7, 02, 00, 12, 00, 17, 20, a2, 02, 19, 00, 12, 00, 17, 43, 01, 10, 00, 14, 20, 9e, 02, 15, 00, 10, 00, 14, 9e, 02, 01, 14, 00, 19, 20, 1d, 9a, 02, 00, 14, 00, 19, 00, 01, 1b, 00, 1f, 00, 00, 1b, 00, 1f, 00, 00, 20, 00, 22, 9a, 02, 01, 12, 00, 13, 97, 02, 01, 11, 00, 22, 20, 92, 02, 11, 00, 11, 00, 23, 92, 02, 00, 22, 00, 23, 00, 01, 14, 01, 0e, 19, 03, 09, 00, 0f, 8b, 02, 01, 05, 00, 06]
Number of files: 1
- file 0 => global file 1
Number of expressions: 76
- expression 0 operands: lhs = Zero, rhs = Zero
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Zero, rhs = Expression(4, Sub)
- expression 4 operands: lhs = Counter(1), rhs = Counter(2)
- expression 5 operands: lhs = Expression(73, Add), rhs = Counter(6)
- expression 6 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 7 operands: lhs = Counter(3), rhs = Zero
- expression 8 operands: lhs = Counter(4), rhs = Counter(5)
- expression 9 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 10 operands: lhs = Counter(3), rhs = Zero
- expression 11 operands: lhs = Counter(4), rhs = Counter(5)
- expression 12 operands: lhs = Expression(73, Add), rhs = Counter(6)
- expression 13 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 14 operands: lhs = Counter(3), rhs = Zero
- expression 15 operands: lhs = Counter(4), rhs = Counter(5)
- expression 16 operands: lhs = Expression(72, Sub), rhs = Zero
- expression 17 operands: lhs = Expression(73, Add), rhs = Counter(6)
- expression 18 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 19 operands: lhs = Counter(3), rhs = Zero
- expression 20 operands: lhs = Counter(4), rhs = Counter(5)
- expression 21 operands: lhs = Expression(72, Sub), rhs = Counter(5)
- expression 22 operands: lhs = Expression(73, Add), rhs = Counter(6)
- expression 23 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 24 operands: lhs = Counter(3), rhs = Zero
- expression 25 operands: lhs = Counter(4), rhs = Counter(5)
- expression 26 operands: lhs = Expression(72, Sub), rhs = Counter(5)
- expression 27 operands: lhs = Expression(73, Add), rhs = Counter(6)
- expression 28 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 29 operands: lhs = Counter(3), rhs = Zero
- expression 30 operands: lhs = Counter(4), rhs = Counter(5)
- expression 31 operands: lhs = Expression(71, Sub), rhs = Counter(7)
- expression 32 operands: lhs = Expression(72, Sub), rhs = Counter(5)
- expression 33 operands: lhs = Expression(73, Add), rhs = Counter(6)
- expression 34 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 35 operands: lhs = Counter(3), rhs = Zero
- expression 36 operands: lhs = Counter(4), rhs = Counter(5)
- expression 37 operands: lhs = Expression(71, Sub), rhs = Counter(7)
- expression 38 operands: lhs = Expression(72, Sub), rhs = Counter(5)
- expression 39 operands: lhs = Expression(73, Add), rhs = Counter(6)
- expression 40 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 41 operands: lhs = Counter(3), rhs = Zero
- expression 42 operands: lhs = Counter(4), rhs = Counter(5)
- expression 43 operands: lhs = Zero, rhs = Expression(70, Sub)
- expression 44 operands: lhs = Expression(71, Sub), rhs = Counter(7)
- expression 45 operands: lhs = Expression(72, Sub), rhs = Counter(5)
- expression 46 operands: lhs = Expression(73, Add), rhs = Counter(6)
- expression 47 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 48 operands: lhs = Counter(3), rhs = Zero
- expression 49 operands: lhs = Counter(4), rhs = Counter(5)
- expression 50 operands: lhs = Expression(69, Add), rhs = Counter(4)
- expression 51 operands: lhs = Zero, rhs = Expression(70, Sub)
- expression 52 operands: lhs = Expression(71, Sub), rhs = Counter(7)
- expression 53 operands: lhs = Expression(72, Sub), rhs = Counter(5)
- expression 54 operands: lhs = Expression(73, Add), rhs = Counter(6)
- expression 55 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 56 operands: lhs = Counter(3), rhs = Zero
- expression 57 operands: lhs = Counter(4), rhs = Counter(5)
- expression 58 operands: lhs = Expression(69, Add), rhs = Counter(4)
- expression 59 operands: lhs = Zero, rhs = Expression(70, Sub)
- expression 60 operands: lhs = Expression(71, Sub), rhs = Counter(7)
- expression 61 operands: lhs = Expression(72, Sub), rhs = Counter(5)
- expression 62 operands: lhs = Expression(73, Add), rhs = Counter(6)
- expression 63 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 64 operands: lhs = Counter(3), rhs = Zero
- expression 65 operands: lhs = Counter(4), rhs = Counter(5)
- expression 66 operands: lhs = Counter(9), rhs = Expression(67, Add)
- expression 67 operands: lhs = Expression(68, Sub), rhs = Counter(6)
- expression 68 operands: lhs = Expression(69, Add), rhs = Counter(4)
- expression 69 operands: lhs = Zero, rhs = Expression(70, Sub)
- expression 70 operands: lhs = Expression(71, Sub), rhs = Counter(7)
- expression 71 operands: lhs = Expression(72, Sub), rhs = Counter(5)
- expression 72 operands: lhs = Expression(73, Add), rhs = Counter(6)
- expression 73 operands: lhs = Expression(74, Add), rhs = Expression(75, Add)
- expression 74 operands: lhs = Counter(3), rhs = Zero
- expression 75 operands: lhs = Counter(4), rhs = Counter(5)
Number of file 0 mappings: 29
- Code(Counter(0)) at (prev + 9, 5) to (start + 1, 16)
- Branch { true: Counter(1), false: Expression(0, Sub) } at (prev + 1, 12) to (start + 0, 16)
    false = (Zero - Zero)
- Code(Counter(1)) at (prev + 1, 16) to (start + 0, 21)
- Branch { true: Counter(2), false: Expression(4, Sub) } at (prev + 0, 16) to (start + 0, 21)
    false = (c1 - c2)
- Code(Zero) at (prev + 1, 23) to (start + 0, 27)
- Code(Zero) at (prev + 0, 23) to (start + 0, 27)
- Code(Zero) at (prev + 0, 28) to (start + 1, 18)
- Code(Expression(4, Sub)) at (prev + 2, 14) to (start + 0, 15)
    = (c1 - c2)
- Code(Expression(3, Add)) at (prev + 1, 13) to (start + 0, 30)
    = (Zero + (c1 - c2))
- Branch { true: Counter(9), false: Counter(3) } at (prev + 0, 13) to (start + 0, 31)
- Code(Counter(9)) at (prev + 0, 30) to (start + 0, 31)
- Code(Zero) at (prev + 1, 16) to (start + 1, 10)
- Code(Expression(72, Sub)) at (prev + 3, 13) to (start + 0, 14)
    = (((c3 + Zero) + (c4 + c5)) - c6)
- Code(Expression(73, Add)) at (prev + 0, 18) to (start + 0, 23)
    = ((c3 + Zero) + (c4 + c5))
- Branch { true: Expression(72, Sub), false: Counter(6) } at (prev + 0, 18) to (start + 0, 23)
    true  = (((c3 + Zero) + (c4 + c5)) - c6)
- Code(Expression(16, Add)) at (prev + 1, 16) to (start + 0, 20)
    = ((((c3 + Zero) + (c4 + c5)) - c6) + Zero)
- Branch { true: Expression(71, Sub), false: Counter(5) } at (prev + 0, 16) to (start + 0, 20)
    true  = ((((c3 + Zero) + (c4 + c5)) - c6) - c5)
- Code(Expression(71, Sub)) at (prev + 1, 20) to (start + 0, 25)
    = ((((c3 + Zero) + (c4 + c5)) - c6) - c5)
- Branch { true: Counter(7), false: Expression(70, Sub) } at (prev + 0, 20) to (start + 0, 25)
    false = (((((c3 + Zero) + (c4 + c5)) - c6) - c5) - c7)
- Code(Zero) at (prev + 1, 27) to (start + 0, 31)
- Code(Zero) at (prev + 0, 27) to (start + 0, 31)
- Code(Zero) at (prev + 0, 32) to (start + 0, 34)
- Code(Expression(70, Sub)) at (prev + 1, 18) to (start + 0, 19)
    = (((((c3 + Zero) + (c4 + c5)) - c6) - c5) - c7)
- Code(Expression(69, Add)) at (prev + 1, 17) to (start + 0, 34)
    = (Zero + (((((c3 + Zero) + (c4 + c5)) - c6) - c5) - c7))
- Branch { true: Expression(68, Sub), false: Counter(4) } at (prev + 0, 17) to (start + 0, 35)
    true  = ((Zero + (((((c3 + Zero) + (c4 + c5)) - c6) - c5) - c7)) - c4)
- Code(Expression(68, Sub)) at (prev + 0, 34) to (start + 0, 35)
    = ((Zero + (((((c3 + Zero) + (c4 + c5)) - c6) - c5) - c7)) - c4)
- Code(Zero) at (prev + 1, 20) to (start + 1, 14)
- Code(Counter(6)) at (prev + 3, 9) to (start + 0, 15)
- Code(Expression(66, Add)) at (prev + 1, 5) to (start + 0, 6)
    = (c9 + (((Zero + (((((c3 + Zero) + (c4 + c5)) - c6) - c5) - c7)) - c4) + c6))

Function name: <loops_branches::DisplayTest as core::fmt::Display>::fmt
Raw bytes (385): 0x[01, 01, 4c, 01, 05, 02, 09, 02, 09, 00, 12, 02, 09, a3, 02, 19, a7, 02, ab, 02, 05, 0d, 11, 15, a7, 02, ab, 02, 05, 0d, 11, 15, a3, 02, 19, a7, 02, ab, 02, 05, 0d, 11, 15, 9e, 02, 00, a3, 02, 19, a7, 02, ab, 02, 05, 0d, 11, 15, 9e, 02, 11, a3, 02, 19, a7, 02, ab, 02, 05, 0d, 11, 15, 9e, 02, 11, a3, 02, 19, a7, 02, ab, 02, 05, 0d, 11, 15, 9a, 02, 1d, 9e, 02, 11, a3, 02, 19, a7, 02, ab, 02, 05, 0d, 11, 15, 9a, 02, 1d, 9e, 02, 11, a3, 02, 19, a7, 02, ab, 02, 05, 0d, 11, 15, 00, 96, 02, 9a, 02, 1d, 9e, 02, 11, a3, 02, 19, a7, 02, ab, 02, 05, 0d, 11, 15, 93, 02, 15, 00, 96, 02, 9a, 02, 1d, 9e, 02, 11, a3, 02, 19, a7, 02, ab, 02, 05, 0d, 11, 15, 93, 02, 15, 00, 96, 02, 9a, 02, 1d, 9e, 02, 11, a3, 02, 19, a7, 02, ab, 02, 05, 0d, 11, 15, 8e, 02, af, 02, 93, 02, 15, 00, 96, 02, 9a, 02, 1d, 9e, 02, 11, a3, 02, 19, a7, 02, ab, 02, 05, 0d, 11, 15, 19, 25, 1d, 01, 23, 05, 01, 11, 20, 05, 02, 01, 0c, 00, 11, 00, 00, 12, 01, 0a, 02, 02, 10, 00, 15, 20, 09, 12, 00, 10, 00, 15, 00, 01, 17, 00, 1b, 00, 00, 17, 00, 1b, 00, 00, 1c, 00, 1e, 12, 01, 0e, 00, 0f, 0f, 01, 0d, 00, 1e, 20, 25, 0d, 00, 0d, 00, 1f, 25, 00, 1e, 00, 1f, 9e, 02, 02, 0d, 00, 0e, a3, 02, 00, 12, 00, 17, 20, 9e, 02, 19, 00, 12, 00, 17, 43, 01, 10, 00, 15, 20, 11, 9a, 02, 00, 10, 00, 15, 00, 00, 16, 01, 0e, 9a, 02, 02, 14, 00, 19, 20, 1d, 96, 02, 00, 14, 00, 19, 00, 01, 1b, 00, 1f, 00, 00, 1b, 00, 1f, 00, 00, 20, 00, 22, 96, 02, 01, 12, 00, 13, 93, 02, 01, 11, 00, 22, 20, 8e, 02, 15, 00, 11, 00, 23, 8e, 02, 00, 22, 00, 23, 19, 03, 09, 00, 0f, 8b, 02, 01, 05, 00, 06]
Number of files: 1
- file 0 => global file 1
Number of expressions: 76
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 2 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 3 operands: lhs = Zero, rhs = Expression(4, Sub)
- expression 4 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 5 operands: lhs = Expression(72, Add), rhs = Counter(6)
- expression 6 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 7 operands: lhs = Counter(1), rhs = Counter(3)
- expression 8 operands: lhs = Counter(4), rhs = Counter(5)
- expression 9 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 10 operands: lhs = Counter(1), rhs = Counter(3)
- expression 11 operands: lhs = Counter(4), rhs = Counter(5)
- expression 12 operands: lhs = Expression(72, Add), rhs = Counter(6)
- expression 13 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 14 operands: lhs = Counter(1), rhs = Counter(3)
- expression 15 operands: lhs = Counter(4), rhs = Counter(5)
- expression 16 operands: lhs = Expression(71, Sub), rhs = Zero
- expression 17 operands: lhs = Expression(72, Add), rhs = Counter(6)
- expression 18 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 19 operands: lhs = Counter(1), rhs = Counter(3)
- expression 20 operands: lhs = Counter(4), rhs = Counter(5)
- expression 21 operands: lhs = Expression(71, Sub), rhs = Counter(4)
- expression 22 operands: lhs = Expression(72, Add), rhs = Counter(6)
- expression 23 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 24 operands: lhs = Counter(1), rhs = Counter(3)
- expression 25 operands: lhs = Counter(4), rhs = Counter(5)
- expression 26 operands: lhs = Expression(71, Sub), rhs = Counter(4)
- expression 27 operands: lhs = Expression(72, Add), rhs = Counter(6)
- expression 28 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 29 operands: lhs = Counter(1), rhs = Counter(3)
- expression 30 operands: lhs = Counter(4), rhs = Counter(5)
- expression 31 operands: lhs = Expression(70, Sub), rhs = Counter(7)
- expression 32 operands: lhs = Expression(71, Sub), rhs = Counter(4)
- expression 33 operands: lhs = Expression(72, Add), rhs = Counter(6)
- expression 34 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 35 operands: lhs = Counter(1), rhs = Counter(3)
- expression 36 operands: lhs = Counter(4), rhs = Counter(5)
- expression 37 operands: lhs = Expression(70, Sub), rhs = Counter(7)
- expression 38 operands: lhs = Expression(71, Sub), rhs = Counter(4)
- expression 39 operands: lhs = Expression(72, Add), rhs = Counter(6)
- expression 40 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 41 operands: lhs = Counter(1), rhs = Counter(3)
- expression 42 operands: lhs = Counter(4), rhs = Counter(5)
- expression 43 operands: lhs = Zero, rhs = Expression(69, Sub)
- expression 44 operands: lhs = Expression(70, Sub), rhs = Counter(7)
- expression 45 operands: lhs = Expression(71, Sub), rhs = Counter(4)
- expression 46 operands: lhs = Expression(72, Add), rhs = Counter(6)
- expression 47 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 48 operands: lhs = Counter(1), rhs = Counter(3)
- expression 49 operands: lhs = Counter(4), rhs = Counter(5)
- expression 50 operands: lhs = Expression(68, Add), rhs = Counter(5)
- expression 51 operands: lhs = Zero, rhs = Expression(69, Sub)
- expression 52 operands: lhs = Expression(70, Sub), rhs = Counter(7)
- expression 53 operands: lhs = Expression(71, Sub), rhs = Counter(4)
- expression 54 operands: lhs = Expression(72, Add), rhs = Counter(6)
- expression 55 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 56 operands: lhs = Counter(1), rhs = Counter(3)
- expression 57 operands: lhs = Counter(4), rhs = Counter(5)
- expression 58 operands: lhs = Expression(68, Add), rhs = Counter(5)
- expression 59 operands: lhs = Zero, rhs = Expression(69, Sub)
- expression 60 operands: lhs = Expression(70, Sub), rhs = Counter(7)
- expression 61 operands: lhs = Expression(71, Sub), rhs = Counter(4)
- expression 62 operands: lhs = Expression(72, Add), rhs = Counter(6)
- expression 63 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 64 operands: lhs = Counter(1), rhs = Counter(3)
- expression 65 operands: lhs = Counter(4), rhs = Counter(5)
- expression 66 operands: lhs = Expression(67, Sub), rhs = Expression(75, Add)
- expression 67 operands: lhs = Expression(68, Add), rhs = Counter(5)
- expression 68 operands: lhs = Zero, rhs = Expression(69, Sub)
- expression 69 operands: lhs = Expression(70, Sub), rhs = Counter(7)
- expression 70 operands: lhs = Expression(71, Sub), rhs = Counter(4)
- expression 71 operands: lhs = Expression(72, Add), rhs = Counter(6)
- expression 72 operands: lhs = Expression(73, Add), rhs = Expression(74, Add)
- expression 73 operands: lhs = Counter(1), rhs = Counter(3)
- expression 74 operands: lhs = Counter(4), rhs = Counter(5)
- expression 75 operands: lhs = Counter(6), rhs = Counter(9)
Number of file 0 mappings: 29
- Code(Counter(0)) at (prev + 35, 5) to (start + 1, 17)
- Branch { true: Counter(1), false: Expression(0, Sub) } at (prev + 1, 12) to (start + 0, 17)
    false = (c0 - c1)
- Code(Zero) at (prev + 0, 18) to (start + 1, 10)
- Code(Expression(0, Sub)) at (prev + 2, 16) to (start + 0, 21)
    = (c0 - c1)
- Branch { true: Counter(2), false: Expression(4, Sub) } at (prev + 0, 16) to (start + 0, 21)
    false = ((c0 - c1) - c2)
- Code(Zero) at (prev + 1, 23) to (start + 0, 27)
- Code(Zero) at (prev + 0, 23) to (start + 0, 27)
- Code(Zero) at (prev + 0, 28) to (start + 0, 30)
- Code(Expression(4, Sub)) at (prev + 1, 14) to (start + 0, 15)
    = ((c0 - c1) - c2)
- Code(Expression(3, Add)) at (prev + 1, 13) to (start + 0, 30)
    = (Zero + ((c0 - c1) - c2))
- Branch { true: Counter(9), false: Counter(3) } at (prev + 0, 13) to (start + 0, 31)
- Code(Counter(9)) at (prev + 0, 30) to (start + 0, 31)
- Code(Expression(71, Sub)) at (prev + 2, 13) to (start + 0, 14)
    = (((c1 + c3) + (c4 + c5)) - c6)
- Code(Expression(72, Add)) at (prev + 0, 18) to (start + 0, 23)
    = ((c1 + c3) + (c4 + c5))
- Branch { true: Expression(71, Sub), false: Counter(6) } at (prev + 0, 18) to (start + 0, 23)
    true  = (((c1 + c3) + (c4 + c5)) - c6)
- Code(Expression(16, Add)) at (prev + 1, 16) to (start + 0, 21)
    = ((((c1 + c3) + (c4 + c5)) - c6) + Zero)
- Branch { true: Counter(4), false: Expression(70, Sub) } at (prev + 0, 16) to (start + 0, 21)
    false = ((((c1 + c3) + (c4 + c5)) - c6) - c4)
- Code(Zero) at (prev + 0, 22) to (start + 1, 14)
- Code(Expression(70, Sub)) at (prev + 2, 20) to (start + 0, 25)
    = ((((c1 + c3) + (c4 + c5)) - c6) - c4)
- Branch { true: Counter(7), false: Expression(69, Sub) } at (prev + 0, 20) to (start + 0, 25)
    false = (((((c1 + c3) + (c4 + c5)) - c6) - c4) - c7)
- Code(Zero) at (prev + 1, 27) to (start + 0, 31)
- Code(Zero) at (prev + 0, 27) to (start + 0, 31)
- Code(Zero) at (prev + 0, 32) to (start + 0, 34)
- Code(Expression(69, Sub)) at (prev + 1, 18) to (start + 0, 19)
    = (((((c1 + c3) + (c4 + c5)) - c6) - c4) - c7)
- Code(Expression(68, Add)) at (prev + 1, 17) to (start + 0, 34)
    = (Zero + (((((c1 + c3) + (c4 + c5)) - c6) - c4) - c7))
- Branch { true: Expression(67, Sub), false: Counter(5) } at (prev + 0, 17) to (start + 0, 35)
    true  = ((Zero + (((((c1 + c3) + (c4 + c5)) - c6) - c4) - c7)) - c5)
- Code(Expression(67, Sub)) at (prev + 0, 34) to (start + 0, 35)
    = ((Zero + (((((c1 + c3) + (c4 + c5)) - c6) - c4) - c7)) - c5)
- Code(Counter(6)) at (prev + 3, 9) to (start + 0, 15)
- Code(Expression(66, Add)) at (prev + 1, 5) to (start + 0, 6)
    = (((Zero + (((((c1 + c3) + (c4 + c5)) - c6) - c4) - c7)) - c5) + (c6 + c9))

Function name: loops_branches::main
Raw bytes (9): 0x[01, 01, 00, 01, 01, 38, 01, 05, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 0
Number of file 0 mappings: 1
- Code(Counter(0)) at (prev + 56, 1) to (start + 5, 2)

