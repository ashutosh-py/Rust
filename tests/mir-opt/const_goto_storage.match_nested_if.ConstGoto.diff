- // MIR for `match_nested_if` before ConstGoto
+ // MIR for `match_nested_if` after ConstGoto
  
  fn match_nested_if() -> bool {
      let mut _0: bool;                    // return place in scope 0 at $DIR/const_goto_storage.rs:+0:25: +0:29
      let _1: bool;                        // in scope 0 at $DIR/const_goto_storage.rs:+1:9: +1:12
      let mut _2: bool;                    // in scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28
      scope 1 {
          debug val => _1;                 // in scope 1 at $DIR/const_goto_storage.rs:+1:9: +1:12
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/const_goto_storage.rs:+1:9: +1:12
          StorageLive(_2);                 // scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28
          _2 = const true;                 // scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28
          switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28
      }
  
      bb1: {
          StorageDead(_2);                 // scope 0 at $DIR/const_goto_storage.rs:+2:51: +2:52
          _1 = const true;                 // scope 0 at $DIR/const_goto_storage.rs:+8:17: +8:21
          goto -> bb3;                     // scope 0 at $DIR/const_goto_storage.rs:+8:17: +8:21
      }
  
      bb2: {
          StorageDead(_2);                 // scope 0 at $DIR/const_goto_storage.rs:+2:51: +2:52
          _1 = const false;                // scope 0 at $DIR/const_goto_storage.rs:+10:14: +10:19
          goto -> bb3;                     // scope 0 at $DIR/const_goto_storage.rs:+10:14: +10:19
      }
  
      bb3: {
          _0 = _1;                         // scope 1 at $DIR/const_goto_storage.rs:+12:5: +12:8
          StorageDead(_1);                 // scope 0 at $DIR/const_goto_storage.rs:+13:1: +13:2
          return;                          // scope 0 at $DIR/const_goto_storage.rs:+13:2: +13:2
      }
  }
  
