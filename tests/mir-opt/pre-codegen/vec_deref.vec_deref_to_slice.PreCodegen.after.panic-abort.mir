// MIR for `vec_deref_to_slice` after PreCodegen

fn vec_deref_to_slice(_1: &Vec<u8>) -> &[u8] {
    debug v => _1;
    let mut _0: &[u8];
    scope 1 (inlined <Vec<u8> as Deref>::deref) {
        debug self => _1;
        let mut _4: *const u8;
        let mut _5: usize;
        scope 2 {
            scope 3 (inlined Vec::<u8>::as_ptr) {
                debug self => _1;
                let mut _2: &alloc::raw_vec::RawVec<u8>;
                scope 4 (inlined alloc::raw_vec::RawVec::<u8>::ptr) {
                    debug self => _2;
                    let mut _3: std::ptr::NonNull<u8>;
                    scope 5 (inlined Unique::<u8>::as_ptr) {
                        debug ((self: Unique<u8>).0: std::ptr::NonNull<u8>) => _3;
                        debug ((self: Unique<u8>).1: std::marker::PhantomData<u8>) => const PhantomData::<u8>;
                        scope 6 (inlined NonNull::<u8>::as_ptr) {
                            debug self => _3;
                        }
                    }
                }
            }
            scope 7 (inlined std::slice::from_raw_parts::<'_, u8>) {
                debug data => _4;
                debug len => _5;
                let _7: *const [u8];
                scope 8 {
                    scope 9 (inlined core::ub_checks::check_language_ub) {
                        scope 10 (inlined core::ub_checks::check_language_ub::runtime) {
                        }
                    }
                    scope 11 (inlined std::mem::size_of::<u8>) {
                    }
                    scope 12 (inlined align_of::<u8>) {
                    }
                    scope 13 (inlined slice_from_raw_parts::<u8>) {
                        debug data => _4;
                        debug len => _5;
                        scope 14 (inlined std::ptr::internal_repr::from_raw_parts::<*const [u8], *const u8>) {
                            debug data_pointer => _4;
                            debug metadata => _5;
                            let mut _6: std::ptr::internal_repr::PtrComponents<*const u8, usize>;
                            scope 15 {
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        StorageLive(_4);
        StorageLive(_2);
        _2 = &((*_1).0: alloc::raw_vec::RawVec<u8>);
        StorageLive(_3);
        _3 = ((((*_1).0: alloc::raw_vec::RawVec<u8>).0: std::ptr::Unique<u8>).0: std::ptr::NonNull<u8>);
        _4 = (_3.0: *const u8);
        StorageDead(_3);
        StorageDead(_2);
        StorageLive(_5);
        _5 = ((*_1).1: usize);
        StorageLive(_6);
        _6 = std::ptr::internal_repr::PtrComponents::<*const u8, usize> { data_pointer: _4, metadata: _5 };
        _7 = move _6 as *const [u8] (Transmute);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        _0 = &(*_7);
        return;
    }
}
