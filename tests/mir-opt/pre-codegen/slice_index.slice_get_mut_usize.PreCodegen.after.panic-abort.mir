// MIR for `slice_get_mut_usize` after PreCodegen

fn slice_get_mut_usize(_1: &mut [u32], _2: usize) -> Option<&mut u32> {
    debug slice => _1;
    debug index => _2;
    let mut _0: std::option::Option<&mut u32>;
    scope 1 (inlined core::slice::<impl [u32]>::get_mut::<usize>) {
        debug self => _1;
        debug index => _2;
        scope 2 (inlined <usize as SliceIndex<[u32]>>::get_mut) {
            debug self => _2;
            debug slice => _1;
            let mut _3: usize;
            let mut _4: bool;
            let mut _5: *mut [u32];
            let mut _11: *mut u32;
            let mut _12: &mut u32;
            scope 3 {
                scope 4 (inlined <usize as SliceIndex<[u32]>>::get_unchecked_mut) {
                    debug self => _2;
                    debug slice => _5;
                    let mut _8: usize;
                    let mut _9: (usize, usize);
                    let mut _10: *mut u32;
                    scope 5 {
                        scope 9 (inlined std::ptr::mut_ptr::<impl *mut [u32]>::as_mut_ptr) {
                            debug self => _5;
                        }
                        scope 10 (inlined std::ptr::mut_ptr::<impl *mut u32>::add) {
                            debug self => _10;
                            debug count => _2;
                            scope 11 {
                            }
                        }
                    }
                    scope 6 (inlined std::ptr::mut_ptr::<impl *mut [u32]>::len) {
                        debug self => _5;
                        let mut _6: *const [u32];
                        scope 7 (inlined std::ptr::metadata::<[u32]>) {
                            debug ptr => _6;
                            let mut _7: std::ptr::metadata::PtrRepr<[u32]>;
                            scope 8 {
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        StorageLive(_11);
        StorageLive(_4);
        StorageLive(_3);
        _3 = Len((*_1));
        _4 = Lt(_2, move _3);
        switchInt(move _4) -> [0: bb1, otherwise: bb2];
    }

    bb1: {
        StorageDead(_3);
        _0 = const Option::<&mut u32>::None;
        goto -> bb3;
    }

    bb2: {
        StorageDead(_3);
        StorageLive(_12);
        StorageLive(_5);
        _5 = &raw mut (*_1);
        StorageLive(_9);
        StorageLive(_8);
        StorageLive(_6);
        _6 = _5 as *const [u32] (PointerCoercion(MutToConstPointer));
        StorageLive(_7);
        _7 = std::ptr::metadata::PtrRepr::<[u32]> { const_ptr: _6 };
        _8 = ((_7.2: std::ptr::metadata::PtrComponents<[u32]>).1: usize);
        StorageDead(_7);
        StorageDead(_6);
        _9 = (_2, move _8);
        StorageDead(_8);
        UbCheck(LibraryUb): <usize as SliceIndex<[T]>>::get_unchecked_mut::precondition_check(move _9);
        StorageDead(_9);
        StorageLive(_10);
        _10 = _5 as *mut u32 (PtrToPtr);
        _11 = Offset(_10, _2);
        StorageDead(_10);
        StorageDead(_5);
        _12 = &mut (*_11);
        _0 = Option::<&mut u32>::Some(move _12);
        StorageDead(_12);
        goto -> bb3;
    }

    bb3: {
        StorageDead(_4);
        StorageDead(_11);
        return;
    }
}
