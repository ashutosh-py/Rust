// MIR for `swap_primitive` after PreCodegen

fn swap_primitive(_1: &mut i32, _2: &mut i32) -> () {
    debug a => _1;                       // in scope 0 at $DIR/mem_swap.rs:+0:23: +0:24
    debug b => _2;                       // in scope 0 at $DIR/mem_swap.rs:+0:36: +0:37
    let mut _0: ();                      // return place in scope 0 at $DIR/mem_swap.rs:+0:49: +0:49
    scope 1 (inlined std::mem::swap::<i32>) { // at $DIR/mem_swap.rs:9:5: 9:25
        debug x => _1;                   // in scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        debug y => _2;                   // in scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        scope 2 {
        }
        scope 3 (inlined mem::swap_simple::<i32>) { // at $SRC_DIR/core/src/mem/mod.rs:LL:COL
            debug x => _1;               // in scope 3 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
            debug y => _2;               // in scope 3 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
            let _3: *mut i32;            // in scope 3 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
            scope 4 {
                debug x => _3;           // in scope 4 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
                let _4: *mut i32;        // in scope 4 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
                scope 5 {
                    debug y => _4;       // in scope 5 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
                    scope 6 {
                        let _5: i32;     // in scope 6 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
                        scope 7 {
                            debug a => _5; // in scope 7 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
                            let _6: i32; // in scope 7 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
                            scope 8 {
                                debug b => _6; // in scope 8 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
                                scope 15 (inlined std::ptr::write::<i32>) { // at $SRC_DIR/core/src/mem/mod.rs:LL:COL
                                    debug dst => _3; // in scope 15 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL
                                    debug src => _6; // in scope 15 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL
                                    let mut _9: *mut i32; // in scope 15 at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                                    scope 16 {
                                        scope 17 (inlined std::ptr::write::runtime::<i32>) { // at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                                            debug dst => _9; // in scope 17 at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                                        }
                                    }
                                }
                                scope 18 (inlined std::ptr::write::<i32>) { // at $SRC_DIR/core/src/mem/mod.rs:LL:COL
                                    debug dst => _4; // in scope 18 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL
                                    debug src => _5; // in scope 18 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL
                                    let mut _10: *mut i32; // in scope 18 at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                                    scope 19 {
                                        scope 20 (inlined std::ptr::write::runtime::<i32>) { // at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                                            debug dst => _10; // in scope 20 at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                                        }
                                    }
                                }
                            }
                            scope 12 (inlined ptr::read_mut::<i32>) { // at $SRC_DIR/core/src/mem/mod.rs:LL:COL
                                debug src => _4; // in scope 12 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL
                                let mut _8: *mut i32; // in scope 12 at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                                scope 13 {
                                    scope 14 (inlined ptr::read_mut::runtime::<i32>) { // at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                                        debug src => _8; // in scope 14 at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                                    }
                                }
                            }
                        }
                        scope 9 (inlined ptr::read_mut::<i32>) { // at $SRC_DIR/core/src/mem/mod.rs:LL:COL
                            debug src => _3; // in scope 9 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL
                            let mut _7: *mut i32; // in scope 9 at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                            scope 10 {
                                scope 11 (inlined ptr::read_mut::runtime::<i32>) { // at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                                    debug src => _7; // in scope 11 at $SRC_DIR/core/src/intrinsics.rs:LL:COL
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        StorageLive(_4);                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        StorageLive(_5);                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        StorageLive(_6);                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        _3 = &raw mut (*_1);             // scope 3 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        _4 = &raw mut (*_2);             // scope 4 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        StorageLive(_7);                 // scope 6 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        _5 = (*_3);                      // scope 10 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL
        StorageDead(_7);                 // scope 6 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        StorageLive(_8);                 // scope 7 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        _6 = (*_4);                      // scope 13 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL
        StorageDead(_8);                 // scope 7 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        StorageLive(_9);                 // scope 8 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        (*_3) = move _6;                 // scope 16 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL
        StorageDead(_9);                 // scope 8 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        StorageLive(_10);                // scope 8 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        (*_4) = move _5;                 // scope 19 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL
        StorageDead(_10);                // scope 8 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        StorageDead(_6);                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        StorageDead(_5);                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        StorageDead(_4);                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        StorageDead(_3);                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL
        return;                          // scope 0 at $DIR/mem_swap.rs:+2:2: +2:2
    }
}
