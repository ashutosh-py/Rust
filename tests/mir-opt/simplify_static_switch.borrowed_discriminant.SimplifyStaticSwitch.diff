- // MIR for `borrowed_discriminant` before SimplifyStaticSwitch
+ // MIR for `borrowed_discriminant` after SimplifyStaticSwitch
  
  fn borrowed_discriminant() -> bool {
      let mut _0: bool;
      let mut _1: Foo;
      let mut _2: isize;
      let mut _3: &mut isize;
  
      bb0: {
          _1 = Foo::A;
          goto -> bb1;
      }
  
      bb1: {
          _2 = discriminant(_1);
          _3 = &mut _2;
          switchInt(_2) -> [0: bb2, otherwise: bb3];
      }
  
      bb2: {
          _0 = const true;
          return;
      }
  
      bb3: {
          _0 = const false;
          return;
      }
  }
  
