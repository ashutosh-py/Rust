// MIR for `slow_2_u` after SimplifyPowOfTwo

fn slow_2_u(_1: u32) -> u32 {
    debug a => _1;
    let mut _0: u32;
    let mut _2: u32;
    let mut _3: (u32, bool);
    let mut _4: bool;
    let mut _5: bool;
    let mut _6: u32;
    let mut _7: u32;

    bb0: {
        StorageLive(_2);
        _2 = _1;
        _3 = CheckedMul(move _2, const 1_u32);
        _4 = Lt((_3.0: u32), const 32_u32);
        _5 = BitOr((_3.1: bool), _4);
        _6 = _5 as u32 (IntToInt);
        _7 = Shl(const 1_u32, (_3.0: u32));
        _0 = MulUnchecked(_7, _6);
        assert(_5, "attempt to compute `{} * {}`, which would overflow", const 1_u32, (_3.0: u32)) -> [success: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_2);
        return;
    }
}
