- // MIR for `opt9` before EarlyOtherwiseBranch
+ // MIR for `opt9` after EarlyOtherwiseBranch
  
  fn opt9(_1: E8, _2: E16) -> u32 {
      debug x => _1;
      debug y => _2;
      let mut _0: u32;
      let mut _3: (E8, E16);
      let mut _4: E8;
      let mut _5: E16;
      let mut _6: u16;
      let mut _7: u16;
      let mut _8: u16;
      let mut _9: u8;
  
      bb0: {
          StorageLive(_3);
          StorageLive(_4);
          _4 = move _1;
          StorageLive(_5);
          _5 = move _2;
          _3 = (move _4, move _5);
          StorageDead(_5);
          StorageDead(_4);
          _9 = discriminant((_3.0: E8));
          switchInt(move _9) -> [0: bb2, 1: bb3, 2: bb4, otherwise: bb9];
      }
  
      bb1: {
          _0 = const 0_u32;
          goto -> bb8;
      }
  
      bb2: {
          _6 = discriminant((_3.1: E16));
          switchInt(move _6) -> [0: bb5, otherwise: bb1];
      }
  
      bb3: {
          _7 = discriminant((_3.1: E16));
          switchInt(move _7) -> [1: bb6, otherwise: bb1];
      }
  
      bb4: {
          _8 = discriminant((_3.1: E16));
          switchInt(move _8) -> [2: bb7, otherwise: bb1];
      }
  
      bb5: {
          _0 = const 1_u32;
          goto -> bb8;
      }
  
      bb6: {
          _0 = const 2_u32;
          goto -> bb8;
      }
  
      bb7: {
          _0 = const 3_u32;
          goto -> bb8;
      }
  
      bb8: {
          StorageDead(_3);
          return;
      }
  
      bb9: {
          unreachable;
      }
  }
  
