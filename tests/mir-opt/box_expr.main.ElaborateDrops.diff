- // MIR for `main` before ElaborateDrops
+ // MIR for `main` after ElaborateDrops
  
  fn main() -> () {
      let mut _0: ();
      let _1: std::boxed::Box<S>;
      let mut _2: usize;
      let mut _3: usize;
      let mut _4: *mut u8;
      let mut _5: std::boxed::Box<S>;
      let _6: ();
      let mut _7: std::boxed::Box<S>;
+     let mut _8: &mut std::boxed::Box<S>;
+     let mut _9: ();
      scope 1 {
          debug x => _1;
      }
  
      bb0: {
          StorageLive(_1);
          _2 = SizeOf(S);
          _3 = AlignOf(S);
          _4 = alloc::alloc::exchange_malloc(move _2, move _3) -> [return: bb1, unwind continue];
      }
  
      bb1: {
          StorageLive(_5);
          _5 = ShallowInitBox(move _4, S);
          (*_5) = S::new() -> [return: bb2, unwind: bb7];
      }
  
      bb2: {
          _1 = move _5;
          StorageDead(_5);
          StorageLive(_6);
          StorageLive(_7);
          _7 = move _1;
          _6 = std::mem::drop::<Box<S>>(move _7) -> [return: bb3, unwind: bb5];
      }
  
      bb3: {
          StorageDead(_7);
          StorageDead(_6);
          _0 = const ();
-         drop(_1) -> [return: bb4, unwind continue];
+         goto -> bb4;
      }
  
      bb4: {
          StorageDead(_1);
          return;
      }
  
      bb5 (cleanup): {
-         drop(_7) -> [return: bb6, unwind terminate(cleanup)];
+         goto -> bb6;
      }
  
      bb6 (cleanup): {
-         drop(_1) -> [return: bb8, unwind terminate(cleanup)];
+         goto -> bb8;
      }
  
      bb7 (cleanup): {
-         drop(_5) -> [return: bb8, unwind terminate(cleanup)];
+         goto -> bb10;
      }
  
      bb8 (cleanup): {
          resume;
+     }
+ 
+     bb9 (cleanup): {
+         _8 = &mut _5;
+         _9 = <Box<S> as Drop>::drop(move _8) -> [return: bb8, unwind terminate(cleanup)];
+     }
+ 
+     bb10 (cleanup): {
+         goto -> bb9;
      }
  }
  
