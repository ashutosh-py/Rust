// MIR for `main` after ConstProp

fn main() -> () {
    let mut _0: ();
    let _1: &[(std::option::Option<i32>, &[&str])];
    let mut _2: &&[(std::option::Option<i32>, &[&str])];

    bb0: {
        StorageLive(_1);
        StorageLive(_2);
        _2 = const {alloc6: &&[(Option<i32>, &[&str])]};
        _1 = (*_2);
        StorageDead(_2);
        StorageDead(_1);
        _0 = const ();
        return;
    }
}

alloc6 (static: FOO, size: 8, align: 4) {
    ╾─alloc19─╼ 03 00 00 00                         │ ╾──╼....
}

alloc19 (size: 48, align: 4) {
    0x00 │ 00 00 00 00 __ __ __ __ ╾─alloc11─╼ 00 00 00 00 │ ....░░░░╾──╼....
    0x10 │ 00 00 00 00 __ __ __ __ ╾─alloc14─╼ 02 00 00 00 │ ....░░░░╾──╼....
    0x20 │ 01 00 00 00 2a 00 00 00 ╾─alloc17─╼ 03 00 00 00 │ ....*...╾──╼....
}

alloc11 (size: 0, align: 4) {}

alloc14 (size: 16, align: 4) {
    ╾─alloc1──╼ 03 00 00 00 ╾─alloc2──╼ 03 00 00 00 │ ╾──╼....╾──╼....
}

alloc1 (size: 3, align: 1) {
    66 6f 6f                                        │ foo
}

alloc2 (size: 3, align: 1) {
    62 61 72                                        │ bar
}

alloc17 (size: 24, align: 4) {
    0x00 │ ╾─alloc3──╼ 03 00 00 00 ╾─alloc4──╼ 03 00 00 00 │ ╾──╼....╾──╼....
    0x10 │ ╾─alloc5──╼ 04 00 00 00                         │ ╾──╼....
}

alloc3 (size: 3, align: 1) {
    6d 65 68                                        │ meh
}

alloc4 (size: 3, align: 1) {
    6d 6f 70                                        │ mop
}

alloc5 (size: 4, align: 1) {
    6d c3 b6 70                                     │ m..p
}
