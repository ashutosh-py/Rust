// MIR for `while_loop` after PreCodegen

fn while_loop(_1: bool) -> () {
    debug c => _1;                       // in scope 0 at $DIR/while_storage.rs:+0:15: +0:16
    let mut _0: ();                      // return place in scope 0 at $DIR/while_storage.rs:+0:24: +0:24
    let mut _2: bool;                    // in scope 0 at $DIR/while_storage.rs:+1:11: +1:22
    let mut _3: bool;                    // in scope 0 at $DIR/while_storage.rs:+2:12: +2:23

    bb0: {
        goto -> bb1;                     // scope 0 at $DIR/while_storage.rs:+1:5: +5:6
    }

    bb1: {
        _2 = get_bool(_1) -> bb2;        // scope 0 at $DIR/while_storage.rs:+1:11: +1:22
                                         // mir::Constant
                                         // + span: $DIR/while_storage.rs:11:11: 11:19
                                         // + literal: Const { ty: fn(bool) -> bool {get_bool}, val: Value(<ZST>) }
    }

    bb2: {
        switchInt(move _2) -> [0: bb5, otherwise: bb3]; // scope 0 at $DIR/while_storage.rs:+1:11: +1:22
    }

    bb3: {
        _3 = get_bool(_1) -> bb4;        // scope 0 at $DIR/while_storage.rs:+2:12: +2:23
                                         // mir::Constant
                                         // + span: $DIR/while_storage.rs:12:12: 12:20
                                         // + literal: Const { ty: fn(bool) -> bool {get_bool}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _3) -> [0: bb1, otherwise: bb5]; // scope 0 at $DIR/while_storage.rs:+2:12: +2:23
    }

    bb5: {
        return;                          // scope 0 at no-location
    }
}
