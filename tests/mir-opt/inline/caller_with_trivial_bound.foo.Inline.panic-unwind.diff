- // MIR for `foo` before Inline
+ // MIR for `foo` after Inline
  
  fn foo() -> () {
      let mut _0: ();
      let mut _1: <IntFactory as Factory<T>>::Item;
+     let mut _2: *mut <IntFactory as Factory<T>>::Item;
+     let mut _3: ();
      scope 1 {
          debug x => _1;
      }
  
      bb0: {
          StorageLive(_1);
          _1 = bar::<T>() -> [return: bb1, unwind continue];
      }
  
      bb1: {
          _0 = const ();
-         drop(_1) -> [return: bb2, unwind: bb3];
+         _2 = &raw mut _1;
+         _3 = std::ptr::drop_in_place::<<IntFactory as Factory<T>>::Item>(move _2) -> [return: bb2, unwind: bb3];
      }
  
      bb2: {
          StorageDead(_1);
          return;
      }
  
      bb3 (cleanup): {
          resume;
      }
  }
  
