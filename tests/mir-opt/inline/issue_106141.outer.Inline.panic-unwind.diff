- // MIR for `outer` before Inline
+ // MIR for `outer` after Inline
  
  fn outer() -> usize {
      let mut _0: usize;
+     scope 1 (inlined inner) {
+         scope 2 {
+             debug buffer => const _;
+             let _1: usize;
+             scope 3 {
+                 debug index => _1;
+             }
+             scope 4 (inlined index) {
+             }
+         }
+     }
  
      bb0: {
-         _0 = inner() -> bb1;
+         StorageLive(_1);
+         goto -> bb1;
      }
  
      bb1: {
-         return;
+         goto -> bb1;
      }
  }
  
