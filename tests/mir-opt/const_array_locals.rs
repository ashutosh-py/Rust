//@ test-mir-pass: PromoteArraysOpt
#![feature(repr_simd)]

#[repr(simd)]
struct F32x8([f32; 8]);

// EMIT_MIR const_array_locals.main.PromoteArraysOpt.diff
// CHECK-LABEL: fn main(
#[rustfmt::skip]
pub fn main() {
    // CHECK: let [[array_lit:_.*]]: [i32; 32];
    // CHECK: let mut [[moved_array:_.*]]: [u16; 32];
    // CHECK:     debug _arr => [[arr:_.*]];

    // CHECK:       [[array_lit]] = (*{{_[0-9]*}})
    let _arr = [
        255, 105, 15, 39, 62, 251, 191, 178, 9, 4, 56, 221,
        193, 164, 194, 197, 6, 243, 218, 171, 87, 247, 104,
        159, 22, 157, 105, 31, 96, 173, 50, 1,
    ];
    let _foo = [
        [255, 105, 15, 39, 62, 251, 191, 178, 9, 4, 56, 221],
        [193, 164, 194, 197, 6, 243, 218, 171, 87, 247, 104, 42],
    ];
    let _darr = *&[
        255, 105, 15, 39, 62, 251, 191, 178, 9, 4, 56, 221,
        193, 164, 194, 197, 6, 243, 218, 171, 87, 247, 104,
        159, 22, 157, 105, 31, 96, 173, 50, 1,
    ];

    // CHECK:       [[moved_array]] = (*{{_[0-9]*}})
    consume([255, 105, 15, 39, 62, 251, 191, 178, 9, 4, 56, 221,
        193, 164, 194, 197, 6, 243, 218, 171, 87, 247, 104,
        159, 22, 157, 105, 31, 96, 173, 50, 1,]);

    let _f = F32x8([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]);

    // ice
    [[1, 0, 0], [0, 1, 0], [0, 0, 1]]; // 2D array
}

fn consume(_arr: [u16; 32]) {
    unimplemented!()
}
