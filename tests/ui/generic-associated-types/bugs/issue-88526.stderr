error[E0207]: the type parameter `I` is not constrained by the impl trait, self type, or predicates
  --> $DIR/issue-88526.rs:25:13
   |
LL | impl<'q, Q, I, F> A for TestB<Q, F>
   |             ^ unconstrained type parameter
   |
   = note: to constrain `I`, use it in the implemented trait, in the self type, or in an equality with an associated type
   = note: `I` is bound to an associated type, but the reference to the associated type itself uses unconstrained generic parameters

error[E0309]: the parameter type `F` may not live long enough
  --> $DIR/issue-88526.rs:16:18
   |
LL |     type I<'a> = &'a F;
   |            --    ^^^^^ ...so that the reference type `&'a F` does not outlive the data it points at
   |            |
   |            the parameter type `F` must be valid for the lifetime `'a` as defined here...
   |
help: consider adding an explicit lifetime bound
   |
LL |     type I<'a> = &'a F where F: 'a;
   |                        +++++++++++

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0207, E0309.
For more information about an error, try `rustc --explain E0207`.
