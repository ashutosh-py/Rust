TokenStream [Ident { ident: "ident", span: #0 bytes(125..130) }, Ident { ident: "r#ident", span: #0 bytes(146..153) }, Punct { ch: ',', spacing: Alone, span: #0 bytes(171..172) }, Punct { ch: '=', spacing: Joint, span: #0 bytes(198..199) }, Punct { ch: '=', spacing: Joint, span: #0 bytes(199..200) }, Punct { ch: '>', spacing: Alone, span: #0 bytes(200..201) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(225..227) }, Group { delimiter: Bracket, stream: TokenStream [Ident { ident: "_", span: #0 bytes(253..254) }], span: #0 bytes(252..255) }, Literal { kind: Integer, symbol: "0", suffix: None, span: #0 bytes(310..311) }, Literal { kind: Float, symbol: "1.0", suffix: None, span: #0 bytes(316..319) }, Literal { kind: Str, symbol: "S", suffix: None, span: #0 bytes(324..327) }, Literal { kind: ByteStr, symbol: "B", suffix: None, span: #0 bytes(332..336) }, Literal { kind: StrRaw(0), symbol: "R", suffix: None, span: #0 bytes(341..345) }, Literal { kind: StrRaw(2), symbol: "R", suffix: None, span: #0 bytes(350..358) }, Literal { kind: ByteStrRaw(0), symbol: "BR", suffix: None, span: #0 bytes(363..369) }, Literal { kind: ByteStrRaw(2), symbol: "BR", suffix: None, span: #0 bytes(374..384) }, Literal { kind: Char, symbol: "C", suffix: None, span: #0 bytes(389..392) }, Literal { kind: Byte, symbol: "B", suffix: None, span: #0 bytes(397..401) }, Literal { kind: Integer, symbol: "0", suffix: Some("q"), span: #0 bytes(432..434) }, Literal { kind: Float, symbol: "1.0", suffix: Some("q"), span: #0 bytes(439..443) }, Literal { kind: Str, symbol: "S", suffix: Some("q"), span: #0 bytes(448..452) }, Literal { kind: ByteStr, symbol: "B", suffix: Some("q"), span: #0 bytes(457..462) }, Literal { kind: StrRaw(0), symbol: "R", suffix: Some("q"), span: #0 bytes(467..472) }, Literal { kind: StrRaw(2), symbol: "R", suffix: Some("q"), span: #0 bytes(477..486) }, Literal { kind: ByteStrRaw(0), symbol: "BR", suffix: Some("q"), span: #0 bytes(491..498) }, Literal { kind: ByteStrRaw(2), symbol: "BR", suffix: Some("q"), span: #0 bytes(503..514) }, Literal { kind: Char, symbol: "C", suffix: Some("q"), span: #0 bytes(519..523) }, Literal { kind: Byte, symbol: "B", suffix: Some("q"), span: #0 bytes(528..533) }]
TokenStream [
    Ident {
        ident: "ident",
        span: #0 bytes(125..130),
    },
    Ident {
        ident: "r#ident",
        span: #0 bytes(146..153),
    },
    Punct {
        ch: ',',
        spacing: Alone,
        span: #0 bytes(171..172),
    },
    Punct {
        ch: '=',
        spacing: Joint,
        span: #0 bytes(198..199),
    },
    Punct {
        ch: '=',
        spacing: Joint,
        span: #0 bytes(199..200),
    },
    Punct {
        ch: '>',
        spacing: Alone,
        span: #0 bytes(200..201),
    },
    Group {
        delimiter: Parenthesis,
        stream: TokenStream [],
        span: #0 bytes(225..227),
    },
    Group {
        delimiter: Bracket,
        stream: TokenStream [
            Ident {
                ident: "_",
                span: #0 bytes(253..254),
            },
        ],
        span: #0 bytes(252..255),
    },
    Literal {
        kind: Integer,
        symbol: "0",
        suffix: None,
        span: #0 bytes(310..311),
    },
    Literal {
        kind: Float,
        symbol: "1.0",
        suffix: None,
        span: #0 bytes(316..319),
    },
    Literal {
        kind: Str,
        symbol: "S",
        suffix: None,
        span: #0 bytes(324..327),
    },
    Literal {
        kind: ByteStr,
        symbol: "B",
        suffix: None,
        span: #0 bytes(332..336),
    },
    Literal {
        kind: StrRaw(0),
        symbol: "R",
        suffix: None,
        span: #0 bytes(341..345),
    },
    Literal {
        kind: StrRaw(2),
        symbol: "R",
        suffix: None,
        span: #0 bytes(350..358),
    },
    Literal {
        kind: ByteStrRaw(0),
        symbol: "BR",
        suffix: None,
        span: #0 bytes(363..369),
    },
    Literal {
        kind: ByteStrRaw(2),
        symbol: "BR",
        suffix: None,
        span: #0 bytes(374..384),
    },
    Literal {
        kind: Char,
        symbol: "C",
        suffix: None,
        span: #0 bytes(389..392),
    },
    Literal {
        kind: Byte,
        symbol: "B",
        suffix: None,
        span: #0 bytes(397..401),
    },
    Literal {
        kind: Integer,
        symbol: "0",
        suffix: Some("q"),
        span: #0 bytes(432..434),
    },
    Literal {
        kind: Float,
        symbol: "1.0",
        suffix: Some("q"),
        span: #0 bytes(439..443),
    },
    Literal {
        kind: Str,
        symbol: "S",
        suffix: Some("q"),
        span: #0 bytes(448..452),
    },
    Literal {
        kind: ByteStr,
        symbol: "B",
        suffix: Some("q"),
        span: #0 bytes(457..462),
    },
    Literal {
        kind: StrRaw(0),
        symbol: "R",
        suffix: Some("q"),
        span: #0 bytes(467..472),
    },
    Literal {
        kind: StrRaw(2),
        symbol: "R",
        suffix: Some("q"),
        span: #0 bytes(477..486),
    },
    Literal {
        kind: ByteStrRaw(0),
        symbol: "BR",
        suffix: Some("q"),
        span: #0 bytes(491..498),
    },
    Literal {
        kind: ByteStrRaw(2),
        symbol: "BR",
        suffix: Some("q"),
        span: #0 bytes(503..514),
    },
    Literal {
        kind: Char,
        symbol: "C",
        suffix: Some("q"),
        span: #0 bytes(519..523),
    },
    Literal {
        kind: Byte,
        symbol: "B",
        suffix: Some("q"),
        span: #0 bytes(528..533),
    },
]
