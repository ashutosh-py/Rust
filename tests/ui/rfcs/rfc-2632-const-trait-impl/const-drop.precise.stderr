error[E0493]: destructor of `S<'_>` cannot be evaluated at compile-time
  --> $DIR/const-drop.rs:24:13
   |
LL |     let _ = S(&mut c);
   |             ^^^^^^^^^ the destructor for this type cannot be evaluated in constant functions

error[E0080]: evaluation of constant value failed
  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL
   |
   = note: calling non-const function `<S<'_> as Drop>::drop`
   |
note: inside `std::ptr::drop_in_place::<S<'_>> - shim(Some(S<'_>))`
  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL
note: inside `b`
  --> $DIR/const-drop.rs:24:22
   |
LL |     let _ = S(&mut c);
   |                      ^
note: inside `C`
  --> $DIR/const-drop.rs:30:15
   |
LL | const C: u8 = b();
   |               ^^^

note: erroneous constant encountered
  --> $DIR/const-drop.rs:115:16
   |
LL |     assert_eq!(C, 2);
   |                ^

note: erroneous constant encountered
  --> $DIR/const-drop.rs:115:16
   |
LL |     assert_eq!(C, 2);
   |                ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

note: erroneous constant encountered
  --> $DIR/const-drop.rs:115:5
   |
LL |     assert_eq!(C, 2);
   |     ^^^^^^^^^^^^^^^^
   |
   = note: this note originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

note: erroneous constant encountered
  --> $DIR/const-drop.rs:115:5
   |
LL |     assert_eq!(C, 2);
   |     ^^^^^^^^^^^^^^^^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
   = note: this note originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0493]: destructor of `T` cannot be evaluated at compile-time
  --> $DIR/const-drop.rs:19:32
   |
LL | const fn a<T: ~const Destruct>(_: T) {}
   |                                ^ the destructor for this type cannot be evaluated in constant functions

error: aborting due to 3 previous errors

Some errors have detailed explanations: E0080, E0493.
For more information about an error, try `rustc --explain E0080`.
