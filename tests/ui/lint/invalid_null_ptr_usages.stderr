error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:8:5
   |
LL | /     ptr::write(
LL | |
LL | |         ptr::null_mut() as *mut u32,
   | |         --------------------------- help: use a dangling pointer instead: `core::ptr::NonNull::<u32>::dangling().as_ptr()`
LL | |         mem::transmute::<[u8; 4], _>([0, 0, 0, 255]),
LL | |     );
   | |_____^
   |
   = note: `#[deny(invalid_null_ptr_usages)]` on by default

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:14:23
   |
LL |     let _: &[usize] = std::slice::from_raw_parts(ptr::null(), 0);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------^^^^
   |                                                  |
   |                                                  help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:16:23
   |
LL |     let _: &[usize] = std::slice::from_raw_parts(ptr::null_mut(), 0);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^---------------^^^^
   |                                                  |
   |                                                  help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:18:23
   |
LL |     let _: &[usize] = std::slice::from_raw_parts(0 as *mut _, 0);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------^^^^
   |                                                  |
   |                                                  help: use a dangling pointer instead: `core::ptr::NonNull::<usize>::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:20:23
   |
LL |     let _: &[usize] = std::slice::from_raw_parts(mem::transmute(0usize), 0);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^----------------------^^^^
   |                                                  |
   |                                                  help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:23:23
   |
LL |     let _: &[usize] = std::slice::from_raw_parts_mut(ptr::null_mut(), 0);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---------------^^^^
   |                                                      |
   |                                                      help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:26:5
   |
LL |     ptr::copy::<usize>(ptr::null(), ptr::NonNull::dangling().as_ptr(), 0);
   |     ^^^^^^^^^^^^^^^^^^^-----------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                        |
   |                        help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:28:5
   |
LL |     ptr::copy::<usize>(ptr::NonNull::dangling().as_ptr(), ptr::null_mut(), 0);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---------------^^^^
   |                                                           |
   |                                                           help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:31:5
   |
LL |     ptr::copy_nonoverlapping::<usize>(ptr::null(), ptr::NonNull::dangling().as_ptr(), 0);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                                       |
   |                                       help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:33:5
   |
LL | /     ptr::copy_nonoverlapping::<usize>(
LL | |
LL | |         ptr::NonNull::dangling().as_ptr(),
LL | |         ptr::null_mut(),
   | |         --------------- help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`
LL | |         0
LL | |     );
   | |_____^

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:43:17
   |
LL |     let _a: A = ptr::read(ptr::null());
   |                 ^^^^^^^^^^-----------^
   |                           |
   |                           help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:45:17
   |
LL |     let _a: A = ptr::read(ptr::null_mut());
   |                 ^^^^^^^^^^---------------^
   |                           |
   |                           help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:48:17
   |
LL |     let _a: A = ptr::read_unaligned(ptr::null());
   |                 ^^^^^^^^^^^^^^^^^^^^-----------^
   |                                     |
   |                                     help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:50:17
   |
LL |     let _a: A = ptr::read_unaligned(ptr::null_mut());
   |                 ^^^^^^^^^^^^^^^^^^^^---------------^
   |                                     |
   |                                     help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:53:17
   |
LL |     let _a: A = ptr::read_volatile(ptr::null());
   |                 ^^^^^^^^^^^^^^^^^^^-----------^
   |                                    |
   |                                    help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:55:17
   |
LL |     let _a: A = ptr::read_volatile(ptr::null_mut());
   |                 ^^^^^^^^^^^^^^^^^^^---------------^
   |                                    |
   |                                    help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:58:17
   |
LL |     let _a: A = ptr::replace(ptr::null_mut(), A);
   |                 ^^^^^^^^^^^^^---------------^^^^
   |                              |
   |                              help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:61:5
   |
LL |     ptr::swap::<A>(ptr::null_mut(), &mut A);
   |     ^^^^^^^^^^^^^^^---------------^^^^^^^^^
   |                    |
   |                    help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:63:5
   |
LL |     ptr::swap::<A>(&mut A, ptr::null_mut());
   |     ^^^^^^^^^^^^^^^^^^^^^^^---------------^
   |                            |
   |                            help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:66:5
   |
LL |     ptr::swap_nonoverlapping::<A>(ptr::null_mut(), &mut A, 0);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---------------^^^^^^^^^^^^
   |                                   |
   |                                   help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:68:5
   |
LL |     ptr::swap_nonoverlapping::<A>(&mut A, ptr::null_mut(), 0);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---------------^^^^
   |                                           |
   |                                           help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:71:5
   |
LL |     ptr::write(ptr::null_mut(), A);
   |     ^^^^^^^^^^^---------------^^^^
   |                |
   |                help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:74:5
   |
LL |     ptr::write_unaligned(ptr::null_mut(), A);
   |     ^^^^^^^^^^^^^^^^^^^^^---------------^^^^
   |                          |
   |                          help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:77:5
   |
LL |     ptr::write_volatile(ptr::null_mut(), A);
   |     ^^^^^^^^^^^^^^^^^^^^---------------^^^^
   |                         |
   |                         help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: calling this function with a null pointer is undefined behavior, even if the result of the function is unused, consider using a dangling pointer instead
  --> $DIR/invalid_null_ptr_usages.rs:80:5
   |
LL |     ptr::write_bytes::<usize>(ptr::null_mut(), 42, 0);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^---------------^^^^^^^^
   |                               |
   |                               help: use a dangling pointer instead: `core::ptr::NonNull::dangling().as_ptr()`

error: aborting due to 25 previous errors

