// check-fail
// run-rustfix

use std::ptr;
use std::mem;

unsafe fn null_ptr() {
    ptr::write(
    //~^ ERROR calling this function with a null pointer is undefined behavior
        core::ptr::NonNull::<u32>::dangling().as_ptr(),
        mem::transmute::<[u8; 4], _>([0, 0, 0, 255]),
    );

    let _: &[usize] = std::slice::from_raw_parts(core::ptr::NonNull::dangling().as_ptr(), 0);
    //~^ ERROR calling this function with a null pointer is undefined behavior
    let _: &[usize] = std::slice::from_raw_parts(core::ptr::NonNull::dangling().as_ptr(), 0);
    //~^ ERROR calling this function with a null pointer is undefined behavior
    let _: &[usize] = std::slice::from_raw_parts(core::ptr::NonNull::<usize>::dangling().as_ptr(), 0);
    //~^ ERROR calling this function with a null pointer is undefined behavior
    let _: &[usize] = std::slice::from_raw_parts(core::ptr::NonNull::dangling().as_ptr(), 0);
    //~^ ERROR calling this function with a null pointer is undefined behavior

    let _: &[usize] = std::slice::from_raw_parts_mut(core::ptr::NonNull::dangling().as_ptr(), 0);
    //~^ ERROR calling this function with a null pointer is undefined behavior

    ptr::copy::<usize>(core::ptr::NonNull::dangling().as_ptr(), ptr::NonNull::dangling().as_ptr(), 0);
    //~^ ERROR calling this function with a null pointer is undefined behavior
    ptr::copy::<usize>(ptr::NonNull::dangling().as_ptr(), core::ptr::NonNull::dangling().as_ptr(), 0);
    //~^ ERROR calling this function with a null pointer is undefined behavior

    ptr::copy_nonoverlapping::<usize>(core::ptr::NonNull::dangling().as_ptr(), ptr::NonNull::dangling().as_ptr(), 0);
    //~^ ERROR calling this function with a null pointer is undefined behavior
    ptr::copy_nonoverlapping::<usize>(
    //~^ ERROR calling this function with a null pointer is undefined behavior
        ptr::NonNull::dangling().as_ptr(),
        core::ptr::NonNull::dangling().as_ptr(),
        0
    );

    struct A; // zero sized struct
    assert_eq!(std::mem::size_of::<A>(), 0);

    let _a: A = ptr::read(core::ptr::NonNull::dangling().as_ptr());
    //~^ ERROR calling this function with a null pointer is undefined behavior
    let _a: A = ptr::read(core::ptr::NonNull::dangling().as_ptr());
    //~^ ERROR calling this function with a null pointer is undefined behavior

    let _a: A = ptr::read_unaligned(core::ptr::NonNull::dangling().as_ptr());
    //~^ ERROR calling this function with a null pointer is undefined behavior
    let _a: A = ptr::read_unaligned(core::ptr::NonNull::dangling().as_ptr());
    //~^ ERROR calling this function with a null pointer is undefined behavior

    let _a: A = ptr::read_volatile(core::ptr::NonNull::dangling().as_ptr());
    //~^ ERROR calling this function with a null pointer is undefined behavior
    let _a: A = ptr::read_volatile(core::ptr::NonNull::dangling().as_ptr());
    //~^ ERROR calling this function with a null pointer is undefined behavior

    let _a: A = ptr::replace(core::ptr::NonNull::dangling().as_ptr(), A);
    //~^ ERROR calling this function with a null pointer is undefined behavior

    ptr::swap::<A>(core::ptr::NonNull::dangling().as_ptr(), &mut A);
    //~^ ERROR calling this function with a null pointer is undefined behavior
    ptr::swap::<A>(&mut A, core::ptr::NonNull::dangling().as_ptr());
    //~^ ERROR calling this function with a null pointer is undefined behavior

    ptr::swap_nonoverlapping::<A>(core::ptr::NonNull::dangling().as_ptr(), &mut A, 0);
    //~^ ERROR calling this function with a null pointer is undefined behavior
    ptr::swap_nonoverlapping::<A>(&mut A, core::ptr::NonNull::dangling().as_ptr(), 0);
    //~^ ERROR calling this function with a null pointer is undefined behavior

    ptr::write(core::ptr::NonNull::dangling().as_ptr(), A);
    //~^ ERROR calling this function with a null pointer is undefined behavior

    ptr::write_unaligned(core::ptr::NonNull::dangling().as_ptr(), A);
    //~^ ERROR calling this function with a null pointer is undefined behavior

    ptr::write_volatile(core::ptr::NonNull::dangling().as_ptr(), A);
    //~^ ERROR calling this function with a null pointer is undefined behavior

    ptr::write_bytes::<usize>(core::ptr::NonNull::dangling().as_ptr(), 42, 0);
    //~^ ERROR calling this function with a null pointer is undefined behavior
}

fn main() {
    unsafe { null_ptr() };
}
