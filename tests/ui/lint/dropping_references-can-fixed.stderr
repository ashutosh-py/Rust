error: calls to `std::mem::drop` with a reference instead of an owned value does nothing
  --> $DIR/dropping_references-can-fixed.rs:10:5
   |
LL |     drop(&SomeStruct);
   |     ^^^^^-----------^
   |          |
   |          argument has type `&SomeStruct`
   |
note: the lint level is defined here
  --> $DIR/dropping_references-can-fixed.rs:4:9
   |
LL | #![deny(dropping_references)]
   |         ^^^^^^^^^^^^^^^^^^^
help: remove the whole expression
   |
LL -     drop(&SomeStruct);
LL +
   |

error: calls to `std::mem::drop` with a reference instead of an owned value does nothing
  --> $DIR/dropping_references-can-fixed.rs:13:5
   |
LL |     drop(&owned1);
   |     ^^^^^-------^
   |          |
   |          argument has type `&SomeStruct`
   |
help: remove the whole expression
   |
LL -     drop(&owned1);
LL +
   |

error: calls to `std::mem::drop` with a reference instead of an owned value does nothing
  --> $DIR/dropping_references-can-fixed.rs:14:5
   |
LL |     drop(&&owned1);
   |     ^^^^^--------^
   |          |
   |          argument has type `&&SomeStruct`
   |
help: remove the whole expression
   |
LL -     drop(&&owned1);
LL +
   |

error: calls to `std::mem::drop` with a mutable reference instead of an owned value only makes the reference inaccessible, it does not drop the underlying value
  --> $DIR/dropping_references-can-fixed.rs:15:5
   |
LL |     drop(&mut owned1);
   |     ^^^^^-----------^
   |          |
   |          argument has type `&mut SomeStruct`
   |
help: remove the whole expression
   |
LL -     drop(&mut owned1);
LL +
   |

error: calls to `std::mem::drop` with a reference instead of an owned value does nothing
  --> $DIR/dropping_references-can-fixed.rs:19:5
   |
LL |     drop(reference1);
   |     ^^^^^----------^
   |          |
   |          argument has type `&SomeStruct`
   |
help: remove the whole expression
   |
LL -     drop(reference1);
LL +
   |

error: calls to `std::mem::drop` with a mutable reference instead of an owned value only makes the reference inaccessible, it does not drop the underlying value
  --> $DIR/dropping_references-can-fixed.rs:22:5
   |
LL |     drop(reference2);
   |     ^^^^^----------^
   |          |
   |          argument has type `&mut SomeStruct`
   |
help: remove the whole expression
   |
LL -     drop(reference2);
LL +
   |

error: calls to `std::mem::drop` with a reference instead of an owned value does nothing
  --> $DIR/dropping_references-can-fixed.rs:25:5
   |
LL |     drop(reference3);
   |     ^^^^^----------^
   |          |
   |          argument has type `&SomeStruct`
   |
help: remove the whole expression
   |
LL -     drop(reference3);
LL +
   |

error: calls to `std::mem::drop` with a reference instead of an owned value does nothing
  --> $DIR/dropping_references-can-fixed.rs:30:5
   |
LL |     drop(&val);
   |     ^^^^^----^
   |          |
   |          argument has type `&T`
   |
help: remove the whole expression
   |
LL -     drop(&val);
LL +
   |

error: aborting due to 8 previous errors

