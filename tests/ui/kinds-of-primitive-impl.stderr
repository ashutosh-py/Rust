error[E0390]: cannot define inherent `impl` for primitive types
  --> $DIR/kinds-of-primitive-impl.rs:1:6
   |
LL | impl u8 {
   |      ^^
   |
   = help: consider using an extension trait instead

error[E0116]: cannot define inherent `impl` for a type outside of the crate where the type is defined
  --> $DIR/kinds-of-primitive-impl.rs:6:1
   |
LL | / impl str {
LL | |
LL | |     fn foo() {}
LL | |     fn bar(self) {}
LL | | }
   | |_^ impl for type defined outside of crate.
   |
   = note: define and implement a trait or new type instead

error[E0390]: cannot define inherent `impl` for primitive types
  --> $DIR/kinds-of-primitive-impl.rs:12:6
   |
LL | impl char {
   |      ^^^^
   |
   = help: consider using an extension trait instead

error[E0390]: cannot define inherent `impl` for primitive types
  --> $DIR/kinds-of-primitive-impl.rs:21:6
   |
LL | impl &MyType {
   |      ^^^^^^^
   |
   = help: consider using an extension trait instead
   = note: you could also try moving the reference to uses of `MyType` (such as `self`) within the implementation

error: aborting due to 4 previous errors

Some errors have detailed explanations: E0116, E0390.
For more information about an error, try `rustc --explain E0116`.
