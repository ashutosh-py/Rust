error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:22:16
   |
LL |     foo::<u16>(x_usize);
   |     ---------- ^^^^^^^ expected `u16`, found `usize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `usize` to a `u16` and panic if the converted value doesn't fit
   |
LL |     foo::<u16>(x_usize.try_into().unwrap());
   |                       ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:24:16
   |
LL |     foo::<u16>(x_u64);
   |     ---------- ^^^^^ expected `u16`, found `u64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u64` to a `u16` and panic if the converted value doesn't fit
   |
LL |     foo::<u16>(x_u64.try_into().unwrap());
   |                     ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:26:16
   |
LL |     foo::<u16>(x_u32);
   |     ---------- ^^^^^ expected `u16`, found `u32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u32` to a `u16` and panic if the converted value doesn't fit
   |
LL |     foo::<u16>(x_u32.try_into().unwrap());
   |                     ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:29:16
   |
LL |     foo::<u16>(x_u8);
   |     ---------- ^^^^ expected `u16`, found `u8`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u8` to a `u16`
   |
LL |     foo::<u16>(x_u8.into());
   |                    +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:31:16
   |
LL |     foo::<u16>(x_isize);
   |     ---------- ^^^^^^^ expected `u16`, found `isize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `isize` to a `u16` and panic if the converted value doesn't fit
   |
LL |     foo::<u16>(x_isize.try_into().unwrap());
   |                       ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:33:16
   |
LL |     foo::<u16>(x_i64);
   |     ---------- ^^^^^ expected `u16`, found `i64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i64` to a `u16` and panic if the converted value doesn't fit
   |
LL |     foo::<u16>(x_i64.try_into().unwrap());
   |                     ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:35:16
   |
LL |     foo::<u16>(x_i32);
   |     ---------- ^^^^^ expected `u16`, found `i32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i32` to a `u16` and panic if the converted value doesn't fit
   |
LL |     foo::<u16>(x_i32.try_into().unwrap());
   |                     ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:37:16
   |
LL |     foo::<u16>(x_i16);
   |     ---------- ^^^^^ expected `u16`, found `i16`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i16` to a `u16` and panic if the converted value doesn't fit
   |
LL |     foo::<u16>(x_i16.try_into().unwrap());
   |                     ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:39:16
   |
LL |     foo::<u16>(x_i8);
   |     ---------- ^^^^ expected `u16`, found `i8`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i8` to a `u16` and panic if the converted value doesn't fit
   |
LL |     foo::<u16>(x_i8.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:44:16
   |
LL |     foo::<i16>(x_usize);
   |     ---------- ^^^^^^^ expected `i16`, found `usize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `usize` to an `i16` and panic if the converted value doesn't fit
   |
LL |     foo::<i16>(x_usize.try_into().unwrap());
   |                       ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:46:16
   |
LL |     foo::<i16>(x_u64);
   |     ---------- ^^^^^ expected `i16`, found `u64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u64` to an `i16` and panic if the converted value doesn't fit
   |
LL |     foo::<i16>(x_u64.try_into().unwrap());
   |                     ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:48:16
   |
LL |     foo::<i16>(x_u32);
   |     ---------- ^^^^^ expected `i16`, found `u32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u32` to an `i16` and panic if the converted value doesn't fit
   |
LL |     foo::<i16>(x_u32.try_into().unwrap());
   |                     ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:50:16
   |
LL |     foo::<i16>(x_u16);
   |     ---------- ^^^^^ expected `i16`, found `u16`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u16` to an `i16` and panic if the converted value doesn't fit
   |
LL |     foo::<i16>(x_u16.try_into().unwrap());
   |                     ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:52:16
   |
LL |     foo::<i16>(x_u8);
   |     ---------- ^^^^ expected `i16`, found `u8`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u8` to an `i16`
   |
LL |     foo::<i16>(x_u8.into());
   |                    +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:54:16
   |
LL |     foo::<i16>(x_isize);
   |     ---------- ^^^^^^^ expected `i16`, found `isize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `isize` to an `i16` and panic if the converted value doesn't fit
   |
LL |     foo::<i16>(x_isize.try_into().unwrap());
   |                       ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:56:16
   |
LL |     foo::<i16>(x_i64);
   |     ---------- ^^^^^ expected `i16`, found `i64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i64` to an `i16` and panic if the converted value doesn't fit
   |
LL |     foo::<i16>(x_i64.try_into().unwrap());
   |                     ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:58:16
   |
LL |     foo::<i16>(x_i32);
   |     ---------- ^^^^^ expected `i16`, found `i32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i32` to an `i16` and panic if the converted value doesn't fit
   |
LL |     foo::<i16>(x_i32.try_into().unwrap());
   |                     ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:61:16
   |
LL |     foo::<i16>(x_i8);
   |     ---------- ^^^^ expected `i16`, found `i8`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i8` to an `i16`
   |
LL |     foo::<i16>(x_i8.into());
   |                    +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:66:15
   |
LL |     foo::<u8>(x_usize);
   |     --------- ^^^^^^^ expected `u8`, found `usize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `usize` to a `u8` and panic if the converted value doesn't fit
   |
LL |     foo::<u8>(x_usize.try_into().unwrap());
   |                      ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:68:15
   |
LL |     foo::<u8>(x_u64);
   |     --------- ^^^^^ expected `u8`, found `u64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u64` to a `u8` and panic if the converted value doesn't fit
   |
LL |     foo::<u8>(x_u64.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:70:15
   |
LL |     foo::<u8>(x_u32);
   |     --------- ^^^^^ expected `u8`, found `u32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u32` to a `u8` and panic if the converted value doesn't fit
   |
LL |     foo::<u8>(x_u32.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:72:15
   |
LL |     foo::<u8>(x_u16);
   |     --------- ^^^^^ expected `u8`, found `u16`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u16` to a `u8` and panic if the converted value doesn't fit
   |
LL |     foo::<u8>(x_u16.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:75:15
   |
LL |     foo::<u8>(x_isize);
   |     --------- ^^^^^^^ expected `u8`, found `isize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `isize` to a `u8` and panic if the converted value doesn't fit
   |
LL |     foo::<u8>(x_isize.try_into().unwrap());
   |                      ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:77:15
   |
LL |     foo::<u8>(x_i64);
   |     --------- ^^^^^ expected `u8`, found `i64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i64` to a `u8` and panic if the converted value doesn't fit
   |
LL |     foo::<u8>(x_i64.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:79:15
   |
LL |     foo::<u8>(x_i32);
   |     --------- ^^^^^ expected `u8`, found `i32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i32` to a `u8` and panic if the converted value doesn't fit
   |
LL |     foo::<u8>(x_i32.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:81:15
   |
LL |     foo::<u8>(x_i16);
   |     --------- ^^^^^ expected `u8`, found `i16`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i16` to a `u8` and panic if the converted value doesn't fit
   |
LL |     foo::<u8>(x_i16.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:83:15
   |
LL |     foo::<u8>(x_i8);
   |     --------- ^^^^ expected `u8`, found `i8`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i8` to a `u8` and panic if the converted value doesn't fit
   |
LL |     foo::<u8>(x_i8.try_into().unwrap());
   |                   ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:88:15
   |
LL |     foo::<i8>(x_usize);
   |     --------- ^^^^^^^ expected `i8`, found `usize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `usize` to an `i8` and panic if the converted value doesn't fit
   |
LL |     foo::<i8>(x_usize.try_into().unwrap());
   |                      ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:90:15
   |
LL |     foo::<i8>(x_u64);
   |     --------- ^^^^^ expected `i8`, found `u64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u64` to an `i8` and panic if the converted value doesn't fit
   |
LL |     foo::<i8>(x_u64.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:92:15
   |
LL |     foo::<i8>(x_u32);
   |     --------- ^^^^^ expected `i8`, found `u32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u32` to an `i8` and panic if the converted value doesn't fit
   |
LL |     foo::<i8>(x_u32.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:94:15
   |
LL |     foo::<i8>(x_u16);
   |     --------- ^^^^^ expected `i8`, found `u16`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u16` to an `i8` and panic if the converted value doesn't fit
   |
LL |     foo::<i8>(x_u16.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:96:15
   |
LL |     foo::<i8>(x_u8);
   |     --------- ^^^^ expected `i8`, found `u8`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u8` to an `i8` and panic if the converted value doesn't fit
   |
LL |     foo::<i8>(x_u8.try_into().unwrap());
   |                   ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:98:15
   |
LL |     foo::<i8>(x_isize);
   |     --------- ^^^^^^^ expected `i8`, found `isize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `isize` to an `i8` and panic if the converted value doesn't fit
   |
LL |     foo::<i8>(x_isize.try_into().unwrap());
   |                      ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:100:15
   |
LL |     foo::<i8>(x_i64);
   |     --------- ^^^^^ expected `i8`, found `i64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i64` to an `i8` and panic if the converted value doesn't fit
   |
LL |     foo::<i8>(x_i64.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:102:15
   |
LL |     foo::<i8>(x_i32);
   |     --------- ^^^^^ expected `i8`, found `i32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i32` to an `i8` and panic if the converted value doesn't fit
   |
LL |     foo::<i8>(x_i32.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:104:15
   |
LL |     foo::<i8>(x_i16);
   |     --------- ^^^^^ expected `i8`, found `i16`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i16` to an `i8` and panic if the converted value doesn't fit
   |
LL |     foo::<i8>(x_i16.try_into().unwrap());
   |                    ++++++++++++++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:110:16
   |
LL |     foo::<f64>(x_usize);
   |     ---------- ^^^^^^^ expected `f64`, found `usize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can cast a `usize` to an `f64`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f64>(x_usize as f64);
   |                        ++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:112:16
   |
LL |     foo::<f64>(x_u64);
   |     ---------- ^^^^^ expected `f64`, found `u64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can cast a `u64` to an `f64`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f64>(x_u64 as f64);
   |                      ++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:114:16
   |
LL |     foo::<f64>(x_u32);
   |     ---------- ^^^^^ expected `f64`, found `u32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u32` to an `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_u32.into());
   |                     +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:116:16
   |
LL |     foo::<f64>(x_u16);
   |     ---------- ^^^^^ expected `f64`, found `u16`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u16` to an `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_u16.into());
   |                     +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:118:16
   |
LL |     foo::<f64>(x_u8);
   |     ---------- ^^^^ expected `f64`, found `u8`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u8` to an `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_u8.into());
   |                    +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:120:16
   |
LL |     foo::<f64>(x_isize);
   |     ---------- ^^^^^^^ expected `f64`, found `isize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `isize` to an `f64`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f64>(x_isize as f64);
   |                        ++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:122:16
   |
LL |     foo::<f64>(x_i64);
   |     ---------- ^^^^^ expected `f64`, found `i64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i64` to an `f64`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f64>(x_i64 as f64);
   |                      ++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:124:16
   |
LL |     foo::<f64>(x_i32);
   |     ---------- ^^^^^ expected `f64`, found `i32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i32` to an `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_i32.into());
   |                     +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:126:16
   |
LL |     foo::<f64>(x_i16);
   |     ---------- ^^^^^ expected `f64`, found `i16`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i16` to an `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_i16.into());
   |                     +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:128:16
   |
LL |     foo::<f64>(x_i8);
   |     ---------- ^^^^ expected `f64`, found `i8`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i8` to an `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_i8.into());
   |                    +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:131:16
   |
LL |     foo::<f64>(x_f32);
   |     ---------- ^^^^^ expected `f64`, found `f32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `f32` to an `f64`
   |
LL |     foo::<f64>(x_f32.into());
   |                     +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:134:16
   |
LL |     foo::<f32>(x_usize);
   |     ---------- ^^^^^^^ expected `f32`, found `usize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can cast a `usize` to an `f32`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f32>(x_usize as f32);
   |                        ++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:136:16
   |
LL |     foo::<f32>(x_u64);
   |     ---------- ^^^^^ expected `f32`, found `u64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can cast a `u64` to an `f32`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f32>(x_u64 as f32);
   |                      ++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:138:16
   |
LL |     foo::<f32>(x_u32);
   |     ---------- ^^^^^ expected `f32`, found `u32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can cast a `u32` to an `f32`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f32>(x_u32 as f32);
   |                      ++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:140:16
   |
LL |     foo::<f32>(x_u16);
   |     ---------- ^^^^^ expected `f32`, found `u16`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u16` to an `f32`, producing the floating point representation of the integer
   |
LL |     foo::<f32>(x_u16.into());
   |                     +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:142:16
   |
LL |     foo::<f32>(x_u8);
   |     ---------- ^^^^ expected `f32`, found `u8`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u8` to an `f32`, producing the floating point representation of the integer
   |
LL |     foo::<f32>(x_u8.into());
   |                    +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:144:16
   |
LL |     foo::<f32>(x_isize);
   |     ---------- ^^^^^^^ expected `f32`, found `isize`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `isize` to an `f32`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f32>(x_isize as f32);
   |                        ++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:146:16
   |
LL |     foo::<f32>(x_i64);
   |     ---------- ^^^^^ expected `f32`, found `i64`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i64` to an `f32`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f32>(x_i64 as f32);
   |                      ++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:148:16
   |
LL |     foo::<f32>(x_i32);
   |     ---------- ^^^^^ expected `f32`, found `i32`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i32` to an `f32`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f32>(x_i32 as f32);
   |                      ++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:150:16
   |
LL |     foo::<f32>(x_i16);
   |     ---------- ^^^^^ expected `f32`, found `i16`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i16` to an `f32`, producing the floating point representation of the integer
   |
LL |     foo::<f32>(x_i16.into());
   |                     +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:152:16
   |
LL |     foo::<f32>(x_i8);
   |     ---------- ^^^^ expected `f32`, found `i8`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i8` to an `f32`, producing the floating point representation of the integer
   |
LL |     foo::<f32>(x_i8.into());
   |                    +++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:157:16
   |
LL |     foo::<u32>(x_u8 as u16);
   |     ---------- ^^^^^^^^^^^ expected `u32`, found `u16`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert a `u16` to a `u32`
   |
LL |     foo::<u32>((x_u8 as u16).into());
   |                +           ++++++++

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:159:16
   |
LL |     foo::<i32>(-x_i8);
   |     ---------- ^^^^^ expected `i32`, found `i8`
   |     |
   |     arguments to this function are incorrect
   |
note: function defined here
  --> $DIR/numeric-cast.rs:6:4
   |
LL | fn foo<N>(_x: N) {}
   |    ^^^    -----
help: you can convert an `i8` to an `i32`
   |
LL |     foo::<i32>((-x_i8).into());
   |                +     ++++++++

error: aborting due to 59 previous errors

For more information about this error, try `rustc --explain E0308`.
