warning: creating a shared reference to mutable static is discouraged
  --> $DIR/static-mut-foreign.rs:21:16
   |
LL |     assert_eq!(rust_dbg_static_mut, 3);
   |                ^^^^^^^^^^^^^^^^^^^ shared reference to mutable static
   |
   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>
   = note: this will be a hard error in the 2024 edition
   = note: shared references to mutable statics are dangerous since if there's any kind of mutation of, or mutable reference created for, that static while the reference lives, that's undefined behavior
   = note: `#[warn(static_mut_refs)]` on by default

warning: creating a shared reference to mutable static is discouraged
  --> $DIR/static-mut-foreign.rs:24:16
   |
LL |     assert_eq!(rust_dbg_static_mut, 4);
   |                ^^^^^^^^^^^^^^^^^^^ shared reference to mutable static
   |
   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>
   = note: this will be a hard error in the 2024 edition
   = note: shared references to mutable statics are dangerous since if there's any kind of mutation of, or mutable reference created for, that static while the reference lives, that's undefined behavior

warning: creating a shared reference to mutable static is discouraged
  --> $DIR/static-mut-foreign.rs:28:16
   |
LL |     assert_eq!(rust_dbg_static_mut, 5);
   |                ^^^^^^^^^^^^^^^^^^^ shared reference to mutable static
   |
   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>
   = note: this will be a hard error in the 2024 edition
   = note: shared references to mutable statics are dangerous since if there's any kind of mutation of, or mutable reference created for, that static while the reference lives, that's undefined behavior

warning: creating a shared reference to mutable static is discouraged
  --> $DIR/static-mut-foreign.rs:31:16
   |
LL |     assert_eq!(rust_dbg_static_mut, 15);
   |                ^^^^^^^^^^^^^^^^^^^ shared reference to mutable static
   |
   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>
   = note: this will be a hard error in the 2024 edition
   = note: shared references to mutable statics are dangerous since if there's any kind of mutation of, or mutable reference created for, that static while the reference lives, that's undefined behavior

warning: creating a shared reference to mutable static is discouraged
  --> $DIR/static-mut-foreign.rs:34:16
   |
LL |     assert_eq!(rust_dbg_static_mut, -3);
   |                ^^^^^^^^^^^^^^^^^^^ shared reference to mutable static
   |
   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>
   = note: this will be a hard error in the 2024 edition
   = note: shared references to mutable statics are dangerous since if there's any kind of mutation of, or mutable reference created for, that static while the reference lives, that's undefined behavior

warning: creating a shared reference to mutable static is discouraged
  --> $DIR/static-mut-foreign.rs:36:18
   |
LL |     static_bound(&rust_dbg_static_mut);
   |                  ^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static
   |
   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>
   = note: this will be a hard error in the 2024 edition
   = note: shared references to mutable statics are dangerous since if there's any kind of mutation of, or mutable reference created for, that static while the reference lives, that's undefined behavior
help: use `addr_of!` instead to create a raw pointer
   |
LL |     static_bound(addr_of!(rust_dbg_static_mut));
   |                  ~~~~~~~~~                   +

warning: creating a mutable reference to mutable static is discouraged
  --> $DIR/static-mut-foreign.rs:38:22
   |
LL |     static_bound_set(&mut rust_dbg_static_mut);
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static
   |
   = note: for more information, see issue #114447 <https://github.com/rust-lang/rust/issues/114447>
   = note: this will be a hard error in the 2024 edition
   = note: mutable references to mutable statics are dangerous since if there's any other pointer used or reference created for that static while the reference lives, that's undefined behavior
help: use `addr_of_mut!` instead to create a raw pointer
   |
LL |     static_bound_set(addr_of_mut!(rust_dbg_static_mut));
   |                      ~~~~~~~~~~~~~                   +

warning: 7 warnings emitted

