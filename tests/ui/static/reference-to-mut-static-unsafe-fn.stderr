error[E0796]: creating a shared reference to a mutable static
  --> $DIR/reference-to-mut-static-unsafe-fn.rs:10:18
   |
LL |         let _y = &X;
   |                  ^^ shared reference to mutable static
   |
   = note: shared references to mutable statics are dangerous since if there's any kind of mutation of, or mutable reference created for, that static while the reference lives, that's undefined behavior
help: use `addr_of!` instead to create a raw pointer
   |
LL |         let _y = addr_of!(X);
   |                  ~~~~~~~~~ +

error[E0796]: creating a shared reference to a mutable static
  --> $DIR/reference-to-mut-static-unsafe-fn.rs:13:22
   |
LL |         let ref _a = X;
   |                      ^ shared reference to mutable static
   |
   = note: shared references to mutable statics are dangerous since if there's any kind of mutation of, or mutable reference created for, that static while the reference lives, that's undefined behavior

error[E0796]: creating a mutable reference to a mutable static
  --> $DIR/reference-to-mut-static-unsafe-fn.rs:16:26
   |
LL |         let ref mut _a = X;
   |                          ^ mutable reference to mutable static
   |
   = note: mutable references to mutable statics are dangerous since if there's any other pointer used or reference created for that static while the reference lives, that's undefined behavior

error[E0796]: creating a shared reference to a mutable static
  --> $DIR/reference-to-mut-static-unsafe-fn.rs:19:25
   |
LL |         let (_b, _c) = (&X, &mut Y);
   |                         ^^ shared reference to mutable static
   |
   = note: shared references to mutable statics are dangerous since if there's any kind of mutation of, or mutable reference created for, that static while the reference lives, that's undefined behavior
help: use `addr_of!` instead to create a raw pointer
   |
LL |         let (_b, _c) = (addr_of!(X), &mut Y);
   |                         ~~~~~~~~~ +

error[E0796]: creating a mutable reference to a mutable static
  --> $DIR/reference-to-mut-static-unsafe-fn.rs:19:29
   |
LL |         let (_b, _c) = (&X, &mut Y);
   |                             ^^^^^^ mutable reference to mutable static
   |
   = note: mutable references to mutable statics are dangerous since if there's any other pointer used or reference created for that static while the reference lives, that's undefined behavior
help: use `addr_of_mut!` instead to create a raw pointer
   |
LL |         let (_b, _c) = (&X, addr_of_mut!(Y));
   |                             ~~~~~~~~~~~~~ +

error[E0796]: creating a shared reference to a mutable static
  --> $DIR/reference-to-mut-static-unsafe-fn.rs:23:13
   |
LL |         foo(&X);
   |             ^^ shared reference to mutable static
   |
   = note: shared references to mutable statics are dangerous since if there's any kind of mutation of, or mutable reference created for, that static while the reference lives, that's undefined behavior
help: use `addr_of!` instead to create a raw pointer
   |
LL |         foo(addr_of!(X));
   |             ~~~~~~~~~ +

error: aborting due to 6 previous errors

For more information about this error, try `rustc --explain E0796`.
