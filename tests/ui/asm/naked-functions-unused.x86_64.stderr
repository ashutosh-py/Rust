error: unused variable: `a`
  --> $DIR/naked-functions-unused.rs:17:32
   |
LL |     pub extern "C" fn function(a: usize, b: usize) -> usize {
   |                                ^
   |
note: the lint level is defined here
  --> $DIR/naked-functions-unused.rs:5:9
   |
LL | #![deny(unused)]
   |         ^^^^^^
   = note: `#[deny(unused_variables)]` implied by `#[deny(unused)]`
help: if this is intentional, prefix it with an underscore
   |
LL |     pub extern "C" fn function(_a: usize, b: usize) -> usize {
   |                                ~~

error: unused variable: `b`
  --> $DIR/naked-functions-unused.rs:17:42
   |
LL |     pub extern "C" fn function(a: usize, b: usize) -> usize {
   |                                          ^
   |
help: if this is intentional, prefix it with an underscore
   |
LL |     pub extern "C" fn function(a: usize, _b: usize) -> usize {
   |                                          ~~

error: unused variable: `a`
  --> $DIR/naked-functions-unused.rs:26:38
   |
LL |         pub extern "C" fn associated(a: usize, b: usize) -> usize {
   |                                      ^
   |
help: if this is intentional, prefix it with an underscore
   |
LL |         pub extern "C" fn associated(_a: usize, b: usize) -> usize {
   |                                      ~~

error: unused variable: `b`
  --> $DIR/naked-functions-unused.rs:26:48
   |
LL |         pub extern "C" fn associated(a: usize, b: usize) -> usize {
   |                                                ^
   |
help: if this is intentional, prefix it with an underscore
   |
LL |         pub extern "C" fn associated(a: usize, _b: usize) -> usize {
   |                                                ~~

error: unused variable: `a`
  --> $DIR/naked-functions-unused.rs:32:41
   |
LL |         pub extern "C" fn method(&self, a: usize, b: usize) -> usize {
   |                                         ^
   |
help: if this is intentional, prefix it with an underscore
   |
LL |         pub extern "C" fn method(&self, _a: usize, b: usize) -> usize {
   |                                         ~~

error: unused variable: `b`
  --> $DIR/naked-functions-unused.rs:32:51
   |
LL |         pub extern "C" fn method(&self, a: usize, b: usize) -> usize {
   |                                                   ^
   |
help: if this is intentional, prefix it with an underscore
   |
LL |         pub extern "C" fn method(&self, a: usize, _b: usize) -> usize {
   |                                                   ~~

error: unused variable: `a`
  --> $DIR/naked-functions-unused.rs:40:40
   |
LL |         extern "C" fn trait_associated(a: usize, b: usize) -> usize {
   |                                        ^
   |
help: if this is intentional, prefix it with an underscore
   |
LL |         extern "C" fn trait_associated(_a: usize, b: usize) -> usize {
   |                                        ~~

error: unused variable: `b`
  --> $DIR/naked-functions-unused.rs:40:50
   |
LL |         extern "C" fn trait_associated(a: usize, b: usize) -> usize {
   |                                                  ^
   |
help: if this is intentional, prefix it with an underscore
   |
LL |         extern "C" fn trait_associated(a: usize, _b: usize) -> usize {
   |                                                  ~~

error: unused variable: `a`
  --> $DIR/naked-functions-unused.rs:46:43
   |
LL |         extern "C" fn trait_method(&self, a: usize, b: usize) -> usize {
   |                                           ^
   |
help: if this is intentional, prefix it with an underscore
   |
LL |         extern "C" fn trait_method(&self, _a: usize, b: usize) -> usize {
   |                                           ~~

error: unused variable: `b`
  --> $DIR/naked-functions-unused.rs:46:53
   |
LL |         extern "C" fn trait_method(&self, a: usize, b: usize) -> usize {
   |                                                     ^
   |
help: if this is intentional, prefix it with an underscore
   |
LL |         extern "C" fn trait_method(&self, a: usize, _b: usize) -> usize {
   |                                                     ~~

error: aborting due to 10 previous errors

