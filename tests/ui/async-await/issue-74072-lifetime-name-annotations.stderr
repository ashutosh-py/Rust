error[E0506]: cannot assign to `*x` because it is borrowed
  --> $DIR/issue-74072-lifetime-name-annotations.rs:9:5
   |
LL | pub async fn async_fn(x: &mut i32) -> &i32 {
   |                          - let's call the lifetime of this reference `'1`
LL |     let y = &*x;
   |             --- `*x` is borrowed here
LL |     *x += 1;
   |     ^^^^^^^ `*x` is assigned to here but it was already borrowed
LL |     y
   |     - returning this value requires that `*x` is borrowed for `'1`

error[E0506]: cannot assign to `*x` because it is borrowed
  --> $DIR/issue-74072-lifetime-name-annotations.rs:17:9
   |
LL |         let y = &*x;
   |                 --- `*x` is borrowed here
LL |         *x += 1;
   |         ^^^^^^^ `*x` is assigned to here but it was already borrowed
LL |         y
   |         - returning this value requires that `*x` is borrowed for `'1`
LL |     })()
   |     - return type of async closure is &'1 i32

error: captured variable cannot escape `FnMut` closure body
  --> $DIR/issue-74072-lifetime-name-annotations.rs:14:20
   |
LL |   pub fn async_closure(x: &mut i32) -> impl Future<Output=&i32> {
   |                        - variable defined here
LL |       (async move || {
   |  __________________-_^
   | |                  |
   | |                  inferred to be a `FnMut` closure
LL | |
LL | |         let y = &*x;
   | |                   - variable captured here
LL | |         *x += 1;
LL | |         y
LL | |     })()
   | |_____^ returns an `async` block that contains a reference to a captured variable, which then escapes the closure body
   |
   = note: `FnMut` closures only have access to their captured variables while they are executing...
   = note: ...therefore, they cannot allow references to captured variables to escape

error[E0506]: cannot assign to `*x` because it is borrowed
  --> $DIR/issue-74072-lifetime-name-annotations.rs:26:9
   |
LL |     (async move || -> &i32 {
   |                       - let's call the lifetime of this reference `'1`
LL |
LL |         let y = &*x;
   |                 --- `*x` is borrowed here
LL |         *x += 1;
   |         ^^^^^^^ `*x` is assigned to here but it was already borrowed
LL |         y
   |         - returning this value requires that `*x` is borrowed for `'1`

error: captured variable cannot escape `FnMut` closure body
  --> $DIR/issue-74072-lifetime-name-annotations.rs:23:28
   |
LL |   pub fn async_closure_explicit_return_type(x: &mut i32) -> impl Future<Output=&i32> {
   |                                             - variable defined here
LL |       (async move || -> &i32 {
   |  __________________________-_^
   | |                          |
   | |                          inferred to be a `FnMut` closure
LL | |
LL | |         let y = &*x;
   | |                   - variable captured here
LL | |         *x += 1;
LL | |         y
LL | |     })()
   | |_____^ returns an `async` block that contains a reference to a captured variable, which then escapes the closure body
   |
   = note: `FnMut` closures only have access to their captured variables while they are executing...
   = note: ...therefore, they cannot allow references to captured variables to escape

error[E0506]: cannot assign to `*x` because it is borrowed
  --> $DIR/issue-74072-lifetime-name-annotations.rs:34:9
   |
LL |         let y = &*x;
   |                 --- `*x` is borrowed here
LL |         *x += 1;
   |         ^^^^^^^ `*x` is assigned to here but it was already borrowed
LL |         y
   |         - returning this value requires that `*x` is borrowed for `'1`
LL |     }
   |     - return type of async block is &'1 i32

error: aborting due to 6 previous errors

For more information about this error, try `rustc --explain E0506`.
