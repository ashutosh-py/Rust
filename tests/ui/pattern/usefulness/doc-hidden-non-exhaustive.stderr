error[E0004]: match is non-exhaustive
  --> $DIR/doc-hidden-non-exhaustive.rs:15:11
   |
LL |     match HiddenEnum::A {
   |           ^^^^^^^^^^^^^ pattern `_` not covered
   |
   = note: the matched value is of type `HiddenEnum`
help: ensure that all possible cases are being handled by adding a wildcard arm
   |
LL ~         HiddenEnum::B => {}
LL +         _ => { todo!() },
   |

error[E0004]: match is non-exhaustive
  --> $DIR/doc-hidden-non-exhaustive.rs:21:11
   |
LL |     match HiddenEnum::A {
   |           ^^^^^^^^^^^^^ pattern `HiddenEnum::B` not covered
   |
   = note: the matched value is of type `HiddenEnum`
help: ensure that all possible cases are being handled by adding an arm to handle the `HiddenEnum::B` case
   |
LL ~         HiddenEnum::C => {}
LL +         HiddenEnum::B => { todo!() },
   |

error[E0004]: match is non-exhaustive
  --> $DIR/doc-hidden-non-exhaustive.rs:27:11
   |
LL |     match HiddenEnum::A {
   |           ^^^^^^^^^^^^^ patterns `HiddenEnum::B` and `_` not covered
   |
   = note: the matched value is of type `HiddenEnum`
help: ensure that all possible cases are being handled by adding more match arms
   |
LL ~         HiddenEnum::A => {},
LL +         HiddenEnum::B => { todo!() },
LL +         _ => { todo!() },
   |

error[E0004]: match is non-exhaustive
  --> $DIR/doc-hidden-non-exhaustive.rs:32:11
   |
LL |     match None {
   |           ^^^^ patterns `Some(HiddenEnum::B)` and `Some(_)` not covered
   |
   = note: the matched value is of type `Option<HiddenEnum>`
help: ensure that all possible cases are being handled by adding more match arms
   |
LL ~         Some(HiddenEnum::A) => {}
LL +         Some(HiddenEnum::B) => { todo!() },
LL +         Some(_) => { todo!() },
   |

error[E0004]: match is non-exhaustive
  --> $DIR/doc-hidden-non-exhaustive.rs:38:11
   |
LL |     match InCrate::A {
   |           ^^^^^^^^^^ pattern `InCrate::C` not covered
   |
note: `InCrate` defined here
  --> $DIR/doc-hidden-non-exhaustive.rs:7:6
   |
LL | enum InCrate {
   |      ^^^^^^^
...
LL |     C,
   |     - not covered
   = note: the matched value is of type `InCrate`
help: ensure that all possible cases are being handled by adding an arm to handle the `InCrate::C` case
   |
LL ~         InCrate::B => {}
LL +         InCrate::C => { todo!() },
   |

error: aborting due to 5 previous errors

For more information about this error, try `rustc --explain E0004`.
