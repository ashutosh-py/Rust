warning: unexpected `cfg` condition name: `featur`
  --> $DIR/diagnotics.rs:10:7
   |
LL | #[cfg(featur)]
   |       ^^^^^^ help: there is a config with a similar name: `feature`
   |
   = help: expected values for `feature` are: `foo`
   = note: see <https://doc.rust-lang.org/nightly/cargo/reference/build-scripts.html#rustc-check-cfg> for more information about checking conditional configuration
note: the lint level is defined here
  --> $DIR/diagnotics.rs:8:9
   |
LL | #![warn(unexpected_cfgs)]
   |         ^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition name: `featur`
  --> $DIR/diagnotics.rs:14:7
   |
LL | #[cfg(featur = "foo")]
   |       ^^^^^^^^^^^^^^
   |
   = note: see <https://doc.rust-lang.org/nightly/cargo/reference/build-scripts.html#rustc-check-cfg> for more information about checking conditional configuration
help: there is a config with a similar name and value
   |
LL | #[cfg(feature = "foo")]
   |       ~~~~~~~

warning: unexpected `cfg` condition name: `featur`
  --> $DIR/diagnotics.rs:18:7
   |
LL | #[cfg(featur = "fo")]
   |       ^^^^^^^^^^^^^
   |
   = help: expected values for `feature` are: `foo`
   = note: see <https://doc.rust-lang.org/nightly/cargo/reference/build-scripts.html#rustc-check-cfg> for more information about checking conditional configuration
help: there is a config with a similar name and different values
   |
LL | #[cfg(feature = "foo")]
   |       ~~~~~~~~~~~~~~~

warning: unexpected `cfg` condition name: `no_value`
  --> $DIR/diagnotics.rs:25:7
   |
LL | #[cfg(no_value)]
   |       ^^^^^^^^ help: there is a config with a similar name: `no_values`
   |
   = help: consider using a Cargo feature instead or adding `println!("cargo::rustc-check-cfg=cfg(no_value)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/cargo/reference/build-scripts.html#rustc-check-cfg> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `no_value`
  --> $DIR/diagnotics.rs:29:7
   |
LL | #[cfg(no_value = "foo")]
   |       ^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead or adding `println!("cargo::rustc-check-cfg=cfg(no_value, values(\"foo\"))");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/cargo/reference/build-scripts.html#rustc-check-cfg> for more information about checking conditional configuration
help: there is a config with a similar name and no value
   |
LL | #[cfg(no_values)]
   |       ~~~~~~~~~

warning: unexpected `cfg` condition value: `bar`
  --> $DIR/diagnotics.rs:33:7
   |
LL | #[cfg(no_values = "bar")]
   |       ^^^^^^^^^--------
   |                |
   |                help: remove the value
   |
   = note: no expected value for `no_values`
   = help: consider using a Cargo feature instead or adding `println!("cargo::rustc-check-cfg=cfg(no_values, values(\"bar\"))");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/cargo/reference/build-scripts.html#rustc-check-cfg> for more information about checking conditional configuration

warning: 6 warnings emitted

