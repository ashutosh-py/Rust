error: implementation of `FnOnce` is not general enough
  --> $DIR/issue-79187.rs:5:5
   |
LL | fn thing(x: impl FnOnce(&u32)) {}
   |                  ------------ due to a where-clause on `thing`...
...
LL |     thing(f);
   |     ^^^^^^^^ doesn't satisfy where-clause
   |
   = note: ...closure with signature `fn(&'2 u32)` must implement `FnOnce<(&'1 u32,)>`, for any lifetime `'1`...
   = note: ...but it actually implements `FnOnce<(&'2 u32,)>`, for some specific lifetime `'2`

error: implementation of `FnOnce` is not general enough
  --> $DIR/issue-79187.rs:5:5
   |
LL | fn thing(x: impl FnOnce(&u32)) {}
   |                  ------------ due to a where-clause on `thing`...
...
LL |     thing(f);
   |     ^^^^^^^^ doesn't satisfy where-clause
   |
   = note: ...closure with signature `fn(&'2 u32)` must implement `FnOnce<(&'1 u32,)>`, for any lifetime `'1`...
   = note: ...but it actually implements `FnOnce<(&'2 u32,)>`, for some specific lifetime `'2`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: aborting due to 2 previous errors

