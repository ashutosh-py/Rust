error[E0764]: mutable references are not allowed in the final value of constants
  --> $DIR/mut_ref_in_final.rs:10:21
   |
LL | const B: *mut i32 = &mut 4;
   |                     ^^^^^^

error[E0716]: temporary value dropped while borrowed
  --> $DIR/mut_ref_in_final.rs:17:40
   |
LL | const B3: Option<&mut i32> = Some(&mut 42);
   |                              ----------^^-
   |                              |         | |
   |                              |         | temporary value is freed at the end of this statement
   |                              |         creates a temporary value which is freed while still in use
   |                              using this value as a constant requires that borrow lasts for `'static`

error[E0716]: temporary value dropped while borrowed
  --> $DIR/mut_ref_in_final.rs:20:42
   |
LL | const B4: Option<&mut i32> = helper(&mut 42);
   |                              ------------^^-
   |                              |           | |
   |                              |           | temporary value is freed at the end of this statement
   |                              |           creates a temporary value which is freed while still in use
   |                              using this value as a constant requires that borrow lasts for `'static`

error[E0716]: temporary value dropped while borrowed
  --> $DIR/mut_ref_in_final.rs:35:65
   |
LL | const FOO: NotAMutex<&mut i32> = NotAMutex(UnsafeCell::new(&mut 42));
   |                                  -------------------------------^^--
   |                                  |                              |  |
   |                                  |                              |  temporary value is freed at the end of this statement
   |                                  |                              creates a temporary value which is freed while still in use
   |                                  using this value as a constant requires that borrow lasts for `'static`

error[E0716]: temporary value dropped while borrowed
  --> $DIR/mut_ref_in_final.rs:38:67
   |
LL | static FOO2: NotAMutex<&mut i32> = NotAMutex(UnsafeCell::new(&mut 42));
   |                                    -------------------------------^^--
   |                                    |                              |  |
   |                                    |                              |  temporary value is freed at the end of this statement
   |                                    |                              creates a temporary value which is freed while still in use
   |                                    using this value as a static requires that borrow lasts for `'static`

error[E0716]: temporary value dropped while borrowed
  --> $DIR/mut_ref_in_final.rs:41:71
   |
LL | static mut FOO3: NotAMutex<&mut i32> = NotAMutex(UnsafeCell::new(&mut 42));
   |                                        -------------------------------^^--
   |                                        |                              |  |
   |                                        |                              |  temporary value is freed at the end of this statement
   |                                        |                              creates a temporary value which is freed while still in use
   |                                        using this value as a static requires that borrow lasts for `'static`

error[E0764]: mutable references are not allowed in the final value of statics
  --> $DIR/mut_ref_in_final.rs:54:53
   |
LL | static RAW_MUT_CAST_S: SyncPtr<i32> = SyncPtr { x : &mut 42 as *mut _ as *const _ };
   |                                                     ^^^^^^^

error[E0764]: mutable references are not allowed in the final value of statics
  --> $DIR/mut_ref_in_final.rs:56:54
   |
LL | static RAW_MUT_COERCE_S: SyncPtr<i32> = SyncPtr { x: &mut 0 };
   |                                                      ^^^^^^

error[E0764]: mutable references are not allowed in the final value of constants
  --> $DIR/mut_ref_in_final.rs:58:52
   |
LL | const RAW_MUT_CAST_C: SyncPtr<i32> = SyncPtr { x : &mut 42 as *mut _ as *const _ };
   |                                                    ^^^^^^^

error[E0764]: mutable references are not allowed in the final value of constants
  --> $DIR/mut_ref_in_final.rs:60:53
   |
LL | const RAW_MUT_COERCE_C: SyncPtr<i32> = SyncPtr { x: &mut 0 };
   |                                                     ^^^^^^

error: encountered mutable pointer in final value of constant
  --> $DIR/mut_ref_in_final.rs:10:1
   |
LL | const B: *mut i32 = &mut 4;
   | ^^^^^^^^^^^^^^^^^

note: erroneous constant encountered
  --> $DIR/mut_ref_in_final.rs:65:15
   |
LL |     unsafe { *B = 4 } // Bad news
   |               ^

note: erroneous constant encountered
  --> $DIR/mut_ref_in_final.rs:65:15
   |
LL |     unsafe { *B = 4 } // Bad news
   |               ^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: aborting due to 11 previous errors

Some errors have detailed explanations: E0716, E0764.
For more information about an error, try `rustc --explain E0716`.
