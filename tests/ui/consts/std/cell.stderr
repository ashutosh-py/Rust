error[E0080]: it is undefined behavior to use this value
  --> $DIR/cell.rs:6:1
   |
LL | static FOO: Wrap<*mut u32> = Wrap(Cell::new(42).as_ptr());
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .0: encountered a dangling reference (use-after-free)
   |
   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.
   = note: the raw bytes of the constant (size: 8, align: 8) {
               ╾ALLOC0╼                         │ ╾──────╼
           }

error[E0080]: it is undefined behavior to use this value
  --> $DIR/cell.rs:8:1
   |
LL | const FOO_CONST: Wrap<*mut u32> = Wrap(Cell::new(42).as_ptr());
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .0: encountered a dangling reference (use-after-free)
   |
   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.
   = note: the raw bytes of the constant (size: 8, align: 8) {
               ╾ALLOC1╼                         │ ╾──────╼
           }

error[E0080]: it is undefined behavior to use this value
  --> $DIR/cell.rs:22:1
   |
LL | const FOO4_CONST: Wrap<*mut u32> = Wrap(FOO3_CONST.0.as_ptr());
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .0: encountered a dangling reference (use-after-free)
   |
   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.
   = note: the raw bytes of the constant (size: 8, align: 8) {
               ╾ALLOC2╼                         │ ╾──────╼
           }

error[E0080]: it is undefined behavior to use this value
  --> $DIR/cell.rs:27:1
   |
LL | const FOO2: *mut u32 = Cell::new(42).as_ptr();
   | ^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered a dangling reference (use-after-free)
   |
   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.
   = note: the raw bytes of the constant (size: 8, align: 8) {
               ╾ALLOC3╼                         │ ╾──────╼
           }

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0080`.
