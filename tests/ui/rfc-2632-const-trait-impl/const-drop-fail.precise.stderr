error[E0277]: can't drop `NonTrivialDrop` in const contexts
  --> $DIR/const-drop-fail.rs:28:23
   |
LL |           const _: () = check($exp);
   |                         ^^^^^^^^^^^ the trait `~const Destruct` is not implemented for `NonTrivialDrop`
...
LL | / check_all! {
LL | |     NonTrivialDrop,
LL | |     ConstImplWithDropGlue(NonTrivialDrop),
LL | | }
   | |_- in this macro invocation
   |
note: the trait `Destruct` is implemented for `NonTrivialDrop`, but that implementation is not `const`
  --> $DIR/const-drop-fail.rs:28:23
   |
LL |           const _: () = check($exp);
   |                         ^^^^^^^^^^^
...
LL | / check_all! {
LL | |     NonTrivialDrop,
LL | |     ConstImplWithDropGlue(NonTrivialDrop),
LL | | }
   | |_- in this macro invocation
   = note: this error originates in the macro `check_all` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: can't drop `NonTrivialDrop` in const contexts
  --> $DIR/const-drop-fail.rs:28:23
   |
LL |           const _: () = check($exp);
   |                         ^^^^^^^^^^^ within `ConstImplWithDropGlue`, the trait `~const Destruct` is not implemented for `NonTrivialDrop`
...
LL | / check_all! {
LL | |     NonTrivialDrop,
LL | |     ConstImplWithDropGlue(NonTrivialDrop),
LL | | }
   | |_- in this macro invocation
   |
note: the trait `Destruct` is implemented for `NonTrivialDrop`, but that implementation is not `const`
  --> $DIR/const-drop-fail.rs:28:23
   |
LL |           const _: () = check($exp);
   |                         ^^^^^^^^^^^
...
LL | / check_all! {
LL | |     NonTrivialDrop,
LL | |     ConstImplWithDropGlue(NonTrivialDrop),
LL | | }
   | |_- in this macro invocation
note: required because it appears within the type `ConstImplWithDropGlue`
  --> $DIR/const-drop-fail.rs:18:8
   |
LL | struct ConstImplWithDropGlue(NonTrivialDrop);
   |        ^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `check_all` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL
   |
   = note: calling non-const function `<NonTrivialDrop as Drop>::drop`
   |
note: inside `std::ptr::drop_in_place::<NonTrivialDrop> - shim(Some(NonTrivialDrop))`
  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL
note: inside `check::<NonTrivialDrop>`
  --> $DIR/const-drop-fail.rs:24:43
   |
LL | const fn check<T: ~const Destruct>(_: T) {}
   |                                           ^
note: inside `_`
  --> $DIR/const-drop-fail.rs:28:23
   |
LL |           const _: () = check($exp);
   |                         ^^^^^^^^^^^
...
LL | / check_all! {
LL | |     NonTrivialDrop,
LL | |     ConstImplWithDropGlue(NonTrivialDrop),
LL | | }
   | |_- in this macro invocation
   = note: this error originates in the macro `check_all` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL
   |
   = note: calling non-const function `<NonTrivialDrop as Drop>::drop`
   |
note: inside `std::ptr::drop_in_place::<NonTrivialDrop> - shim(Some(NonTrivialDrop))`
  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL
note: inside `std::ptr::drop_in_place::<ConstImplWithDropGlue> - shim(Some(ConstImplWithDropGlue))`
  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL
note: inside `check::<ConstImplWithDropGlue>`
  --> $DIR/const-drop-fail.rs:24:43
   |
LL | const fn check<T: ~const Destruct>(_: T) {}
   |                                           ^
note: inside `_`
  --> $DIR/const-drop-fail.rs:28:23
   |
LL |           const _: () = check($exp);
   |                         ^^^^^^^^^^^
...
LL | / check_all! {
LL | |     NonTrivialDrop,
LL | |     ConstImplWithDropGlue(NonTrivialDrop),
LL | | }
   | |_- in this macro invocation
   = note: this error originates in the macro `check_all` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 4 previous errors

Some errors have detailed explanations: E0080, E0277.
For more information about an error, try `rustc --explain E0080`.
