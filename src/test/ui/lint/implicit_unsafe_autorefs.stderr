warning: implicit auto-ref creates a reference to a dereference of a raw pointer
  --> $DIR/implicit_unsafe_autorefs.rs:7:18
   |
LL |     addr_of_mut!((*ptr)[..16])
   |                  ^^^^^^
   |
   = note: creating a reference requires the pointer to be valid and imposes aliasing requirements
   = note: `#[warn(implicit_unsafe_autorefs)]` on by default
help: try using a raw pointer method instead; or if this reference is intentional, make it explicit
   |
LL |     addr_of_mut!((&mut (*ptr))[..16])
   |                  +++++       +

warning: implicit auto-ref creates a reference to a dereference of a raw pointer
  --> $DIR/implicit_unsafe_autorefs.rs:12:14
   |
LL |     addr_of!((*ptr)[..16])
   |              ^^^^^^
   |
   = note: creating a reference requires the pointer to be valid and imposes aliasing requirements
help: try using a raw pointer method instead; or if this reference is intentional, make it explicit
   |
LL |     addr_of!((&(*ptr))[..16])
   |              ++      +

warning: implicit auto-ref creates a reference to a dereference of a raw pointer
  --> $DIR/implicit_unsafe_autorefs.rs:21:13
   |
LL |     let l = (*ptr).field.len();
   |             ^^^^^^^^^^^^
   |
   = note: creating a reference requires the pointer to be valid and imposes aliasing requirements
help: try using a raw pointer method instead; or if this reference is intentional, make it explicit
   |
LL |     let l = (&(*ptr).field).len();
   |             ++            +

warning: implicit auto-ref creates a reference to a dereference of a raw pointer
  --> $DIR/implicit_unsafe_autorefs.rs:24:14
   |
LL |     addr_of!((*ptr).field[..l - 1])
   |              ^^^^^^^^^^^^
   |
   = note: creating a reference requires the pointer to be valid and imposes aliasing requirements
help: try using a raw pointer method instead; or if this reference is intentional, make it explicit
   |
LL |     addr_of!((&(*ptr).field)[..l - 1])
   |              ++            +

warning: 4 warnings emitted

