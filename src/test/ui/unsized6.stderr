error[E0277]: the size for values of type `X` cannot be known at compilation time
  --> $DIR/unsized6.rs:7:12
   |
LL | fn f1<W: ?Sized, X: ?Sized, Y: ?Sized, Z: ?Sized>(x: &X) {
   |                  - this type parameter needs to be `Sized`
LL |     let _: W; // <-- this is OK, no bindings created, no initializer.
LL |     let _: (isize, (X, isize));
   |            ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = note: only the last element of a tuple may have a dynamically sized type

error[E0277]: the size for values of type `Y` cannot be known at compilation time
  --> $DIR/unsized6.rs:9:9
   |
LL | fn f1<W: ?Sized, X: ?Sized, Y: ?Sized, Z: ?Sized>(x: &X) {
   |                             - this type parameter needs to be `Sized`
...
LL |     let y: Y;
   |         ^ doesn't have a size known at compile-time
   |
   = note: all local variables must have a statically known size
   = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `X` cannot be known at compilation time
  --> $DIR/unsized6.rs:13:9
   |
LL | fn f2<X: ?Sized, Y: ?Sized>(x: &X) {
   |       - this type parameter needs to be `Sized`
LL |     let y: X;
   |         ^ doesn't have a size known at compile-time
   |
   = note: all local variables must have a statically known size
   = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `X` cannot be known at compilation time
  --> $DIR/unsized6.rs:18:9
   |
LL | fn f3<X: ?Sized>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {
   |       - this type parameter needs to be `Sized`
LL |     let y: X = *x1;
   |         ^ doesn't have a size known at compile-time
   |
   = note: all local variables must have a statically known size
   = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `X` cannot be known at compilation time
  --> $DIR/unsized6.rs:22:9
   |
LL | fn f4<X: ?Sized + T>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {
   |       - this type parameter needs to be `Sized`
LL |     let y: X = *x1;
   |         ^ doesn't have a size known at compile-time
   |
   = note: all local variables must have a statically known size
   = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `X` cannot be known at compilation time
  --> $DIR/unsized6.rs:26:18
   |
LL | fn g1<X: ?Sized>(x: X) {}
   |       -          ^ doesn't have a size known at compile-time
   |       |
   |       this type parameter needs to be `Sized`
   |
   = help: unsized locals are gated as an unstable feature
help: function arguments must have a statically known size, borrowed types always have a known size
   |
LL | fn g1<X: ?Sized>(x: &X) {}
   |                     ^

error[E0277]: the size for values of type `X` cannot be known at compilation time
  --> $DIR/unsized6.rs:28:22
   |
LL | fn g2<X: ?Sized + T>(x: X) {}
   |       -              ^ doesn't have a size known at compile-time
   |       |
   |       this type parameter needs to be `Sized`
   |
   = help: unsized locals are gated as an unstable feature
help: function arguments must have a statically known size, borrowed types always have a known size
   |
LL | fn g2<X: ?Sized + T>(x: &X) {}
   |                         ^

error: aborting due to 7 previous errors

For more information about this error, try `rustc --explain E0277`.
