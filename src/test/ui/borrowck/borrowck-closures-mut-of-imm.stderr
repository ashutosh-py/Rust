error[E0596]: cannot borrow `x` as mutable, as it is not declared as mutable
  --> $DIR/borrowck-closures-mut-of-imm.rs:9:25
   |
LL | fn a(x: &isize) {
   |      - help: consider changing this to be mutable: `mut x`
LL |     let mut c1 = || set(&mut *x);
   |                         ^^^^^^^ cannot borrow as mutable

error[E0596]: cannot borrow `x` as mutable, as it is not declared as mutable
  --> $DIR/borrowck-closures-mut-of-imm.rs:11:25
   |
LL | fn a(x: &isize) {
   |      - help: consider changing this to be mutable: `mut x`
...
LL |     let mut c2 = || set(&mut *x);
   |                         ^^^^^^^ cannot borrow as mutable

error[E0596]: cannot borrow `*x` as mutable, as it is behind a `&` reference
  --> $DIR/borrowck-closures-mut-of-imm.rs:9:18
   |
LL | fn a(x: &isize) {
   |         ------ help: consider changing this to be a mutable reference: `&mut isize`
LL |     let mut c1 = || set(&mut *x);
   |                  ^^           - mutable borrow occurs due to use of `*x` in closure
   |                  |
   |                  `x` is a `&` reference, so the data it refers to cannot be borrowed as mutable

error[E0596]: cannot borrow `*x` as mutable, as it is behind a `&` reference
  --> $DIR/borrowck-closures-mut-of-imm.rs:11:18
   |
LL | fn a(x: &isize) {
   |         ------ help: consider changing this to be a mutable reference: `&mut isize`
...
LL |     let mut c2 = || set(&mut *x);
   |                  ^^           - mutable borrow occurs due to use of `*x` in closure
   |                  |
   |                  `x` is a `&` reference, so the data it refers to cannot be borrowed as mutable

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0596`.
