error[E0277]: `?` couldn't convert the error to `()`
  --> $DIR/option-to-result.rs:5:5
   |
LL | fn test_result() -> Result<(),()> {
   |                     ------------- expected `()` because of this
LL |     let a:Option<()> = Some(());
LL |     a?;
   |     ^^ the trait `From<result::sadness::PleaseCallTheOkOrMethodToUseQuestionMarkOnOptionsInAMethodThatReturnsResult>` is not implemented for `()`
   |
   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
   = note: required because of the requirements on the impl of `FromResidual<Option<!>>` for `std::result::Result<(), ()>`
   = note: required by `from_residual`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)
  --> $DIR/option-to-result.rs:11:5
   |
LL | / fn test_option() -> Option<i32>{
LL | |     let a:Result<i32, i32> = Ok(5);
LL | |     a?;
   | |     ^^ cannot use the `?` operator in a function that returns `Option<i32>`
LL | |     Some(5)
LL | | }
   | |_- this function should return `Result` or `Option` to accept `?`
   |
   = help: the trait `FromResidual<std::result::Result<!, i32>>` is not implemented for `Option<i32>`
   = note: required by `from_residual`

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0277`.
