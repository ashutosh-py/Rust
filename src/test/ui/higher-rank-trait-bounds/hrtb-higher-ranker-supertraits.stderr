warning: function cannot return without recursing
  --> $DIR/hrtb-higher-ranker-supertraits.rs:14:1
   |
LL | / fn want_foo_for_some_tcx<'x,F>(f: &'x F)
LL | |     where F : Foo<'x>
   | |_____________________^ cannot return without recursing
LL |   {
LL |       want_foo_for_some_tcx(f);
   |       ------------------------ recursive call site
   |
   = help: a `loop` may express intention better if this is on purpose
   = note: `#[warn(unconditional_recursion)]` on by default

error: lifetime may not live long enough
  --> $DIR/hrtb-higher-ranker-supertraits.rs:18:5
   |
LL | fn want_foo_for_some_tcx<'x,F>(f: &'x F)
   |                          -- lifetime `'x` defined here
...
LL |     want_foo_for_any_tcx(f);
   |     ^^^^^^^^^^^^^^^^^^^^^^^ requires that `'x` must outlive `'static`
   |
note: due to current limitations in the borrow checker, this implies a `'static` lifetime
  --> $DIR/hrtb-higher-ranker-supertraits.rs:22:15
   |
LL |     where F : for<'tcx> Foo<'tcx>
   |               ^^^^^^^^^^^^^^^^^^^

error: implementation of `Foo` is not general enough
  --> $DIR/hrtb-higher-ranker-supertraits.rs:18:5
   |
LL |     want_foo_for_any_tcx(f);
   |     ^^^^^^^^^^^^^^^^^^^^^^^ implementation of `Foo` is not general enough
   |
   = note: `F` must implement `Foo<'0>`, for any lifetime `'0`...
   = note: ...but it actually implements `Foo<'1>`, for some specific lifetime `'1`

warning: function cannot return without recursing
  --> $DIR/hrtb-higher-ranker-supertraits.rs:21:1
   |
LL | / fn want_foo_for_any_tcx<F>(f: &F)
LL | |     where F : for<'tcx> Foo<'tcx>
   | |_________________________________^ cannot return without recursing
...
LL |       want_foo_for_any_tcx(f);
   |       ----------------------- recursive call site
   |
   = help: a `loop` may express intention better if this is on purpose

warning: function cannot return without recursing
  --> $DIR/hrtb-higher-ranker-supertraits.rs:28:1
   |
LL | / fn want_bar_for_some_ccx<'x,B>(b: &B)
LL | |     where B : Bar<'x>
   | |_____________________^ cannot return without recursing
...
LL |       want_bar_for_some_ccx(b);
   |       ------------------------ recursive call site
   |
   = help: a `loop` may express intention better if this is on purpose

error: lifetime may not live long enough
  --> $DIR/hrtb-higher-ranker-supertraits.rs:35:5
   |
LL | fn want_bar_for_some_ccx<'x,B>(b: &B)
   |                          -- lifetime `'x` defined here
...
LL |     want_bar_for_any_ccx(b);
   |     ^^^^^^^^^^^^^^^^^^^^^^^ requires that `'x` must outlive `'static`
   |
note: due to current limitations in the borrow checker, this implies a `'static` lifetime
  --> $DIR/hrtb-higher-ranker-supertraits.rs:39:15
   |
LL |     where B : for<'ccx> Bar<'ccx>
   |               ^^^^^^^^^^^^^^^^^^^

error: implementation of `Bar` is not general enough
  --> $DIR/hrtb-higher-ranker-supertraits.rs:35:5
   |
LL |     want_bar_for_any_ccx(b);
   |     ^^^^^^^^^^^^^^^^^^^^^^^ implementation of `Bar` is not general enough
   |
   = note: `B` must implement `Bar<'0>`, for any lifetime `'0`...
   = note: ...but it actually implements `Bar<'1>`, for some specific lifetime `'1`

warning: function cannot return without recursing
  --> $DIR/hrtb-higher-ranker-supertraits.rs:38:1
   |
LL | / fn want_bar_for_any_ccx<B>(b: &B)
LL | |     where B : for<'ccx> Bar<'ccx>
   | |_________________________________^ cannot return without recursing
...
LL |       want_bar_for_any_ccx(b);
   |       ----------------------- recursive call site
   |
   = help: a `loop` may express intention better if this is on purpose

error: aborting due to 4 previous errors; 4 warnings emitted

