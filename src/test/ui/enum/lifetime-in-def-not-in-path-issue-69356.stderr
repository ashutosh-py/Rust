warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:18:24
   |
LL |     let _ = Foo::Unit::<String>;
   |                        ^^^^^^^^
   |
   = note: `#[warn(type_param_on_variant_ctor)]` on by default
help: set the type parameter on the enum
   |
LL |     let _ = Foo::<String>::Unit;
   |                ^^^^^^^^^^     --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:19:25
   |
LL |     let _ = Foo::Tuple::<String>();
   |                         ^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     let _ = Foo::<String>::Tuple();
   |                ^^^^^^^^^^      --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:20:26
   |
LL |     let _ = Foo::Struct::<String> {};
   |                          ^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     let _ = Foo::<String>::Struct {};
   |                ^^^^^^^^^^       --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:21:45
   |
LL |     if let Foo::Unit::<String> = Foo::Unit::<String> {}
   |                                             ^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::Unit::<String> = Foo::<String>::Unit {}
   |                                     ^^^^^^^^^^     --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:21:23
   |
LL |     if let Foo::Unit::<String> = Foo::Unit::<String> {}
   |                       ^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::<String>::Unit = Foo::Unit::<String> {}
   |               ^^^^^^^^^^     --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:24:49
   |
LL |     if let Foo::Tuple::<String>() = Foo::Tuple::<String>() {}
   |                                                 ^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::Tuple::<String>() = Foo::<String>::Tuple() {}
   |                                        ^^^^^^^^^^      --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:24:24
   |
LL |     if let Foo::Tuple::<String>() = Foo::Tuple::<String>() {}
   |                        ^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::<String>::Tuple() = Foo::Tuple::<String>() {}
   |               ^^^^^^^^^^      --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:27:53
   |
LL |     if let Foo::Struct::<String> {} = (Foo::Struct::<String> {}) {}
   |                                                     ^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::Struct::<String> {} = (Foo::<String>::Struct {}) {}
   |                                           ^^^^^^^^^^       --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:27:25
   |
LL |     if let Foo::Struct::<String> {} = (Foo::Struct::<String> {}) {}
   |                         ^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::<String>::Struct {} = (Foo::Struct::<String> {}) {}
   |               ^^^^^^^^^^       --

