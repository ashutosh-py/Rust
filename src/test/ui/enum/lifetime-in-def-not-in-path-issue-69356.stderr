warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:18:22
   |
LL |     let _ = Foo::Unit::<String>;
   |                      ^^^^^^^^^^
   |
   = note: `#[warn(type_param_on_variant_ctor)]` on by default
help: set the type parameter on the enum
   |
LL |     let _ = Foo::<String>::Unit;
   |                ^^^^^^^^^^     --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:19:23
   |
LL |     let _ = Foo::Tuple::<String>();
   |                       ^^^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     let _ = Foo::<String>::Tuple();
   |                ^^^^^^^^^^      --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:20:24
   |
LL |     let _ = Foo::Struct::<String> {};
   |                        ^^^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     let _ = Foo::<String>::Struct {};
   |                ^^^^^^^^^^       --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:21:43
   |
LL |     if let Foo::Unit::<String> = Foo::Unit::<String> {}
   |                                           ^^^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::Unit::<String> = Foo::<String>::Unit {}
   |                                     ^^^^^^^^^^     --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:21:21
   |
LL |     if let Foo::Unit::<String> = Foo::Unit::<String> {}
   |                     ^^^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::<String>::Unit = Foo::Unit::<String> {}
   |               ^^^^^^^^^^     --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:24:47
   |
LL |     if let Foo::Tuple::<String>() = Foo::Tuple::<String>() {}
   |                                               ^^^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::Tuple::<String>() = Foo::<String>::Tuple() {}
   |                                        ^^^^^^^^^^      --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:24:22
   |
LL |     if let Foo::Tuple::<String>() = Foo::Tuple::<String>() {}
   |                      ^^^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::<String>::Tuple() = Foo::Tuple::<String>() {}
   |               ^^^^^^^^^^      --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:27:51
   |
LL |     if let Foo::Struct::<String> {} = (Foo::Struct::<String> {}) {}
   |                                                   ^^^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::Struct::<String> {} = (Foo::<String>::Struct {}) {}
   |                                           ^^^^^^^^^^       --

warning: type parameter on variant
  --> $DIR/lifetime-in-def-not-in-path-issue-69356.rs:27:23
   |
LL |     if let Foo::Struct::<String> {} = (Foo::Struct::<String> {}) {}
   |                       ^^^^^^^^^^
   |
help: set the type parameter on the enum
   |
LL |     if let Foo::<String>::Struct {} = (Foo::Struct::<String> {}) {}
   |               ^^^^^^^^^^       --

