error: `impl` associated type signature for `A` doesn't match `trait` associated type signature
  --> $DIR/impl_bounds.rs:23:5
   |
LL | /     type A<'a>
LL | |     where
LL | |         Self: 'a;
   | |_________________- expected
...
LL |       type A<'a> = (&'a ()) where Self: 'static;
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found

error: `impl` associated type signature for `B` doesn't match `trait` associated type signature
  --> $DIR/impl_bounds.rs:25:5
   |
LL | /     type B<'a, 'b>
LL | |     where
LL | |         'a: 'b;
   | |_______________- expected
...
LL |       type B<'a, 'b> = (&'a(), &'b ()) where 'b: 'a;
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found

error[E0277]: the trait bound `T: Copy` is not satisfied
  --> $DIR/impl_bounds.rs:27:5
   |
LL |     type C = String where Self: Copy;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `T`
   |
note: required because of the requirements on the impl of `Copy` for `Fooy<T>`
  --> $DIR/impl_bounds.rs:19:10
   |
LL | #[derive(Copy, Clone)]
   |          ^^^^
note: the requirement `Fooy<T>: Copy` appears on the associated impl type `C` but not on the corresponding associated trait type
  --> $DIR/impl_bounds.rs:11:5
   |
LL |   trait Foo {
   |         --- in this trait
...
LL | /     type C
LL | |     where
LL | |         Self: Clone;
   | |____________________^ this trait associated type doesn't have the requirement `Fooy<T>: Copy`
   = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider restricting type parameter `T`
   |
LL | impl<T: std::marker::Copy> Foo for Fooy<T> {
   |       +++++++++++++++++++

error[E0277]: the trait bound `T: Copy` is not satisfied
  --> $DIR/impl_bounds.rs:31:15
   |
LL |         Self: Copy,
   |               ^^^^ the trait `Copy` is not implemented for `T`
   |
note: required because of the requirements on the impl of `Copy` for `Fooy<T>`
  --> $DIR/impl_bounds.rs:19:10
   |
LL | #[derive(Copy, Clone)]
   |          ^^^^
note: the requirement `Fooy<T>: Copy` appears on the impl method `d` but not on the corresponding trait method
  --> $DIR/impl_bounds.rs:14:8
   |
LL | trait Foo {
   |       --- in this trait
...
LL |     fn d()
   |        ^ this trait method doesn't have the requirement `Fooy<T>: Copy`
   = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider restricting type parameter `T`
   |
LL | impl<T: std::marker::Copy> Foo for Fooy<T> {
   |       +++++++++++++++++++

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0277`.
