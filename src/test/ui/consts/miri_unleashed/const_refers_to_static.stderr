warning: skipping const checks
  --> $DIR/const_refers_to_static.rs:14:6
   |
LL |     &FOO
   |      ^^^

warning: skipping const checks
  --> $DIR/const_refers_to_static.rs:22:18
   |
LL |     unsafe { &*(&FOO as *const _ as *const usize) }
   |                  ^^^

warning: skipping const checks
  --> $DIR/const_refers_to_static.rs:27:38
   |
LL | const REF_EXTERN: &usize = unsafe { &EXTERN };
   |                                      ^^^^^^

warning: skipping const checks
  --> $DIR/const_refers_to_static.rs:37:5
   |
LL |     FOO.fetch_add(1, Ordering::Relaxed)
   |     ^^^

warning: skipping const checks
  --> $DIR/const_refers_to_static.rs:37:5
   |
LL |     FOO.fetch_add(1, Ordering::Relaxed)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: skipping const checks
  --> $DIR/const_refers_to_static.rs:44:17
   |
LL |     unsafe { *(&FOO as *const _ as *const usize) }
   |                 ^^^

warning: skipping const checks
  --> $DIR/const_refers_to_static.rs:49:32
   |
LL | const READ_MUT: u32 = unsafe { MUTABLE };
   |                                ^^^^^^^

warning: skipping const checks
  --> $DIR/const_refers_to_static.rs:49:32
   |
LL | const READ_MUT: u32 = unsafe { MUTABLE };
   |                                ^^^^^^^

warning: skipping const checks
  --> $DIR/const_refers_to_static.rs:53:37
   |
LL | const READ_EXTERN: usize = unsafe { EXTERN };
   |                                     ^^^^^^

warning: any use of this value will cause an error
  --> $DIR/const_refers_to_static.rs:32:35
   |
LL | const DEREF_INTERIOR_MUT: usize = *REF_INTERIOR_MUT;
   | ----------------------------------^^^^^^^^^^^^^^^^^-
   |                                   |
   |                                   constant accesses static
   |
note: the lint level is defined here
  --> $DIR/const_refers_to_static.rs:3:9
   |
LL | #![warn(const_err)]
   |         ^^^^^^^^^

warning: any use of this value will cause an error
  --> $DIR/const_refers_to_static.rs:37:5
   |
LL | / const MUTATE_INTERIOR_MUT: usize = {
LL | |     static FOO: AtomicUsize = AtomicUsize::new(0);
LL | |     FOO.fetch_add(1, Ordering::Relaxed)
   | |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ calling non-const function `std::sync::atomic::AtomicUsize::fetch_add`
LL | |
LL | |
LL | | };
   | |__-

warning: any use of this value will cause an error
  --> $DIR/const_refers_to_static.rs:44:14
   |
LL | / const READ_INTERIOR_MUT: usize = {
LL | |     static FOO: AtomicUsize = AtomicUsize::new(0);
LL | |     unsafe { *(&FOO as *const _ as *const usize) }
   | |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constant accesses static
LL | |
LL | | };
   | |__-

warning: any use of this value will cause an error
  --> $DIR/const_refers_to_static.rs:49:32
   |
LL | const READ_MUT: u32 = unsafe { MUTABLE };
   | -------------------------------^^^^^^^---
   |                                |
   |                                constant accesses static

warning: any use of this value will cause an error
  --> $DIR/const_refers_to_static.rs:53:37
   |
LL | const READ_EXTERN: usize = unsafe { EXTERN };
   | ------------------------------------^^^^^^---
   |                                     |
   |                                     cannot read from foreign (extern) static DefId(0:11 ~ const_refers_to_static[317d]::[0]::EXTERN[0])

warning: 14 warnings emitted

