- // MIR for `main` before SimplifyBranches-after-copy-prop
+ // MIR for `main` after SimplifyBranches-after-copy-prop
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/simplify_match.rs:5:11: 5:11
      let mut _1: bool;                    // in scope 0 at $DIR/simplify_match.rs:6:11: 6:31
      let _2: bool;                        // in scope 0 at $DIR/simplify_match.rs:6:17: 6:18
      scope 1 {
          debug x => _2;                   // in scope 1 at $DIR/simplify_match.rs:6:17: 6:18
      }
  
      bb0: {
          StorageLive(_1);                 // bb0[0]: scope 0 at $DIR/simplify_match.rs:6:11: 6:31
          StorageLive(_2);                 // bb0[1]: scope 0 at $DIR/simplify_match.rs:6:17: 6:18
          _2 = const false;                // bb0[2]: scope 0 at $DIR/simplify_match.rs:6:21: 6:26
                                           // ty::Const
                                           // + ty: bool
                                           // + val: Value(Scalar(0x00))
                                           // mir::Constant
                                           // + span: $DIR/simplify_match.rs:6:21: 6:26
                                           // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }
          _1 = const false;                // bb0[3]: scope 1 at $DIR/simplify_match.rs:6:28: 6:29
                                           // ty::Const
                                           // + ty: bool
                                           // + val: Value(Scalar(0x00))
                                           // mir::Constant
                                           // + span: $DIR/simplify_match.rs:6:28: 6:29
                                           // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }
          StorageDead(_2);                 // bb0[4]: scope 0 at $DIR/simplify_match.rs:6:30: 6:31
          goto -> bb1;                     // bb0[5]: scope 0 at $DIR/simplify_match.rs:7:9: 7:13
      }
  
      bb1: {
          _0 = const ();                   // bb1[0]: scope 0 at $DIR/simplify_match.rs:8:18: 8:20
                                           // ty::Const
                                           // + ty: ()
                                           // + val: Value(Scalar(<ZST>))
                                           // mir::Constant
                                           // + span: $DIR/simplify_match.rs:8:18: 8:20
                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }
          goto -> bb3;                     // bb1[1]: scope 0 at $DIR/simplify_match.rs:6:5: 9:6
      }
  
      bb2: {
          _0 = const noop() -> bb3;        // bb2[0]: scope 0 at $DIR/simplify_match.rs:7:17: 7:23
                                           // ty::Const
                                           // + ty: fn() {noop}
                                           // + val: Value(Scalar(<ZST>))
                                           // mir::Constant
                                           // + span: $DIR/simplify_match.rs:7:17: 7:21
                                           // + literal: Const { ty: fn() {noop}, val: Value(Scalar(<ZST>)) }
      }
  
      bb3: {
          StorageDead(_1);                 // bb3[0]: scope 0 at $DIR/simplify_match.rs:10:1: 10:2
          return;                          // bb3[1]: scope 0 at $DIR/simplify_match.rs:10:2: 10:2
      }
  }
  
