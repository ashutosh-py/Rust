// MIR for `change_loop_body` after PreCodegen

fn change_loop_body() -> () {
    let mut _0: ();                      // return place in scope 0 at $DIR/while_let_loops.rs:4:27: 4:27
    let mut _1: i32;                     // in scope 0 at $DIR/while_let_loops.rs:5:9: 5:15
    let mut _2: std::option::Option<u32>; // in scope 0 at $DIR/while_let_loops.rs:6:28: 6:32
    scope 1 {
        debug _x => _1;                  // in scope 1 at $DIR/while_let_loops.rs:5:9: 5:15
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at $DIR/while_let_loops.rs:5:9: 5:15
        _1 = const 0i32;                 // scope 0 at $DIR/while_let_loops.rs:5:18: 5:19
                                         // ty::Const
                                         // + ty: i32
                                         // + val: Value(Scalar(0x00000000))
                                         // mir::Constant
                                         // + span: $DIR/while_let_loops.rs:5:18: 5:19
                                         // + literal: Const { ty: i32, val: Value(Scalar(0x00000000)) }
        StorageLive(_2);                 // scope 1 at $DIR/while_let_loops.rs:6:28: 6:32
        discriminant(_2) = 0;            // scope 1 at $DIR/while_let_loops.rs:6:28: 6:32
        _0 = const ();                   // scope 1 at $DIR/while_let_loops.rs:6:5: 9:6
                                         // ty::Const
                                         // + ty: ()
                                         // + val: Value(Scalar(<ZST>))
                                         // mir::Constant
                                         // + span: $DIR/while_let_loops.rs:6:5: 9:6
                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }
        StorageDead(_2);                 // scope 1 at $DIR/while_let_loops.rs:9:5: 9:6
        StorageDead(_1);                 // scope 0 at $DIR/while_let_loops.rs:10:1: 10:2
        return;                          // scope 0 at $DIR/while_let_loops.rs:10:2: 10:2
    }
}
