// MIR for `identity` after PreCodegen

fn identity(_1: Result<i32, i32>) -> Result<i32, i32> {
    debug x => _1;                       // in scope 0 at $DIR/separate_const_switch.rs:28:13: 28:14
    let mut _0: std::result::Result<i32, i32>; // return place in scope 0 at $DIR/separate_const_switch.rs:28:37: 28:53
    let mut _2: i32;                     // in scope 0 at $DIR/separate_const_switch.rs:29:8: 29:10
    let mut _3: std::result::Result<i32, i32>; // in scope 0 at $DIR/separate_const_switch.rs:29:8: 29:9
    let _4: std::result::Result<std::convert::Infallible, i32>; // in scope 0 at $DIR/separate_const_switch.rs:29:9: 29:10
    let mut _5: std::result::Result<std::convert::Infallible, i32>; // in scope 0 at $DIR/separate_const_switch.rs:29:9: 29:10
    let _6: i32;                         // in scope 0 at $DIR/separate_const_switch.rs:29:8: 29:10
    let mut _16: i32;                    // in scope 0 at $DIR/separate_const_switch.rs:29:8: 29:10
    let mut _17: std::result::Result<std::convert::Infallible, i32>; // in scope 0 at $DIR/separate_const_switch.rs:29:8: 29:10
    scope 1 {
        debug residual => _4;            // in scope 1 at $DIR/separate_const_switch.rs:29:9: 29:10
        scope 2 {
            scope 8 (inlined <Result<i32, i32> as FromResidual<Result<Infallible, i32>>>::from_residual) { // at $DIR/separate_const_switch.rs:29:8: 29:10
                debug residual => _5;    // in scope 8 at $DIR/separate_const_switch.rs:29:8: 29:10
                let _13: i32;            // in scope 8 at $DIR/separate_const_switch.rs:29:8: 29:10
                let mut _14: i32;        // in scope 8 at $DIR/separate_const_switch.rs:29:8: 29:10
                let mut _15: i32;        // in scope 8 at $DIR/separate_const_switch.rs:29:8: 29:10
                scope 9 {
                    debug e => _13;      // in scope 9 at $DIR/separate_const_switch.rs:29:8: 29:10
                    scope 10 (inlined <i32 as From<i32>>::from) { // at $DIR/separate_const_switch.rs:29:8: 29:10
                        debug t => _15;  // in scope 10 at $DIR/separate_const_switch.rs:29:8: 29:10
                    }
                }
            }
        }
    }
    scope 3 {
        debug val => _6;                 // in scope 3 at $DIR/separate_const_switch.rs:29:8: 29:10
        scope 4 {
        }
    }
    scope 5 (inlined <Result<i32, i32> as Try>::branch) { // at $DIR/separate_const_switch.rs:29:8: 29:10
        debug self => _3;                // in scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        let mut _7: isize;               // in scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        let _8: i32;                     // in scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        let mut _9: i32;                 // in scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        let _10: i32;                    // in scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        let mut _11: std::result::Result<std::convert::Infallible, i32>; // in scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        let mut _12: i32;                // in scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        scope 6 {
            debug v => _8;               // in scope 6 at $DIR/separate_const_switch.rs:29:8: 29:10
        }
        scope 7 {
            debug e => _10;              // in scope 7 at $DIR/separate_const_switch.rs:29:8: 29:10
        }
    }

    bb0: {
        StorageLive(_16);                // scope 0 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageLive(_17);                // scope 0 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageLive(_3);                 // scope 0 at $DIR/separate_const_switch.rs:29:8: 29:9
        _3 = _1;                         // scope 0 at $DIR/separate_const_switch.rs:29:8: 29:9
        StorageLive(_7);                 // scope 0 at $DIR/separate_const_switch.rs:29:8: 29:10
        _7 = discriminant(_3);           // scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        switchInt(move _7) -> [0_isize: bb3, 1_isize: bb1, otherwise: bb2]; // scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
    }

    bb1: {
        StorageLive(_10);                // scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        _10 = move ((_3 as Err).0: i32); // scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageLive(_11);                // scope 7 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageLive(_12);                // scope 7 at $DIR/separate_const_switch.rs:29:8: 29:10
        _12 = move _10;                  // scope 7 at $DIR/separate_const_switch.rs:29:8: 29:10
        ((_11 as Err).0: i32) = move _12; // scope 7 at $DIR/separate_const_switch.rs:29:8: 29:10
        discriminant(_11) = 1;           // scope 7 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_12);                // scope 7 at $DIR/separate_const_switch.rs:29:8: 29:10
        _17 = move _11;                  // scope 7 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_11);                // scope 7 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_10);                // scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_7);                 // scope 0 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_3);                 // scope 0 at $DIR/separate_const_switch.rs:29:9: 29:10
        StorageLive(_4);                 // scope 0 at $DIR/separate_const_switch.rs:29:9: 29:10
        _4 = _17;                        // scope 0 at $DIR/separate_const_switch.rs:29:9: 29:10
        StorageLive(_5);                 // scope 2 at $DIR/separate_const_switch.rs:29:9: 29:10
        _5 = _4;                         // scope 2 at $DIR/separate_const_switch.rs:29:9: 29:10
        StorageLive(_13);                // scope 8 at $DIR/separate_const_switch.rs:29:8: 29:10
        _13 = move ((_5 as Err).0: i32); // scope 8 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageLive(_14);                // scope 9 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageLive(_15);                // scope 9 at $DIR/separate_const_switch.rs:29:8: 29:10
        _15 = move _13;                  // scope 9 at $DIR/separate_const_switch.rs:29:8: 29:10
        _14 = move _15;                  // scope 10 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_15);                // scope 9 at $DIR/separate_const_switch.rs:29:8: 29:10
        ((_0 as Err).0: i32) = move _14; // scope 9 at $DIR/separate_const_switch.rs:29:8: 29:10
        discriminant(_0) = 1;            // scope 9 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_14);                // scope 9 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_13);                // scope 8 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_5);                 // scope 2 at $DIR/separate_const_switch.rs:29:9: 29:10
        StorageDead(_4);                 // scope 0 at $DIR/separate_const_switch.rs:29:9: 29:10
        StorageDead(_16);                // scope 0 at $DIR/separate_const_switch.rs:30:1: 30:2
        StorageDead(_17);                // scope 0 at $DIR/separate_const_switch.rs:30:1: 30:2
        return;                          // scope 0 at $DIR/separate_const_switch.rs:30:2: 30:2
    }

    bb2: {
        unreachable;                     // scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
    }

    bb3: {
        StorageLive(_8);                 // scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        _8 = move ((_3 as Ok).0: i32);   // scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageLive(_9);                 // scope 6 at $DIR/separate_const_switch.rs:29:8: 29:10
        _9 = move _8;                    // scope 6 at $DIR/separate_const_switch.rs:29:8: 29:10
        _16 = move _9;                   // scope 6 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_9);                 // scope 6 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_8);                 // scope 5 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_7);                 // scope 0 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_3);                 // scope 0 at $DIR/separate_const_switch.rs:29:9: 29:10
        StorageLive(_6);                 // scope 0 at $DIR/separate_const_switch.rs:29:8: 29:10
        _6 = _16;                        // scope 0 at $DIR/separate_const_switch.rs:29:8: 29:10
        _2 = _6;                         // scope 4 at $DIR/separate_const_switch.rs:29:8: 29:10
        StorageDead(_6);                 // scope 0 at $DIR/separate_const_switch.rs:29:9: 29:10
        ((_0 as Ok).0: i32) = move _2;   // scope 0 at $DIR/separate_const_switch.rs:29:5: 29:11
        discriminant(_0) = 0;            // scope 0 at $DIR/separate_const_switch.rs:29:5: 29:11
        StorageDead(_16);                // scope 0 at $DIR/separate_const_switch.rs:30:1: 30:2
        StorageDead(_17);                // scope 0 at $DIR/separate_const_switch.rs:30:1: 30:2
        return;                          // scope 0 at $DIR/separate_const_switch.rs:30:2: 30:2
    }
}
