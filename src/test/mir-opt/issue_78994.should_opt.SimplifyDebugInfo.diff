- // MIR for `should_opt` before SimplifyDebugInfo
+ // MIR for `should_opt` after SimplifyDebugInfo
  
  fn should_opt(_1: bool) -> () {
      debug input => _1;                   // in scope 0 at $DIR/issue-78994.rs:5:19: 5:24
      let mut _0: ();                      // return place in scope 0 at $DIR/issue-78994.rs:5:32: 5:32
      let _2: bool;                        // in scope 0 at $DIR/issue-78994.rs:6:9: 6:10
      scope 1 {
-         debug x => _2;                   // in scope 1 at $DIR/issue-78994.rs:6:9: 6:10
+         debug x => _1;                   // in scope 1 at $DIR/issue-78994.rs:6:9: 6:10
      }
  
      bb0: {
          StorageLive(_2);                 // scope 0 at $DIR/issue-78994.rs:6:9: 6:10
          _2 = _1;                         // scope 0 at $DIR/issue-78994.rs:6:13: 6:18
          StorageDead(_2);                 // scope 0 at $DIR/issue-78994.rs:7:1: 7:2
          return;                          // scope 0 at $DIR/issue-78994.rs:7:2: 7:2
      }
  }
  
