- // MIR for `norm2` before InstCombine
+ // MIR for `norm2` after InstCombine
  
  fn norm2(_1: [f32; 2]) -> f32 {
      debug x => _1;                       // in scope 0 at $DIR/combine_array_len.rs:4:10: 4:11
      let mut _0: f32;                     // return place in scope 0 at $DIR/combine_array_len.rs:4:26: 4:29
      let _2: usize;                       // in scope 0 at $DIR/combine_array_len.rs:5:15: 5:16
      let _3: usize;                       // in scope 0 at $DIR/combine_array_len.rs:6:15: 6:16
      let mut _4: f32;                     // in scope 0 at $DIR/combine_array_len.rs:7:5: 7:8
      let mut _5: f32;                     // in scope 0 at $DIR/combine_array_len.rs:7:5: 7:6
      let mut _6: f32;                     // in scope 0 at $DIR/combine_array_len.rs:7:7: 7:8
      let mut _7: f32;                     // in scope 0 at $DIR/combine_array_len.rs:7:11: 7:14
      let mut _8: f32;                     // in scope 0 at $DIR/combine_array_len.rs:7:11: 7:12
      let mut _9: f32;                     // in scope 0 at $DIR/combine_array_len.rs:7:13: 7:14
      scope 1 {
          debug a => _6;                   // in scope 1 at $DIR/combine_array_len.rs:5:9: 5:10
          scope 2 {
              debug b => _9;               // in scope 2 at $DIR/combine_array_len.rs:6:9: 6:10
          }
      }
  
      bb0: {
          StorageLive(_2);                 // scope 0 at $DIR/combine_array_len.rs:5:15: 5:16
          _2 = const 0_usize;              // scope 0 at $DIR/combine_array_len.rs:5:15: 5:16
          _6 = _1[_2];                     // scope 0 at $DIR/combine_array_len.rs:5:13: 5:17
          StorageDead(_2);                 // scope 0 at $DIR/combine_array_len.rs:5:17: 5:18
          StorageLive(_3);                 // scope 1 at $DIR/combine_array_len.rs:6:15: 6:16
          _3 = const 1_usize;              // scope 1 at $DIR/combine_array_len.rs:6:15: 6:16
          _9 = _1[_3];                     // scope 1 at $DIR/combine_array_len.rs:6:13: 6:17
          StorageDead(_3);                 // scope 1 at $DIR/combine_array_len.rs:6:17: 6:18
          StorageLive(_4);                 // scope 2 at $DIR/combine_array_len.rs:7:5: 7:8
          StorageLive(_5);                 // scope 2 at $DIR/combine_array_len.rs:7:5: 7:6
          _5 = _6;                         // scope 2 at $DIR/combine_array_len.rs:7:5: 7:6
          _4 = Mul(move _5, move _6);      // scope 2 at $DIR/combine_array_len.rs:7:5: 7:8
          StorageDead(_5);                 // scope 2 at $DIR/combine_array_len.rs:7:7: 7:8
          StorageLive(_7);                 // scope 2 at $DIR/combine_array_len.rs:7:11: 7:14
          StorageLive(_8);                 // scope 2 at $DIR/combine_array_len.rs:7:11: 7:12
          _8 = _9;                         // scope 2 at $DIR/combine_array_len.rs:7:11: 7:12
          _7 = Mul(move _8, move _9);      // scope 2 at $DIR/combine_array_len.rs:7:11: 7:14
          StorageDead(_8);                 // scope 2 at $DIR/combine_array_len.rs:7:13: 7:14
          _0 = Add(move _4, move _7);      // scope 2 at $DIR/combine_array_len.rs:7:5: 7:14
          StorageDead(_7);                 // scope 2 at $DIR/combine_array_len.rs:7:13: 7:14
          StorageDead(_4);                 // scope 2 at $DIR/combine_array_len.rs:7:13: 7:14
          return;                          // scope 0 at $DIR/combine_array_len.rs:8:2: 8:2
      }
  }
  
