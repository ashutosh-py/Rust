- // MIR for `move_simple` before DestinationPropagation
+ // MIR for `move_simple` after DestinationPropagation
  
  fn move_simple(_1: i32) -> () {
      debug x => _1;                       // in scope 0 at $DIR/move.rs:+0:16: +0:17
      let mut _0: ();                      // return place in scope 0 at $DIR/move.rs:+0:24: +0:24
      let _2: ();                          // in scope 0 at $DIR/move.rs:+1:5: +1:19
      let mut _3: i32;                     // in scope 0 at $DIR/move.rs:+1:14: +1:15
      let mut _4: i32;                     // in scope 0 at $DIR/move.rs:+1:17: +1:18
  
      bb0: {
          StorageLive(_2);                 // scope 0 at $DIR/move.rs:+1:5: +1:19
-         StorageLive(_3);                 // scope 0 at $DIR/move.rs:+1:14: +1:15
-         _3 = _1;                         // scope 0 at $DIR/move.rs:+1:14: +1:15
-         StorageLive(_4);                 // scope 0 at $DIR/move.rs:+1:17: +1:18
-         _4 = _1;                         // scope 0 at $DIR/move.rs:+1:17: +1:18
-         _2 = use_both(move _3, move _4) -> bb1; // scope 0 at $DIR/move.rs:+1:5: +1:19
+         nop;                             // scope 0 at $DIR/move.rs:+1:14: +1:15
+         nop;                             // scope 0 at $DIR/move.rs:+1:14: +1:15
+         nop;                             // scope 0 at $DIR/move.rs:+1:17: +1:18
+         nop;                             // scope 0 at $DIR/move.rs:+1:17: +1:18
+         _2 = use_both(_1, _1) -> bb1;    // scope 0 at $DIR/move.rs:+1:5: +1:19
                                           // mir::Constant
                                           // + span: $DIR/move.rs:8:5: 8:13
                                           // + literal: Const { ty: fn(i32, i32) {use_both}, val: Value(<ZST>) }
      }
  
      bb1: {
-         StorageDead(_4);                 // scope 0 at $DIR/move.rs:+1:18: +1:19
-         StorageDead(_3);                 // scope 0 at $DIR/move.rs:+1:18: +1:19
+         nop;                             // scope 0 at $DIR/move.rs:+1:18: +1:19
+         nop;                             // scope 0 at $DIR/move.rs:+1:18: +1:19
          StorageDead(_2);                 // scope 0 at $DIR/move.rs:+1:19: +1:20
          _0 = const ();                   // scope 0 at $DIR/move.rs:+0:24: +2:2
          return;                          // scope 0 at $DIR/move.rs:+2:2: +2:2
      }
  }
  
