- // MIR for `id_result` before SimplifyBranchSame
+ // MIR for `id_result` after SimplifyBranchSame
  
  fn id_result(_1: Result<u8, i32>) -> Result<u8, i32> {
      debug r => _1;                       // in scope 0 at $DIR/simplify_arm.rs:14:14: 14:15
      let mut _0: std::result::Result<u8, i32>; // return place in scope 0 at $DIR/simplify_arm.rs:14:37: 14:52
      let mut _2: isize;                   // in scope 0 at $DIR/simplify_arm.rs:16:9: 16:14
      scope 1 {
          debug x => ((_0 as Ok).0: u8);   // in scope 1 at $DIR/simplify_arm.rs:16:12: 16:13
      }
      scope 2 {
          debug y => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify_arm.rs:17:13: 17:14
      }
  
      bb0: {
          _2 = discriminant(_1);           // scope 0 at $DIR/simplify_arm.rs:15:11: 15:12
-         switchInt(move _2) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/simplify_arm.rs:15:5: 15:12
+         goto -> bb1;                     // scope 0 at $DIR/simplify_arm.rs:15:5: 15:12
      }
  
      bb1: {
-         _0 = _1;                         // scope 2 at $DIR/simplify_arm.rs:17:19: 17:25
-         return;                          // scope 0 at $DIR/simplify_arm.rs:17:24: 17:25
-     }
- 
-     bb2: {
          _0 = _1;                         // scope 1 at $DIR/simplify_arm.rs:16:18: 16:23
          return;                          // scope 0 at $DIR/simplify_arm.rs:16:22: 16:23
      }
  }
  
