- // MIR for `id_try` before SimplifyArmIdentity
+ // MIR for `id_try` after SimplifyArmIdentity
  
  fn id_try(_1: std::result::Result<u8, i32>) -> std::result::Result<u8, i32> {
      debug r => _1;                       // in scope 0 at $DIR/simplify-arm.rs:23:11: 23:12
      let mut _0: std::result::Result<u8, i32>; // return place in scope 0 at $DIR/simplify-arm.rs:23:34: 23:49
      scope 1 {
          debug x => ((_0 as Ok).0: u8);   // in scope 1 at $DIR/simplify-arm.rs:24:9: 24:10
      }
      scope 2 {
          debug err => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify-arm.rs:24:14: 24:15
          scope 3 {
              scope 7 (inlined <i32 as From<i32>>::from) { // at $DIR/simplify-arm.rs:24:14: 24:15
                  debug t => ((_0 as Err).0: i32); // in scope 7 at $DIR/simplify-arm.rs:24:14: 24:15
              }
              scope 8 (inlined <std::result::Result<u8, i32> as Try>::from_error) { // at $DIR/simplify-arm.rs:24:13: 24:15
                  debug v => ((_0 as Err).0: i32); // in scope 8 at $DIR/simplify-arm.rs:24:13: 24:15
              }
          }
      }
      scope 4 {
          debug val => ((_0 as Ok).0: u8); // in scope 4 at $DIR/simplify-arm.rs:24:13: 24:15
          scope 5 {
          }
      }
      scope 6 (inlined <std::result::Result<u8, i32> as Try>::into_result) { // at $DIR/simplify-arm.rs:24:13: 24:15
          debug self => _0;                // in scope 6 at $DIR/simplify-arm.rs:24:13: 24:15
      }
  
      bb0: {
          _0 = _1;                         // scope 0 at $DIR/simplify-arm.rs:24:13: 24:14
          return;                          // scope 0 at $DIR/simplify-arm.rs:26:2: 26:2
      }
  }
  
