- // MIR for `mismatched_variant` before SimplifyArmIdentity
+ // MIR for `mismatched_variant` after SimplifyArmIdentity
  
  fn mismatched_variant(_1: Result<u32, u32>) -> Result<u32, u32> {
      debug x => _1;                       // in scope 0 at $DIR/simplify_arm_correctness.rs:33:23: 33:24
      let mut _0: std::result::Result<u32, u32>; // return place in scope 0 at $DIR/simplify_arm_correctness.rs:33:47: 33:63
      let mut _2: isize;                   // in scope 0 at $DIR/simplify_arm_correctness.rs:35:9: 35:14
      let _3: u32;                         // in scope 0 at $DIR/simplify_arm_correctness.rs:35:12: 35:13
      let mut _4: u32;                     // in scope 0 at $DIR/simplify_arm_correctness.rs:35:22: 35:23
      let _5: u32;                         // in scope 0 at $DIR/simplify_arm_correctness.rs:36:13: 36:14
      let mut _6: u32;                     // in scope 0 at $DIR/simplify_arm_correctness.rs:36:22: 36:23
      scope 1 {
          debug a => _3;                   // in scope 1 at $DIR/simplify_arm_correctness.rs:35:12: 35:13
      }
      scope 2 {
          debug a => _5;                   // in scope 2 at $DIR/simplify_arm_correctness.rs:36:13: 36:14
      }
  
      bb0: {
          _2 = discriminant(_1);           // scope 0 at $DIR/simplify_arm_correctness.rs:34:11: 34:12
          switchInt(move _2) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/simplify_arm_correctness.rs:34:5: 34:12
      }
  
      bb1: {
          StorageLive(_5);                 // scope 0 at $DIR/simplify_arm_correctness.rs:36:13: 36:14
          _5 = ((_1 as Err).0: u32);       // scope 0 at $DIR/simplify_arm_correctness.rs:36:13: 36:14
          StorageLive(_6);                 // scope 2 at $DIR/simplify_arm_correctness.rs:36:22: 36:23
          _6 = _5;                         // scope 2 at $DIR/simplify_arm_correctness.rs:36:22: 36:23
          ((_0 as Ok).0: u32) = move _6;   // scope 2 at $DIR/simplify_arm_correctness.rs:36:19: 36:24
          discriminant(_0) = 0;            // scope 2 at $DIR/simplify_arm_correctness.rs:36:19: 36:24
          StorageDead(_6);                 // scope 2 at $DIR/simplify_arm_correctness.rs:36:23: 36:24
          StorageDead(_5);                 // scope 0 at $DIR/simplify_arm_correctness.rs:36:23: 36:24
          return;                          // scope 0 at $DIR/simplify_arm_correctness.rs:36:23: 36:24
      }
  
      bb2: {
          StorageLive(_3);                 // scope 0 at $DIR/simplify_arm_correctness.rs:35:12: 35:13
          _3 = ((_1 as Ok).0: u32);        // scope 0 at $DIR/simplify_arm_correctness.rs:35:12: 35:13
          StorageLive(_4);                 // scope 1 at $DIR/simplify_arm_correctness.rs:35:22: 35:23
          _4 = _3;                         // scope 1 at $DIR/simplify_arm_correctness.rs:35:22: 35:23
          ((_0 as Err).0: u32) = move _4;  // scope 1 at $DIR/simplify_arm_correctness.rs:35:18: 35:24
          discriminant(_0) = 1;            // scope 1 at $DIR/simplify_arm_correctness.rs:35:18: 35:24
          StorageDead(_4);                 // scope 1 at $DIR/simplify_arm_correctness.rs:35:23: 35:24
          StorageDead(_3);                 // scope 0 at $DIR/simplify_arm_correctness.rs:35:23: 35:24
          return;                          // scope 0 at $DIR/simplify_arm_correctness.rs:35:23: 35:24
      }
  }
  
