- // MIR for `main` before ConstProp
+ // MIR for `main` after ConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/invalid_constant.rs:+0:11: +0:11
      let mut _1: !;                       // in scope 0 at $DIR/invalid_constant.rs:+0:11: +27:2
      let _2: char;                        // in scope 0 at $DIR/invalid_constant.rs:+6:9: +6:22
      let mut _3: main::InvalidChar;       // in scope 0 at $DIR/invalid_constant.rs:+6:34: +6:63
      let mut _5: E;                       // in scope 0 at $DIR/invalid_constant.rs:+13:25: +13:59
      let mut _6: main::InvalidTag;        // in scope 0 at $DIR/invalid_constant.rs:+13:34: +13:55
      let mut _8: Empty;                   // in scope 0 at $DIR/invalid_constant.rs:+20:35: +20:73
      let mut _9: main::NoVariants;        // in scope 0 at $DIR/invalid_constant.rs:+20:44: +20:65
      scope 1 {
          debug _invalid_char => _2;       // in scope 1 at $DIR/invalid_constant.rs:+6:9: +6:22
          let _4: [E; 1];                  // in scope 1 at $DIR/invalid_constant.rs:+13:9: +13:21
          scope 3 {
              debug _invalid_tag => _4;    // in scope 3 at $DIR/invalid_constant.rs:+13:9: +13:21
              let _7: [Empty; 1];          // in scope 3 at $DIR/invalid_constant.rs:+20:9: +20:31
              scope 5 {
                  debug _enum_without_variants => _7; // in scope 5 at $DIR/invalid_constant.rs:+20:9: +20:31
                  let _10: main::Str<"���">; // in scope 5 at $DIR/invalid_constant.rs:+24:9: +24:22
                  scope 7 {
                      debug _non_utf8_str => _10; // in scope 7 at $DIR/invalid_constant.rs:+24:9: +24:22
                  }
              }
              scope 6 {
              }
          }
          scope 4 {
          }
      }
      scope 2 {
      }
  
      bb0: {
          unreachable;                     // scope 0 at $DIR/invalid_constant.rs:+0:11: +27:2
      }
  }
  
