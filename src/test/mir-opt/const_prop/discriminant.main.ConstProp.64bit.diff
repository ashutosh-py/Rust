- // MIR for `main` before ConstProp
+ // MIR for `main` after ConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/discriminant.rs:10:11: 10:11
      let _1: i32;                         // in scope 0 at $DIR/discriminant.rs:11:9: 11:10
      let mut _2: i32;                     // in scope 0 at $DIR/discriminant.rs:11:13: 11:64
      let mut _3: std::option::Option<bool>; // in scope 0 at $DIR/discriminant.rs:11:34: 11:44
      let mut _4: isize;                   // in scope 0 at $DIR/discriminant.rs:11:21: 11:31
      let mut _5: bool;                    // in scope 0 at $DIR/discriminant.rs:11:34: 11:44
      let mut _6: isize;                   // in scope 0 at $DIR/discriminant.rs:11:34: 11:44
      scope 1 {
          debug x => _1;                   // in scope 1 at $DIR/discriminant.rs:11:9: 11:10
      }
  
      bb0: {
          nop;                             // scope 0 at $DIR/discriminant.rs:11:9: 11:10
          nop;                             // scope 0 at $DIR/discriminant.rs:11:13: 11:64
          StorageLive(_5);                 // scope 0 at $DIR/discriminant.rs:11:34: 11:44
          _5 = const true;                 // scope 0 at $DIR/discriminant.rs:11:34: 11:44
          _6 = const 1_isize;              // scope 0 at $DIR/discriminant.rs:11:34: 11:44
-         _4 = _6;                         // scope 0 at $DIR/discriminant.rs:11:21: 11:31
-         switchInt(move _4) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/discriminant.rs:11:21: 11:31
+         _4 = const 1_isize;              // scope 0 at $DIR/discriminant.rs:11:21: 11:31
+         switchInt(const 1_isize) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/discriminant.rs:11:21: 11:31
      }
  
      bb1: {
          _2 = const 10_i32;               // scope 0 at $DIR/discriminant.rs:11:59: 11:61
          goto -> bb4;                     // scope 0 at $DIR/discriminant.rs:11:13: 11:64
      }
  
      bb2: {
-         switchInt(_5) -> [false: bb1, otherwise: bb3]; // scope 0 at $DIR/discriminant.rs:11:21: 11:31
+         switchInt(const true) -> [false: bb1, otherwise: bb3]; // scope 0 at $DIR/discriminant.rs:11:21: 11:31
      }
  
      bb3: {
          _2 = const 42_i32;               // scope 0 at $DIR/discriminant.rs:11:47: 11:49
          goto -> bb4;                     // scope 0 at $DIR/discriminant.rs:11:13: 11:64
      }
  
      bb4: {
          _1 = Add(move _2, const 0_i32);  // scope 0 at $DIR/discriminant.rs:11:13: 11:68
          nop;                             // scope 0 at $DIR/discriminant.rs:11:67: 11:68
          StorageDead(_5);                 // scope 0 at $DIR/discriminant.rs:11:68: 11:69
          nop;                             // scope 0 at $DIR/discriminant.rs:10:11: 12:2
          nop;                             // scope 0 at $DIR/discriminant.rs:12:1: 12:2
          return;                          // scope 0 at $DIR/discriminant.rs:12:2: 12:2
      }
  }
  
