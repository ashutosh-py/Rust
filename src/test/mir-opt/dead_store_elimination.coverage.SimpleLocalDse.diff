- // MIR for `coverage` before SimpleLocalDse
+ // MIR for `coverage` after SimpleLocalDse
  
  fn coverage() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/dead_store_elimination.rs:6:19: 6:19
      let mut _1: i32;                     // in scope 0 at $DIR/dead_store_elimination.rs:7:9: 7:14
      let _2: ();                          // in scope 0 at $DIR/dead_store_elimination.rs:10:5: 10:12
      let mut _3: i32;                     // in scope 0 at $DIR/dead_store_elimination.rs:10:10: 10:11
      let mut _6: i32;                     // in scope 0 at $DIR/dead_store_elimination.rs:13:22: 13:24
      let mut _7: i32;                     // in scope 0 at $DIR/dead_store_elimination.rs:14:9: 14:11
      let _8: ();                          // in scope 0 at $DIR/dead_store_elimination.rs:16:5: 16:12
      let mut _9: i32;                     // in scope 0 at $DIR/dead_store_elimination.rs:16:10: 16:11
      let _11: ();                         // in scope 0 at $DIR/dead_store_elimination.rs:23:5: 23:12
      let mut _12: coverage::S;            // in scope 0 at $DIR/dead_store_elimination.rs:23:10: 23:11
      let mut _14: coverage::S;            // in scope 0 at $DIR/dead_store_elimination.rs:27:9: 27:14
      let _15: ();                         // in scope 0 at $DIR/dead_store_elimination.rs:28:5: 28:12
      let mut _16: coverage::S;            // in scope 0 at $DIR/dead_store_elimination.rs:28:10: 28:11
      scope 1 {
          debug x => _1;                   // in scope 1 at $DIR/dead_store_elimination.rs:7:9: 7:14
          let mut _4: i32;                 // in scope 1 at $DIR/dead_store_elimination.rs:12:9: 12:14
          scope 2 {
              debug x => _4;               // in scope 2 at $DIR/dead_store_elimination.rs:12:9: 12:14
              let mut _5: &mut i32;        // in scope 2 at $DIR/dead_store_elimination.rs:13:9: 13:14
              scope 3 {
                  debug r => _5;           // in scope 3 at $DIR/dead_store_elimination.rs:13:9: 13:14
                  let mut _10: coverage::S; // in scope 3 at $DIR/dead_store_elimination.rs:20:9: 20:14
                  scope 4 {
                      debug s => _10;      // in scope 4 at $DIR/dead_store_elimination.rs:20:9: 20:14
                      let mut _13: coverage::S; // in scope 4 at $DIR/dead_store_elimination.rs:25:9: 25:14
                      scope 5 {
                          debug s => _13;  // in scope 5 at $DIR/dead_store_elimination.rs:25:9: 25:14
                          let mut _17: i32; // in scope 5 at $DIR/dead_store_elimination.rs:30:9: 30:14
                          scope 6 {
                              debug x => _17; // in scope 6 at $DIR/dead_store_elimination.rs:30:9: 30:14
                          }
                      }
                  }
              }
          }
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/dead_store_elimination.rs:7:9: 7:14
-         _1 = const 0_i32;                // scope 0 at $DIR/dead_store_elimination.rs:7:17: 7:18
-         _1 = const 1_i32;                // scope 1 at $DIR/dead_store_elimination.rs:8:5: 8:10
+         nop;                             // scope 0 at $DIR/dead_store_elimination.rs:7:17: 7:18
+         nop;                             // scope 1 at $DIR/dead_store_elimination.rs:8:5: 8:10
          _1 = const 2_i32;                // scope 1 at $DIR/dead_store_elimination.rs:9:5: 9:10
          StorageLive(_2);                 // scope 1 at $DIR/dead_store_elimination.rs:10:5: 10:12
          StorageLive(_3);                 // scope 1 at $DIR/dead_store_elimination.rs:10:10: 10:11
          _3 = const 2_i32;                // scope 1 at $DIR/dead_store_elimination.rs:10:10: 10:11
          _2 = read::<i32>(const 2_i32) -> bb1; // scope 1 at $DIR/dead_store_elimination.rs:10:5: 10:12
                                           // mir::Constant
                                           // + span: $DIR/dead_store_elimination.rs:10:5: 10:9
                                           // + literal: Const { ty: fn(i32) {read::<i32>}, val: Value(Scalar(<ZST>)) }
      }
  
      bb1: {
          StorageDead(_3);                 // scope 1 at $DIR/dead_store_elimination.rs:10:11: 10:12
          StorageDead(_2);                 // scope 1 at $DIR/dead_store_elimination.rs:10:12: 10:13
          StorageLive(_4);                 // scope 1 at $DIR/dead_store_elimination.rs:12:9: 12:14
-         _4 = const 10_i32;               // scope 1 at $DIR/dead_store_elimination.rs:12:17: 12:19
+         nop;                             // scope 1 at $DIR/dead_store_elimination.rs:12:17: 12:19
          StorageLive(_5);                 // scope 2 at $DIR/dead_store_elimination.rs:13:9: 13:14
          StorageLive(_6);                 // scope 2 at $DIR/dead_store_elimination.rs:13:22: 13:24
          _6 = const 11_i32;               // scope 2 at $DIR/dead_store_elimination.rs:13:22: 13:24
          _5 = &mut _6;                    // scope 2 at $DIR/dead_store_elimination.rs:13:17: 13:24
          StorageLive(_7);                 // scope 3 at $DIR/dead_store_elimination.rs:14:9: 14:11
-         _7 = (*_5);                      // scope 3 at $DIR/dead_store_elimination.rs:14:9: 14:11
-         _4 = move _7;                    // scope 3 at $DIR/dead_store_elimination.rs:14:5: 14:11
+         nop;                             // scope 3 at $DIR/dead_store_elimination.rs:14:9: 14:11
+         nop;                             // scope 3 at $DIR/dead_store_elimination.rs:14:5: 14:11
          StorageDead(_7);                 // scope 3 at $DIR/dead_store_elimination.rs:14:10: 14:11
          _4 = const 12_i32;               // scope 3 at $DIR/dead_store_elimination.rs:15:5: 15:11
          StorageLive(_8);                 // scope 3 at $DIR/dead_store_elimination.rs:16:5: 16:12
          StorageLive(_9);                 // scope 3 at $DIR/dead_store_elimination.rs:16:10: 16:11
          _9 = const 12_i32;               // scope 3 at $DIR/dead_store_elimination.rs:16:10: 16:11
          _8 = read::<i32>(const 12_i32) -> bb2; // scope 3 at $DIR/dead_store_elimination.rs:16:5: 16:12
                                           // mir::Constant
                                           // + span: $DIR/dead_store_elimination.rs:16:5: 16:9
                                           // + literal: Const { ty: fn(i32) {read::<i32>}, val: Value(Scalar(<ZST>)) }
      }
  
      bb2: {
          StorageDead(_9);                 // scope 3 at $DIR/dead_store_elimination.rs:16:11: 16:12
          StorageDead(_8);                 // scope 3 at $DIR/dead_store_elimination.rs:16:12: 16:13
          StorageLive(_10);                // scope 3 at $DIR/dead_store_elimination.rs:20:9: 20:14
-         (_10.0: u32) = const 20_u32;     // scope 3 at $DIR/dead_store_elimination.rs:20:17: 20:22
-         (_10.0: u32) = const 21_u32;     // scope 4 at $DIR/dead_store_elimination.rs:21:5: 21:13
+         nop;                             // scope 3 at $DIR/dead_store_elimination.rs:20:17: 20:22
+         nop;                             // scope 4 at $DIR/dead_store_elimination.rs:21:5: 21:13
          (_10.0: u32) = const 22_u32;     // scope 4 at $DIR/dead_store_elimination.rs:22:5: 22:13
          StorageLive(_11);                // scope 4 at $DIR/dead_store_elimination.rs:23:5: 23:12
          StorageLive(_12);                // scope 4 at $DIR/dead_store_elimination.rs:23:10: 23:11
          _12 = const S(22_u32);           // scope 4 at $DIR/dead_store_elimination.rs:23:10: 23:11
                                           // ty::Const
                                           // + ty: coverage::S
                                           // + val: Value(Scalar(0x00000016))
                                           // mir::Constant
                                           // + span: $DIR/dead_store_elimination.rs:23:10: 23:11
                                           // + literal: Const { ty: coverage::S, val: Value(Scalar(0x00000016)) }
          _11 = read::<S>(const S(22_u32)) -> bb3; // scope 4 at $DIR/dead_store_elimination.rs:23:5: 23:12
                                           // mir::Constant
                                           // + span: $DIR/dead_store_elimination.rs:23:5: 23:9
                                           // + literal: Const { ty: fn(coverage::S) {read::<coverage::S>}, val: Value(Scalar(<ZST>)) }
                                           // ty::Const
                                           // + ty: coverage::S
                                           // + val: Value(Scalar(0x00000016))
                                           // mir::Constant
                                           // + span: $DIR/dead_store_elimination.rs:23:5: 23:12
                                           // + literal: Const { ty: coverage::S, val: Value(Scalar(0x00000016)) }
      }
  
      bb3: {
          StorageDead(_12);                // scope 4 at $DIR/dead_store_elimination.rs:23:11: 23:12
          StorageDead(_11);                // scope 4 at $DIR/dead_store_elimination.rs:23:12: 23:13
          StorageLive(_13);                // scope 4 at $DIR/dead_store_elimination.rs:25:9: 25:14
-         (_13.0: u32) = const 30_u32;     // scope 4 at $DIR/dead_store_elimination.rs:25:17: 25:22
-         (_13.0: u32) = const 31_u32;     // scope 5 at $DIR/dead_store_elimination.rs:26:5: 26:13
+         nop;                             // scope 4 at $DIR/dead_store_elimination.rs:25:17: 25:22
+         nop;                             // scope 5 at $DIR/dead_store_elimination.rs:26:5: 26:13
          StorageLive(_14);                // scope 5 at $DIR/dead_store_elimination.rs:27:9: 27:14
-         (_14.0: u32) = const 32_u32;     // scope 5 at $DIR/dead_store_elimination.rs:27:9: 27:14
+         nop;                             // scope 5 at $DIR/dead_store_elimination.rs:27:9: 27:14
          _13 = const S(32_u32);           // scope 5 at $DIR/dead_store_elimination.rs:27:5: 27:14
                                           // ty::Const
                                           // + ty: coverage::S
                                           // + val: Value(Scalar(0x00000020))
                                           // mir::Constant
                                           // + span: $DIR/dead_store_elimination.rs:27:5: 27:14
                                           // + literal: Const { ty: coverage::S, val: Value(Scalar(0x00000020)) }
          StorageDead(_14);                // scope 5 at $DIR/dead_store_elimination.rs:27:13: 27:14
          StorageLive(_15);                // scope 5 at $DIR/dead_store_elimination.rs:28:5: 28:12
          StorageLive(_16);                // scope 5 at $DIR/dead_store_elimination.rs:28:10: 28:11
          _16 = const S(32_u32);           // scope 5 at $DIR/dead_store_elimination.rs:28:10: 28:11
                                           // ty::Const
                                           // + ty: coverage::S
                                           // + val: Value(Scalar(0x00000020))
                                           // mir::Constant
                                           // + span: $DIR/dead_store_elimination.rs:28:10: 28:11
                                           // + literal: Const { ty: coverage::S, val: Value(Scalar(0x00000020)) }
          _15 = read::<S>(const S(32_u32)) -> bb4; // scope 5 at $DIR/dead_store_elimination.rs:28:5: 28:12
                                           // mir::Constant
                                           // + span: $DIR/dead_store_elimination.rs:28:5: 28:9
                                           // + literal: Const { ty: fn(coverage::S) {read::<coverage::S>}, val: Value(Scalar(<ZST>)) }
                                           // ty::Const
                                           // + ty: coverage::S
                                           // + val: Value(Scalar(0x00000020))
                                           // mir::Constant
                                           // + span: $DIR/dead_store_elimination.rs:28:5: 28:12
                                           // + literal: Const { ty: coverage::S, val: Value(Scalar(0x00000020)) }
      }
  
      bb4: {
          StorageDead(_16);                // scope 5 at $DIR/dead_store_elimination.rs:28:11: 28:12
          StorageDead(_15);                // scope 5 at $DIR/dead_store_elimination.rs:28:12: 28:13
          StorageLive(_17);                // scope 5 at $DIR/dead_store_elimination.rs:30:9: 30:14
-         _17 = const 40_i32;              // scope 5 at $DIR/dead_store_elimination.rs:30:17: 30:19
-         _17 = const 41_i32;              // scope 6 at $DIR/dead_store_elimination.rs:31:5: 31:11
+         nop;                             // scope 5 at $DIR/dead_store_elimination.rs:30:17: 30:19
+         nop;                             // scope 6 at $DIR/dead_store_elimination.rs:31:5: 31:11
          nop;                             // scope 0 at $DIR/dead_store_elimination.rs:6:19: 33:2
          StorageDead(_17);                // scope 5 at $DIR/dead_store_elimination.rs:33:1: 33:2
          StorageDead(_13);                // scope 4 at $DIR/dead_store_elimination.rs:33:1: 33:2
          StorageDead(_10);                // scope 3 at $DIR/dead_store_elimination.rs:33:1: 33:2
          StorageDead(_6);                 // scope 2 at $DIR/dead_store_elimination.rs:33:1: 33:2
          StorageDead(_5);                 // scope 2 at $DIR/dead_store_elimination.rs:33:1: 33:2
          StorageDead(_4);                 // scope 1 at $DIR/dead_store_elimination.rs:33:1: 33:2
          StorageDead(_1);                 // scope 0 at $DIR/dead_store_elimination.rs:33:1: 33:2
          return;                          // scope 0 at $DIR/dead_store_elimination.rs:33:2: 33:2
      }
  }
  
