// MIR for `try_identity` after SimplifyBranchSame

fn try_identity(_1: Result<u32, i32>) -> Result<u32, i32> {
    debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:7:17: 7:18
    let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:7:41: 7:57
    let _2: u32;                         // in scope 0 at $DIR/simplify_try.rs:8:9: 8:10
    let mut _3: std::ops::ControlFlow<std::result::Result<!, i32>, u32>; // in scope 0 at $DIR/simplify_try.rs:8:13: 8:15
    let mut _4: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:8:13: 8:14
    let mut _5: isize;                   // in scope 0 at $DIR/simplify_try.rs:8:13: 8:15
    let _6: std::result::Result<!, i32>; // in scope 0 at $DIR/simplify_try.rs:8:14: 8:15
    let mut _7: !;                       // in scope 0 at $DIR/simplify_try.rs:8:14: 8:15
    let mut _8: std::result::Result<!, i32>; // in scope 0 at $DIR/simplify_try.rs:8:14: 8:15
    let _9: u32;                         // in scope 0 at $DIR/simplify_try.rs:8:13: 8:15
    let mut _10: u32;                    // in scope 0 at $DIR/simplify_try.rs:9:8: 9:9
    scope 1 {
        debug y => _2;                   // in scope 1 at $DIR/simplify_try.rs:8:9: 8:10
    }
    scope 2 {
        debug holder => _6;              // in scope 2 at $DIR/simplify_try.rs:8:14: 8:15
        scope 3 {
            scope 9 (inlined <Result<u32, i32> as FromResidual<Result<!, i32>>>::from_residual) { // at $DIR/simplify_try.rs:8:13: 8:15
                debug x => _8;           // in scope 9 at $DIR/simplify_try.rs:8:13: 8:15
                let _17: i32;            // in scope 9 at $DIR/simplify_try.rs:8:13: 8:15
                let mut _18: i32;        // in scope 9 at $DIR/simplify_try.rs:8:13: 8:15
                let mut _19: i32;        // in scope 9 at $DIR/simplify_try.rs:8:13: 8:15
                scope 10 {
                    debug e => _17;      // in scope 10 at $DIR/simplify_try.rs:8:13: 8:15
                    scope 11 (inlined <i32 as From<i32>>::from) { // at $DIR/simplify_try.rs:8:13: 8:15
                        debug t => _19;  // in scope 11 at $DIR/simplify_try.rs:8:13: 8:15
                    }
                }
            }
        }
    }
    scope 4 {
        debug val => _9;                 // in scope 4 at $DIR/simplify_try.rs:8:13: 8:15
        scope 5 {
        }
    }
    scope 6 (inlined <Result<u32, i32> as Try>::branch) { // at $DIR/simplify_try.rs:8:13: 8:15
        debug self => _4;                // in scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        let mut _11: isize;              // in scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        let _12: u32;                    // in scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        let mut _13: u32;                // in scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        let _14: i32;                    // in scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        let mut _15: std::result::Result<!, i32>; // in scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        let mut _16: i32;                // in scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        scope 7 {
            debug c => _12;              // in scope 7 at $DIR/simplify_try.rs:8:13: 8:15
        }
        scope 8 {
            debug e => _14;              // in scope 8 at $DIR/simplify_try.rs:8:13: 8:15
        }
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at $DIR/simplify_try.rs:8:9: 8:10
        StorageLive(_3);                 // scope 0 at $DIR/simplify_try.rs:8:13: 8:15
        StorageLive(_4);                 // scope 0 at $DIR/simplify_try.rs:8:13: 8:14
        _4 = _1;                         // scope 0 at $DIR/simplify_try.rs:8:13: 8:14
        StorageLive(_11);                // scope 0 at $DIR/simplify_try.rs:8:13: 8:15
        _11 = discriminant(_4);          // scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        switchInt(move _11) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]; // scope 6 at $DIR/simplify_try.rs:8:13: 8:15
    }

    bb1: {
        StorageDead(_11);                // scope 0 at $DIR/simplify_try.rs:8:13: 8:15
        StorageDead(_4);                 // scope 0 at $DIR/simplify_try.rs:8:14: 8:15
        _5 = discriminant(_3);           // scope 0 at $DIR/simplify_try.rs:8:13: 8:15
        switchInt(move _5) -> [0_isize: bb2, otherwise: bb3]; // scope 0 at $DIR/simplify_try.rs:8:13: 8:15
    }

    bb2: {
        StorageLive(_9);                 // scope 0 at $DIR/simplify_try.rs:8:13: 8:15
        _9 = ((_3 as Continue).0: u32);  // scope 0 at $DIR/simplify_try.rs:8:13: 8:15
        _2 = _9;                         // scope 5 at $DIR/simplify_try.rs:8:13: 8:15
        StorageDead(_9);                 // scope 0 at $DIR/simplify_try.rs:8:14: 8:15
        StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:8:15: 8:16
        StorageLive(_10);                // scope 1 at $DIR/simplify_try.rs:9:8: 9:9
        _10 = _2;                        // scope 1 at $DIR/simplify_try.rs:9:8: 9:9
        ((_0 as Ok).0: u32) = move _10;  // scope 1 at $DIR/simplify_try.rs:9:5: 9:10
        discriminant(_0) = 0;            // scope 1 at $DIR/simplify_try.rs:9:5: 9:10
        StorageDead(_10);                // scope 1 at $DIR/simplify_try.rs:9:9: 9:10
        StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:10:1: 10:2
        return;                          // scope 0 at $DIR/simplify_try.rs:10:2: 10:2
    }

    bb3: {
        StorageLive(_6);                 // scope 0 at $DIR/simplify_try.rs:8:14: 8:15
        _6 = ((_3 as Break).0: std::result::Result<!, i32>); // scope 0 at $DIR/simplify_try.rs:8:14: 8:15
        StorageLive(_8);                 // scope 3 at $DIR/simplify_try.rs:8:14: 8:15
        _8 = _6;                         // scope 3 at $DIR/simplify_try.rs:8:14: 8:15
        StorageLive(_17);                // scope 9 at $DIR/simplify_try.rs:8:13: 8:15
        _17 = move ((_8 as Err).0: i32); // scope 9 at $DIR/simplify_try.rs:8:13: 8:15
        StorageLive(_18);                // scope 10 at $DIR/simplify_try.rs:8:13: 8:15
        StorageLive(_19);                // scope 10 at $DIR/simplify_try.rs:8:13: 8:15
        _19 = move _17;                  // scope 10 at $DIR/simplify_try.rs:8:13: 8:15
        _18 = move _19;                  // scope 11 at $DIR/simplify_try.rs:8:13: 8:15
        StorageDead(_19);                // scope 10 at $DIR/simplify_try.rs:8:13: 8:15
        ((_0 as Err).0: i32) = move _18; // scope 10 at $DIR/simplify_try.rs:8:13: 8:15
        discriminant(_0) = 1;            // scope 10 at $DIR/simplify_try.rs:8:13: 8:15
        StorageDead(_18);                // scope 10 at $DIR/simplify_try.rs:8:13: 8:15
        StorageDead(_17);                // scope 9 at $DIR/simplify_try.rs:8:13: 8:15
        StorageDead(_8);                 // scope 3 at $DIR/simplify_try.rs:8:14: 8:15
        StorageDead(_6);                 // scope 0 at $DIR/simplify_try.rs:8:14: 8:15
        StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:8:15: 8:16
        StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:10:1: 10:2
        return;                          // scope 0 at $DIR/simplify_try.rs:10:2: 10:2
    }

    bb4: {
        StorageLive(_14);                // scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        _14 = move ((_4 as Err).0: i32); // scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        StorageLive(_15);                // scope 8 at $DIR/simplify_try.rs:8:13: 8:15
        StorageLive(_16);                // scope 8 at $DIR/simplify_try.rs:8:13: 8:15
        _16 = move _14;                  // scope 8 at $DIR/simplify_try.rs:8:13: 8:15
        ((_15 as Err).0: i32) = move _16; // scope 8 at $DIR/simplify_try.rs:8:13: 8:15
        discriminant(_15) = 1;           // scope 8 at $DIR/simplify_try.rs:8:13: 8:15
        StorageDead(_16);                // scope 8 at $DIR/simplify_try.rs:8:13: 8:15
        ((_3 as Break).0: std::result::Result<!, i32>) = move _15; // scope 8 at $DIR/simplify_try.rs:8:13: 8:15
        discriminant(_3) = 1;            // scope 8 at $DIR/simplify_try.rs:8:13: 8:15
        StorageDead(_15);                // scope 8 at $DIR/simplify_try.rs:8:13: 8:15
        StorageDead(_14);                // scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        goto -> bb1;                     // scope 6 at $DIR/simplify_try.rs:8:13: 8:15
    }

    bb5: {
        unreachable;                     // scope 6 at $DIR/simplify_try.rs:8:13: 8:15
    }

    bb6: {
        StorageLive(_12);                // scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        _12 = move ((_4 as Ok).0: u32);  // scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        StorageLive(_13);                // scope 7 at $DIR/simplify_try.rs:8:13: 8:15
        _13 = move _12;                  // scope 7 at $DIR/simplify_try.rs:8:13: 8:15
        ((_3 as Continue).0: u32) = move _13; // scope 7 at $DIR/simplify_try.rs:8:13: 8:15
        discriminant(_3) = 0;            // scope 7 at $DIR/simplify_try.rs:8:13: 8:15
        StorageDead(_13);                // scope 7 at $DIR/simplify_try.rs:8:13: 8:15
        StorageDead(_12);                // scope 6 at $DIR/simplify_try.rs:8:13: 8:15
        goto -> bb1;                     // scope 6 at $DIR/simplify_try.rs:8:13: 8:15
    }
}
