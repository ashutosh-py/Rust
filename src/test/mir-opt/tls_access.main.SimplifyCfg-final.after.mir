// MIR for `main` after SimplifyCfg-final

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at $DIR/tls-access.rs:6:11: 6:11
    let mut _2: *mut u8;                 // in scope 0 at $DIR/tls-access.rs:9:9: 9:12
    scope 1 {
        let _1: &u8;                     // in scope 1 at $DIR/tls-access.rs:8:13: 8:14
        scope 2 {
            debug a => _1;               // in scope 2 at $DIR/tls-access.rs:8:13: 8:14
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at $DIR/tls-access.rs:8:13: 8:14
        _1 = &/*tls*/ FOO;               // scope 1 at $DIR/tls-access.rs:8:17: 8:21
        StorageLive(_2);                 // scope 2 at $DIR/tls-access.rs:9:9: 9:12
        _2 = &raw /*tls*/ mut FOO;       // scope 2 at $DIR/tls-access.rs:9:9: 9:12
        (*_2) = const 42_u8;             // scope 2 at $DIR/tls-access.rs:9:9: 9:17
        StorageDead(_2);                 // scope 2 at $DIR/tls-access.rs:9:17: 9:18
        _0 = const ();                   // scope 1 at $DIR/tls-access.rs:7:5: 10:6
        StorageDead(_1);                 // scope 1 at $DIR/tls-access.rs:10:5: 10:6
        return;                          // scope 0 at $DIR/tls-access.rs:11:2: 11:2
    }
}
