- // MIR for `mixed_copy_b_id` before SimplifyArmIdentity
+ // MIR for `mixed_copy_b_id` after SimplifyArmIdentity
  
  fn mixed_copy_b_id(_1: MixedCopyB) -> MixedCopyB {
      debug x => _1;                       // in scope 0 at $DIR/simplify_arm_correctness.rs:25:20: 25:21
      let mut _0: MixedCopyB;              // return place in scope 0 at $DIR/simplify_arm_correctness.rs:25:38: 25:48
      let mut _2: isize;                   // in scope 0 at $DIR/simplify_arm_correctness.rs:27:9: 27:28
      let _3: u32;                         // in scope 0 at $DIR/simplify_arm_correctness.rs:27:23: 27:24
      let _4: std::string::String;         // in scope 0 at $DIR/simplify_arm_correctness.rs:27:26: 27:27
      let mut _5: u32;                     // in scope 0 at $DIR/simplify_arm_correctness.rs:27:46: 27:47
      let mut _6: std::string::String;     // in scope 0 at $DIR/simplify_arm_correctness.rs:27:49: 27:50
      let mut _7: bool;                    // in scope 0 at $DIR/simplify_arm_correctness.rs:30:1: 30:2
      let mut _8: isize;                   // in scope 0 at $DIR/simplify_arm_correctness.rs:30:1: 30:2
      let mut _9: isize;                   // in scope 0 at $DIR/simplify_arm_correctness.rs:30:1: 30:2
      scope 1 {
          debug a => _3;                   // in scope 1 at $DIR/simplify_arm_correctness.rs:27:23: 27:24
          debug b => _4;                   // in scope 1 at $DIR/simplify_arm_correctness.rs:27:26: 27:27
      }
  
      bb0: {
          _7 = const false;                // scope 0 at $DIR/simplify_arm_correctness.rs:26:11: 26:12
          _7 = const true;                 // scope 0 at $DIR/simplify_arm_correctness.rs:26:11: 26:12
          _2 = discriminant(_1);           // scope 0 at $DIR/simplify_arm_correctness.rs:26:11: 26:12
          switchInt(move _2) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/simplify_arm_correctness.rs:26:5: 26:12
      }
  
      bb1: {
          discriminant(_0) = 1;            // scope 0 at $DIR/simplify_arm_correctness.rs:28:26: 28:39
          goto -> bb3;                     // scope 0 at $DIR/simplify_arm_correctness.rs:28:26: 28:39
      }
  
      bb2: {
          StorageLive(_3);                 // scope 0 at $DIR/simplify_arm_correctness.rs:27:23: 27:24
          _3 = ((_1 as A).0: u32);         // scope 0 at $DIR/simplify_arm_correctness.rs:27:23: 27:24
          StorageLive(_4);                 // scope 0 at $DIR/simplify_arm_correctness.rs:27:26: 27:27
          _4 = move ((_1 as A).1: std::string::String); // scope 0 at $DIR/simplify_arm_correctness.rs:27:26: 27:27
          StorageLive(_5);                 // scope 1 at $DIR/simplify_arm_correctness.rs:27:46: 27:47
          _5 = _3;                         // scope 1 at $DIR/simplify_arm_correctness.rs:27:46: 27:47
          StorageLive(_6);                 // scope 1 at $DIR/simplify_arm_correctness.rs:27:49: 27:50
          _6 = move _4;                    // scope 1 at $DIR/simplify_arm_correctness.rs:27:49: 27:50
          ((_0 as A).0: u32) = move _5;    // scope 1 at $DIR/simplify_arm_correctness.rs:27:32: 27:51
          ((_0 as A).1: std::string::String) = move _6; // scope 1 at $DIR/simplify_arm_correctness.rs:27:32: 27:51
          discriminant(_0) = 0;            // scope 1 at $DIR/simplify_arm_correctness.rs:27:32: 27:51
          StorageDead(_6);                 // scope 1 at $DIR/simplify_arm_correctness.rs:27:50: 27:51
          StorageDead(_5);                 // scope 1 at $DIR/simplify_arm_correctness.rs:27:50: 27:51
          StorageDead(_4);                 // scope 0 at $DIR/simplify_arm_correctness.rs:27:50: 27:51
          StorageDead(_3);                 // scope 0 at $DIR/simplify_arm_correctness.rs:27:50: 27:51
          goto -> bb3;                     // scope 0 at $DIR/simplify_arm_correctness.rs:30:1: 30:2
      }
  
      bb3: {
          _8 = discriminant(_1);           // scope 0 at $DIR/simplify_arm_correctness.rs:30:1: 30:2
          return;                          // scope 0 at $DIR/simplify_arm_correctness.rs:30:2: 30:2
      }
  }
  
