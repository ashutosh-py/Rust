error: the type of the `self` parameter does not need to be arbitrary
  --> tests/ui/needless_arbitrary_self_type.rs:10:16
   |
LL |     pub fn bad(self: Self) {
   |                ^^^^^^^^^^
   |
   = note: `-D clippy::needless-arbitrary-self-type` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::needless_arbitrary_self_type)]`
help: consider to change this parameter to
   |
LL |     pub fn bad(self) {
   |                ~~~~

error: the type of the `self` parameter does not need to be arbitrary
  --> tests/ui/needless_arbitrary_self_type.rs:18:20
   |
LL |     pub fn mut_bad(mut self: Self) {
   |                    ^^^^^^^^^^^^^^
   |
help: consider to change this parameter to
   |
LL |     pub fn mut_bad(mut self) {
   |                    ~~~~~~~~

error: the type of the `self` parameter does not need to be arbitrary
  --> tests/ui/needless_arbitrary_self_type.rs:26:20
   |
LL |     pub fn ref_bad(self: &Self) {
   |                    ^^^^^^^^^^^
   |
help: consider to change this parameter to
   |
LL |     pub fn ref_bad(&self) {
   |                    ~~~~~

error: the type of the `self` parameter does not need to be arbitrary
  --> tests/ui/needless_arbitrary_self_type.rs:34:38
   |
LL |     pub fn ref_bad_with_lifetime<'a>(self: &'a Self) {
   |                                      ^^^^^^^^^^^^^^
   |
help: consider to change this parameter to
   |
LL |     pub fn ref_bad_with_lifetime<'a>(&'a self) {
   |                                      ~~~~~~~~

error: the type of the `self` parameter does not need to be arbitrary
  --> tests/ui/needless_arbitrary_self_type.rs:42:24
   |
LL |     pub fn mut_ref_bad(self: &mut Self) {
   |                        ^^^^^^^^^^^^^^^
   |
help: consider to change this parameter to
   |
LL |     pub fn mut_ref_bad(&mut self) {
   |                        ~~~~~~~~~

error: the type of the `self` parameter does not need to be arbitrary
  --> tests/ui/needless_arbitrary_self_type.rs:50:42
   |
LL |     pub fn mut_ref_bad_with_lifetime<'a>(self: &'a mut Self) {
   |                                          ^^^^^^^^^^^^^^^^^^
   |
help: consider to change this parameter to
   |
LL |     pub fn mut_ref_bad_with_lifetime<'a>(&'a mut self) {
   |                                          ~~~~~~~~~~~~

error: aborting due to 6 previous errors

