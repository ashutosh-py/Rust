error: an inclusive range would be more readable
  --> $DIR/range_plus_minus_one.rs:31:14
   |
LL |     for _ in 0..3 + 1 {}
   |              ^^^^^^^^
   |
   = note: `-D clippy::range-plus-one` implied by `-D warnings`
help: use an inclusive range instead
   |
LL -     for _ in 0..3 + 1 {}
LL +     for _ in 0..=3  {}
   |

error: an inclusive range would be more readable
  --> $DIR/range_plus_minus_one.rs:34:14
   |
LL |     for _ in 0..1 + 5 {}
   |              ^^^^^^^^
   |
help: use an inclusive range instead
   |
LL -     for _ in 0..1 + 5 {}
LL +     for _ in 0..= 5 {}
   |

error: an inclusive range would be more readable
  --> $DIR/range_plus_minus_one.rs:37:14
   |
LL |     for _ in 1..1 + 1 {}
   |              ^^^^^^^^
   |
help: use an inclusive range instead
   |
LL -     for _ in 1..1 + 1 {}
LL +     for _ in 1..= 1 {}
   |

error: an inclusive range would be more readable
  --> $DIR/range_plus_minus_one.rs:43:14
   |
LL |     for _ in 0..(1 + f()) {}
   |              ^^^^^^^^^^^^
   |
help: use an inclusive range instead
   |
LL -     for _ in 0..(1 + f()) {}
LL +     for _ in 0..=( f()) {}
   |

error: an exclusive range would be more readable
  --> $DIR/range_plus_minus_one.rs:47:13
   |
LL |     let _ = ..=11 - 1;
   |             ^^^^^^^^^
   |
   = note: `-D clippy::range-minus-one` implied by `-D warnings`
help: use an exclusive range instead
   |
LL -     let _ = ..=11 - 1;
LL +     let _ = ..11 ;
   |

error: an exclusive range would be more readable
  --> $DIR/range_plus_minus_one.rs:48:13
   |
LL |     let _ = ..=(11 - 1);
   |             ^^^^^^^^^^^
   |
help: use an exclusive range instead
   |
LL -     let _ = ..=(11 - 1);
LL +     let _ = ..(11 );
   |

error: an inclusive range would be more readable
  --> $DIR/range_plus_minus_one.rs:49:13
   |
LL |     let _ = (1..11 + 1);
   |             ^^^^^^^^^^^
   |
help: use an inclusive range instead
   |
LL -     let _ = (1..11 + 1);
LL +     let _ = (1..=11 );
   |

error: an inclusive range would be more readable
  --> $DIR/range_plus_minus_one.rs:50:13
   |
LL |     let _ = (f() + 1)..(f() + 1);
   |             ^^^^^^^^^^^^^^^^^^^^
   |
help: use an inclusive range instead
   |
LL -     let _ = (f() + 1)..(f() + 1);
LL +     let _ = (f() + 1)..=(f() );
   |

error: an inclusive range would be more readable
  --> $DIR/range_plus_minus_one.rs:54:14
   |
LL |     for _ in 1..ONE + ONE {}
   |              ^^^^^^^^^^^^
   |
help: use an inclusive range instead
   |
LL -     for _ in 1..ONE + ONE {}
LL +     for _ in 1..= ONE {}
   |

error: an inclusive range would be more readable
  --> $DIR/range_plus_minus_one.rs:11:18
   |
LL |         for i in 0..$m + 1 {
   |                  ^^^^^^^^^
...
LL |     macro_plus_one!(5);
   |     ------------------ in this macro invocation
   |
   = note: this error originates in the macro `macro_plus_one` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use an inclusive range instead
   |
LL -         for i in 0..$m + 1 {
LL +         for i in 0..=$m  {
   |

error: an exclusive range would be more readable
  --> $DIR/range_plus_minus_one.rs:19:18
   |
LL |         for i in 0..=$m - 1 {
   |                  ^^^^^^^^^^
...
LL |     macro_minus_one!(5);
   |     ------------------- in this macro invocation
   |
   = note: this error originates in the macro `macro_minus_one` (in Nightly builds, run with -Z macro-backtrace for more info)
help: use an exclusive range instead
   |
LL -         for i in 0..=$m - 1 {
LL +         for i in 0..$m  {
   |

error: aborting due to 11 previous errors

