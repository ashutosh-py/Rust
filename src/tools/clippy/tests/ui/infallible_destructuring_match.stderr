error: you seem to be trying to use `match` to destructure a single infallible pattern. Consider using `let`
  --> tests/ui/infallible_destructuring_match.rs:28:5
   |
LL | /     let data = match wrapper {
LL | |         SingleVariantEnum::Variant(i) => i,
LL | |     };
   | |______^
   |
   = note: `-D clippy::infallible-destructuring-match` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::infallible_destructuring_match)]`
help: try
   |
LL |     let SingleVariantEnum::Variant(data) = wrapper;
   |

error: you seem to be trying to use `match` to destructure a single infallible pattern. Consider using `let`
  --> tests/ui/infallible_destructuring_match.rs:60:5
   |
LL | /     let data = match wrapper {
LL | |         TupleStruct(i) => i,
LL | |     };
   | |______^
   |
help: try
   |
LL |     let TupleStruct(data) = wrapper;
   |

error: you seem to be trying to use `match` to destructure a single infallible pattern. Consider using `let`
  --> tests/ui/infallible_destructuring_match.rs:84:5
   |
LL | /     let data = match wrapper {
LL | |         TupleStructWithNonCopy(ref n) => n,
LL | |     };
   | |______^
   |
help: try
   |
LL |     let TupleStructWithNonCopy(ref data) = wrapper;
   |

error: you seem to be trying to use `match` to destructure a single infallible pattern. Consider using `let`
  --> tests/ui/infallible_destructuring_match.rs:103:5
   |
LL | /     let data = match wrapper {
LL | |         Ok(i) => i,
LL | |     };
   | |______^
   |
help: try
   |
LL |     let Ok(data) = wrapper;
   |

error: aborting due to 4 previous errors

