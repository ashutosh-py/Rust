error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:10:13
   |
LL |         let guard = x.lock().unwrap();
   |             ^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:12:15
   |
LL |         baz().await
   |               ^^^^^
   = note: `-D clippy::await-holding-lock` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::await_holding_lock)]`

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:26:13
   |
LL |         let guard = x.read().unwrap();
   |             ^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:28:15
   |
LL |         baz().await
   |               ^^^^^

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:32:13
   |
LL |         let mut guard = x.write().unwrap();
   |             ^^^^^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:34:15
   |
LL |         baz().await
   |               ^^^^^

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:54:13
   |
LL |         let guard = x.lock().unwrap();
   |             ^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:57:28
   |
LL |         let second = baz().await;
   |                            ^^^^^
LL |
LL |         let third = baz().await;
   |                           ^^^^^

error: this `MutexGuard` is passed in through an argument or captured by the closure body
  --> tests/ui/await_holding_lock.rs:64:30
   |
LL |     pub async fn equally_bad(x: MutexGuard<'_, u32>) {
   |                              ^
   |
   = help: consider using an async-aware `Mutex` type

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:73:17
   |
LL |             let guard = x.lock().unwrap();
   |                 ^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:75:19
   |
LL |             baz().await
   |                   ^^^^^

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:86:17
   |
LL |             let guard = x.lock().unwrap();
   |                 ^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:88:19
   |
LL |             baz().await
   |                   ^^^^^

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:99:13
   |
LL |         let guard = x.lock();
   |             ^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:101:15
   |
LL |         baz().await
   |               ^^^^^

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:115:13
   |
LL |         let guard = x.read();
   |             ^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:117:15
   |
LL |         baz().await
   |               ^^^^^

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:121:13
   |
LL |         let mut guard = x.write();
   |             ^^^^^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:123:15
   |
LL |         baz().await
   |               ^^^^^

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:143:13
   |
LL |         let guard = x.lock();
   |             ^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:146:28
   |
LL |         let second = baz().await;
   |                            ^^^^^
LL |
LL |         let third = baz().await;
   |                           ^^^^^

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:157:17
   |
LL |             let guard = x.lock();
   |                 ^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:159:19
   |
LL |             baz().await
   |                   ^^^^^

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:170:17
   |
LL |             let guard = x.lock();
   |                 ^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:172:19
   |
LL |             baz().await
   |                   ^^^^^

error: this `MutexGuard` is held across an `await` point
  --> tests/ui/await_holding_lock.rs:191:9
   |
LL |     let mut guard = x.lock().unwrap();
   |         ^^^^^^^^^
   |
   = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling await
note: these are all the `await` points this lock is held through
  --> tests/ui/await_holding_lock.rs:195:11
   |
LL |     baz().await;
   |           ^^^^^

error: aborting due to 14 previous errors

