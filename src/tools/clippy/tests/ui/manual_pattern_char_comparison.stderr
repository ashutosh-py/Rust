error: this manual char comparison can be written more succinctly
  --> tests/ui/manual_pattern_char_comparison.rs:11:31
   |
LL |     sentence.trim_end_matches(|c: char| c == '.' || c == ',' || c == '!' || c == '?');
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-D clippy::manual-pattern-char-comparison` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::manual_pattern_char_comparison)]`
help: consider using an array of `char`
   |
LL |     sentence.trim_end_matches(['.', ',', '!', '?']);
   |                               ~~~~~~~~~~~~~~~~~~~~

error: this manual char comparison can be written more succinctly
  --> tests/ui/manual_pattern_char_comparison.rs:12:20
   |
LL |     sentence.split(|c: char| c == '\n' || c == 'X');
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider using an array of `char`
   |
LL |     sentence.split(['\n', 'X']);
   |                    ~~~~~~~~~~~

error: this manual char comparison can be written more succinctly
  --> tests/ui/manual_pattern_char_comparison.rs:13:20
   |
LL |     sentence.split(|c| c == '\n' || c == 'X');
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider using an array of `char`
   |
LL |     sentence.split(['\n', 'X']);
   |                    ~~~~~~~~~~~

error: this manual char comparison can be written more succinctly
  --> tests/ui/manual_pattern_char_comparison.rs:14:24
   |
LL |     sentence.splitn(3, |c: char| c == 'X');
   |                        ^^^^^^^^^^^^^^^^^^
   |
help: consider using a `char`
   |
LL |     sentence.splitn(3, 'X');
   |                        ~~~

error: this manual char comparison can be written more succinctly
  --> tests/ui/manual_pattern_char_comparison.rs:17:24
   |
LL |     sentence.splitn(3, |c: char| c == char_compare);
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider using a `char`
   |
LL |     sentence.splitn(3, char_compare);
   |                        ~~~~~~~~~~~~

error: this manual char comparison can be written more succinctly
  --> tests/ui/manual_pattern_char_comparison.rs:18:20
   |
LL |     sentence.split(|c: char| matches!(c, '\n' | 'X' | 'Y'));
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider using an array of `char`
   |
LL |     sentence.split(['\n', 'X', 'Y']);
   |                    ~~~~~~~~~~~~~~~~

error: this manual char comparison can be written more succinctly
  --> tests/ui/manual_pattern_char_comparison.rs:19:24
   |
LL |     sentence.splitn(3, |c: char| matches!(c, 'X'));
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider using a `char`
   |
LL |     sentence.splitn(3, 'X');
   |                        ~~~

error: this manual char comparison can be written more succinctly
  --> tests/ui/manual_pattern_char_comparison.rs:20:24
   |
LL |     sentence.splitn(3, |c: char| matches!(c, 'X' | 'W'));
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider using an array of `char`
   |
LL |     sentence.splitn(3, ['X', 'W']);
   |                        ~~~~~~~~~~

error: this manual char comparison can be written more succinctly
  --> tests/ui/manual_pattern_char_comparison.rs:21:19
   |
LL |     sentence.find(|c| c == 'ðŸŽˆ');
   |                   ^^^^^^^^^^^^^
   |
help: consider using a `char`
   |
LL |     sentence.find('ðŸŽˆ');
   |                   ~~~~

error: this manual char comparison can be written more succinctly
  --> tests/ui/manual_pattern_char_comparison.rs:60:31
   |
LL |     sentence.trim_end_matches(|c: char| c == '.' || c == ',' || c == '!' || c == '?');
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider using an array of `char`
   |
LL |     sentence.trim_end_matches(['.', ',', '!', '?']);
   |                               ~~~~~~~~~~~~~~~~~~~~

error: aborting due to 10 previous errors

