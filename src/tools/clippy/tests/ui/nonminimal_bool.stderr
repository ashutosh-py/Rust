error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:17:13
   |
LL |     let _ = !true;
   |             ^^^^^
   |
   = note: `-D clippy::nonminimal-bool` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::nonminimal_bool)]`
help: try
   |
LL |     let _ = false;
   |             ~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:20:13
   |
LL |     let _ = !false;
   |             ^^^^^^
   |
help: try
   |
LL |     let _ = true;
   |             ~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:22:13
   |
LL |     let _ = !!a;
   |             ^^^
   |
help: try
   |
LL |     let _ = a;
   |             ~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:24:13
   |
LL |     let _ = false || a;
   |             ^^^^^^^^^^
   |
help: try
   |
LL |     let _ = a;
   |             ~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:29:13
   |
LL |     let _ = !(!a && b);
   |             ^^^^^^^^^^
   |
help: try
   |
LL |     let _ = a || !b;
   |             ~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:31:13
   |
LL |     let _ = !(!a || b);
   |             ^^^^^^^^^^
   |
help: try
   |
LL |     let _ = a && !b;
   |             ~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:33:13
   |
LL |     let _ = !a && !(b && c);
   |             ^^^^^^^^^^^^^^^
   |
help: try
   |
LL |     let _ = !(a || b && c);
   |             ~~~~~~~~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:42:13
   |
LL |     let _ = a == b && c == 5 && a == b;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: try
   |
LL |     let _ = !(a != b || c != 5);
   |             ~~~~~~~~~~~~~~~~~~~
LL |     let _ = a == b && c == 5;
   |             ~~~~~~~~~~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:44:13
   |
LL |     let _ = a == b || c == 5 || a == b;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: try
   |
LL |     let _ = !(a != b && c != 5);
   |             ~~~~~~~~~~~~~~~~~~~
LL |     let _ = a == b || c == 5;
   |             ~~~~~~~~~~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:46:13
   |
LL |     let _ = a == b && c == 5 && b == a;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: try
   |
LL |     let _ = !(a != b || c != 5);
   |             ~~~~~~~~~~~~~~~~~~~
LL |     let _ = a == b && c == 5;
   |             ~~~~~~~~~~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:48:13
   |
LL |     let _ = a != b || !(a != b || c == d);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: try
   |
LL |     let _ = !(a == b && c == d);
   |             ~~~~~~~~~~~~~~~~~~~
LL |     let _ = a != b || c != d;
   |             ~~~~~~~~~~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:50:13
   |
LL |     let _ = a != b && !(a != b && c == d);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: try
   |
LL |     let _ = !(a == b || c == d);
   |             ~~~~~~~~~~~~~~~~~~~
LL |     let _ = a != b && c != d;
   |             ~~~~~~~~~~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:81:8
   |
LL |     if matches!(true, true) && true {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: try
   |
LL |     if matches!(true, true) {
   |        ~~~~~~~~~~~~~~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:161:8
   |
LL |     if !(12 == a) {}
   |        ^^^^^^^^^^
   |
help: try
   |
LL |     if 12 != a {}
   |        ~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:162:8
   |
LL |     if !(a == 12) {}
   |        ^^^^^^^^^^
   |
help: try
   |
LL |     if a != 12 {}
   |        ~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:163:8
   |
LL |     if !(12 != a) {}
   |        ^^^^^^^^^^
   |
help: try
   |
LL |     if 12 == a {}
   |        ~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:164:8
   |
LL |     if !(a != 12) {}
   |        ^^^^^^^^^^
   |
help: try
   |
LL |     if a == 12 {}
   |        ~~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:168:8
   |
LL |     if !b == true {}
   |        ^^^^^^^^^^
   |
help: try
   |
LL |     if b != true {}
   |        ~~~~~~~~~

error: this comparison might be written more concisely
  --> tests/ui/nonminimal_bool.rs:168:8
   |
LL |     if !b == true {}
   |        ^^^^^^^^^^
   |
   = note: `-D clippy::bool-comparison` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::bool_comparison)]`
help: try simplifying it as shown
   |
LL |     if b != true {}
   |        ~~~~~~~~~

error: equality checks against true are unnecessary
  --> tests/ui/nonminimal_bool.rs:168:8
   |
LL |     if !b == true {}
   |        ^^^^^^^^^^
   |
help: try simplifying it as shown
   |
LL |     if !b {}
   |        ~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:169:8
   |
LL |     if !b != true {}
   |        ^^^^^^^^^^
   |
help: try
   |
LL |     if b == true {}
   |        ~~~~~~~~~

error: inequality checks against true can be replaced by a negation
  --> tests/ui/nonminimal_bool.rs:169:8
   |
LL |     if !b != true {}
   |        ^^^^^^^^^^
   |
help: try simplifying it as shown
   |
LL |     if !(!b) {}
   |        ~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:170:8
   |
LL |     if true == !b {}
   |        ^^^^^^^^^^
   |
help: try
   |
LL |     if true != b {}
   |        ~~~~~~~~~

error: this comparison might be written more concisely
  --> tests/ui/nonminimal_bool.rs:170:8
   |
LL |     if true == !b {}
   |        ^^^^^^^^^^
   |
help: try simplifying it as shown
   |
LL |     if true != b {}
   |        ~~~~~~~~~

error: equality checks against true are unnecessary
  --> tests/ui/nonminimal_bool.rs:170:8
   |
LL |     if true == !b {}
   |        ^^^^^^^^^^
   |
help: try simplifying it as shown
   |
LL |     if !b {}
   |        ~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:171:8
   |
LL |     if true != !b {}
   |        ^^^^^^^^^^
   |
help: try
   |
LL |     if true == b {}
   |        ~~~~~~~~~

error: inequality checks against true can be replaced by a negation
  --> tests/ui/nonminimal_bool.rs:171:8
   |
LL |     if true != !b {}
   |        ^^^^^^^^^^
   |
help: try simplifying it as shown
   |
LL |     if !(!b) {}
   |        ~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:172:8
   |
LL |     if !b == !c {}
   |        ^^^^^^^^
   |
help: try
   |
LL |     if b == c {}
   |        ~~~~~~

error: this boolean expression can be simplified
  --> tests/ui/nonminimal_bool.rs:173:8
   |
LL |     if !b != !c {}
   |        ^^^^^^^^
   |
help: try
   |
LL |     if b != c {}
   |        ~~~~~~

error: aborting due to 29 previous errors

