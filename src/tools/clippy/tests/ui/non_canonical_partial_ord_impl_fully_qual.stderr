error: non-canonical implementation of `partial_cmp` on an `Ord` type
  --> tests/ui/non_canonical_partial_ord_impl_fully_qual.rs:23:1
   |
LL | / impl PartialOrd for A {
LL | |     fn partial_cmp(&self, other: &Self) -> Option<Ordering> {
LL | |         // NOTE: This suggestion is wrong, as `Ord` is not in scope. But this should be fine as it isn't
LL | |         // automatically applied
LL | |         todo!();
LL | |     }
LL | | }
   | |_^
   |
   = note: `-D clippy::non-canonical-partial-ord-impl` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::non_canonical_partial_ord_impl)]`
help: change this to
   |
LL |     fn partial_cmp(&self, other: &Self) -> Option<Ordering> { Some(self.cmp(other)) }
   |                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~

error: non-canonical implementation of `partial_cmp` on an `Ord` type
  --> tests/ui/non_canonical_partial_ord_impl_fully_qual.rs:46:1
   |
LL | / impl PartialOrd for B {
LL | |     fn partial_cmp(&self, other: &Self) -> Option<Ordering> {
LL | |         // This calls `B.cmp`, not `Ord::cmp`!
LL | |         Some(self.cmp(other))
LL | |     }
LL | | }
   | |_^
   |
help: change this to
   |
LL |     fn partial_cmp(&self, other: &Self) -> Option<Ordering> { Some(std::cmp::Ord::cmp(self, other)) }
   |                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: aborting due to 2 previous errors

