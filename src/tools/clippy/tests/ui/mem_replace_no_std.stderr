error: replacing an `Option` with `None`
  --> tests/ui/mem_replace_no_std.rs:24:13
   |
LL |     let _ = mem::replace(&mut an_option, None);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-D clippy::mem-replace-option-with-none` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::mem_replace_option_with_none)]`
help: consider `Option::take()` instead
   |
LL |     let _ = an_option.take();
   |             ~~~~~~~~~~~~~~~~

error: replacing an `Option` with `None`
  --> tests/ui/mem_replace_no_std.rs:26:13
   |
LL |     let _ = mem::replace(an_option, None);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider `Option::take()` instead
   |
LL |     let _ = an_option.take();
   |             ~~~~~~~~~~~~~~~~

error: replacing a value of type `T` with `T::default()` is better expressed using `core::mem::take`
  --> tests/ui/mem_replace_no_std.rs:31:13
   |
LL |     let _ = mem::replace(&mut refstr, "");
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-D clippy::mem-replace-with-default` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::mem_replace_with_default)]`
help: consider using
   |
LL |     let _ = core::mem::take(&mut refstr);
   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: replacing a value of type `T` with `T::default()` is better expressed using `core::mem::take`
  --> tests/ui/mem_replace_no_std.rs:34:13
   |
LL |     let _ = mem::replace(&mut slice, &[]);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider using
   |
LL |     let _ = core::mem::take(&mut slice);
   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: replacing an `Option` with `None`
  --> tests/ui/mem_replace_no_std.rs:77:13
   |
LL |     let _ = mem::replace(&mut f.0, None);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider `Option::take()` instead
   |
LL |     let _ = f.0.take();
   |             ~~~~~~~~~~

error: replacing an `Option` with `None`
  --> tests/ui/mem_replace_no_std.rs:78:13
   |
LL |     let _ = mem::replace(&mut *f, None);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider `Option::take()` instead
   |
LL |     let _ = (*f).take();
   |             ~~~~~~~~~~~

error: replacing an `Option` with `None`
  --> tests/ui/mem_replace_no_std.rs:79:13
   |
LL |     let _ = mem::replace(&mut b.opt, None);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider `Option::take()` instead
   |
LL |     let _ = b.opt.take();
   |             ~~~~~~~~~~~~

error: aborting due to 7 previous errors

