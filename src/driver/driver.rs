#[no_core];
extern mod core(vers = "0.5");
use core::*;

extern mod std(vers = "0.5");

#[cfg(rustc)]
extern mod self(name = "rustc", vers = "0.5");

#[cfg(rusti)]
extern mod self(name = "rusti", vers = "0.5");

#[cfg(cargo)]
extern mod self(name = "cargo", vers = "0.5");

#[cfg(rustdoc)]
extern mod self(name = "rustdoc", vers = "0.5");

#[cfg(fuzzer)]
extern mod self(name = "fuzzer", vers = "0.5");

#[cfg(core_test)]
extern mod self(name = "core", vers = "0.5");

#[cfg(std_test)]
extern mod self(name = "std", vers = "0.5");

#[cfg(syntax_test)]
extern mod self(name = "syntax", vers = "0.5");

#[cfg(rustc_test)]
extern mod self(name = "rustc", vers = "0.5");

#[cfg(rusti_test)]
extern mod self(name = "rusti", vers = "0.5");

#[cfg(rustdoc_test)]
extern mod self(name = "rustdoc", vers = "0.5");

#[cfg(cargo_test)]
extern mod self(name = "cargo", vers = "0.5");

#[cfg(cargo)]
#[cfg(fuzzer)]
#[cfg(rustdoc)]
#[cfg(rusti)]
#[cfg(rustc)]
fn main() { self::main() }

#[cfg(core_test)]
#[cfg(std_test)]
#[cfg(syntax_test)]
#[cfg(rustc_test)]
#[cfg(rusti_test)]
#[cfg(rustdoc_test)]
#[cfg(cargo_test)]
fn main() {
    let args = os::args();
    // The test vector generated by rustc
    let tests = self::__test::tests();
    std::test::test_main(args, tests)
}
